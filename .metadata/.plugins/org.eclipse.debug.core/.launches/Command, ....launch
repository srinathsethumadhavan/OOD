<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchConfiguration type="org.testng.eclipse.launchconfig">
<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.m2e.launchconfig.classpathProvider"/>
<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="org.testng.remote.RemoteTestNG"/>
<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="dcscloudproject"/>
<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.m2e.launchconfig.sourcepathProvider"/>
<mapAttribute key="org.testng.eclipse.ALL_CLASS_METHODS">
<mapEntry key="agent.AgentLogCollection" value="getAgentLogs;postVerboseLoggingOff;AgentLogCollection;downloadAgentLogs;resetAgentLog;getAgentLogs;postVerboseLoggingOn;resetAgentLog;getAgentLogDownloadStatus;getAgentLogResetStatus;getAgentVerboseLogConfig;postVerboseLoggingOn;updateAgentLogCommand;getToggleLoggingDetails;postVerboseLoggingOff"/>
<mapEntry key="agent.AgentManagement" value="expireTimeedOutCommands;getCommandsForDevice;verifyDownloadedFileFromUiAndActualFile;downloadCFTWithCuustomerDetails;deleteCommand;getDevice;getCommandScriptsForManagedFeature;createStoreApplicationJson;clearPendingCommandsForDevice;updateAgentInfo;getcommandNamesForSpecifiedOperationType;createCommand;downloadAgentInstallerScriptWithCuustomerDetails;stopMonitoringOfAgent;getCommand;deleteDevice;purgeCommands;downloadAgentInstallerScriptWithProxyDetails;createOrgUnit;updateCommand;AgentManagement;getAsset;getAssetAudit;enrollAgent;downloadAgentInstallerScriptForAllPlatforms;getManagedFeatureForManagedProduct;getValueForKeyFromJson;getAgentAuthToken;downloadAgentInstallerPackage;resetAgentInstallerKey;startMonitoringOfAgent;createFile;getIPSConfig;enrollAgent;modifyFileUsingSSH;updateSPOCDetailsInPropertyFile;getCommand;modifyFile;getManagedProduct;unregisterDevice;getCommandResult;changeCommandDates;getCommandsFromCouchbase;updateCommand;storeApplicationOnAsset;downloadAgentInstallerScriptWithCuustomerDetails;getManagedFeature;createDeviceId;navigateToAssetsPage;getAllSupportedFlatforms;downloadAgentInstallerScript;updateAgentInfo;createFileUsingSSH"/>
<mapEntry key="agent.AgentPackages" value="getAgentPackage;getFileName;AgentPackages;setFileName;setVersionKey;getVersionKey"/>
<mapEntry key="agent.Command" value="getCommand_type;getCommand_id;setCommand_id;setCommand_type;getCommand_state;setCommand_state;setCommand_data;getCommand_data"/>
<mapEntry key="agent.Commands" value="getCommands;setCommands"/>
<mapEntry key="agent.DownloadAgentPackage" value="DownloadAgentPackage;downloadAgent;clearAgentDownloadDir"/>
<mapEntry key="alertprofile.AlertConfigurationInfo" value="getAlertProfileId;addPolicyWithPolicyRule;toString;setAlertProfileId;addPolicyWithPolicyRule;addPolicyWithPolicyRule"/>
<mapEntry key="alertprofile.AlertProfileDetail" value="setAlertNotificationSubject;setAlertProfileId;setAlertNotificationVersion;getEventRules;getAlertNotificationSubject;setEventRules;getAlertNotificationVersion;getName;isDefault;setPolicyBasedRules;addPolicyBasedRule;getEmailToJson;getAlertNotificationId;setEmailTo;isEnabled;setAlertNotificationMsg;getFrequency;setFrequency;getDescription;setVersion;setDefault;populateObjectFromJson;populateObjectFromJson;setName;getAlertProfileId;setType;getAlertNotificationMsg;setDescription;getVersion;addEventRule;getType;getEmailTo;setEnabled;setAlertNotificationId;getPolicyBasedRules;toString"/>
<mapEntry key="alertprofile.AlertProfileFilter" value="setSort;getSort_field;setWhere;setSort_field;getPagesize;getWhere;setPagesize;setPagenumber;getPagenumber;getSort"/>
<mapEntry key="alertprofile.AlertProfileManagement" value="deletePGFromAP;getAlertProfilesForPolicyGroup;searchAPByDescription;AlertProfileManagement;getDefaultAlertProfileForPolicyGroup;getAlertProfilesInvalidUrl_2;getAllAlertProfile;searchAPByName;getPolicyGroupDetailsByAlertProfileId;getAllTemplateRules;getListOfIDSEvents;getAlertProfilesInfoOnSearch;deletePGFromAP;createDefaultAlertProfileInfo;addEventCondition;getAlertProfileIDFromAlertProfileName;getListOfIPSEvents;createAlertProfile;getAlertProfileById;getListOfMonitoringEvents;getAllCategoryNameToDisplayNameMap;getDevicesAlertCount;deleteAlertProfile;getAlertProfileByName;populateEventCompositeCondition;getAllInstanceRule;deletePoliciesOfPGFromAlertProfile;getAllAlertProfile;getAggregatedFieldsForEventTypes;deleteAlertProfile;getListOfOtherEvents;getListOfAVEvents;getPolicyRulesFromPolicyGroupAndPolicy;createAlertProfileFromPolicyGroup;getAlertProfileInfoForSreRuleId;getListOfEventTypeFields;getGlobalAlertProfileID;updateAlertProfile;getAlertProfilesInfoOnSearch;getAlertProfilesForPolicyGroup;createAlertProfile;getAllPredefinedRules;getListOfEventTypes;createBlankAlertProfileInfo;getAlertProfilesInvalidUrl_1;dynamicCreationOfAlertProfile;getListOfAWSEvents;deletePoliciesOfPGFromAlertProfile;searchAPByNameAndDescription;getGlobalAlertProfileList"/>
<mapEntry key="alertprofile.EventConditionsOperator" value="toString;EventConditionsOperator"/>
<mapEntry key="alertprofile.EventRuleDetail" value="getGroupBy;getSeverity;getUniqueAttribute;getUniqueAttributeJson;setSeverityForUI;setGroupBy;addEventCondition;setDescription;getEventName;setSreRuleId;getThreshhold;populateObjectFromJson;setId;getDescription;getTimeout;setEventName;getSreRuleId;isEnabled;getFrequency;getEventConditions;getVersion;getName;addEventCondition;isPredefined;getGroupByJson;setFrequency;setLogicalOp;getEventType;setEnabled;getSeverityForUI;setEventConditions;setPredefined;setName;setEventType;setSeverity;setThreshhold;getLogicalOp;setVersion;setUniqueAttribute;setTimeout;getId;toString"/>
<mapEntry key="alertprofile.EventType" value="toString;EventType"/>
<mapEntry key="alertprofile.PolicyBasedRuleDetail" value="getPolicyGroupName;setPolicies;PolicyBasedRuleDetail;PolicyBasedRuleDetail;addPolicy;setPolicyGroupName;populateObjectFromJson;setPolicyGroupId;setVersion;getPolicies;setPolicyName;getPolicyName;addPolicy;getPolicyGroupId;getVersion;toString"/>
<mapEntry key="alertprofile.PolicyDetail" value="PolicyDetail;populateObjectFromJson;setPolicyName;getPolicyContentId;setPolicyRules;setVersion;getVersion;addPolicyRule;setPolicyContentId;getPolicyName;PolicyDetail;toString;getPolicyRules;setPolicyId;addPolicyRule;getPolicyId"/>
<mapEntry key="alertprofile.PolicyRule" value="populateObjectFromJson;getPolicyRuleId;setVersion;getPolicyRuleName;PolicyRule;setEnabled;isEnabled;getVersion;toString;PolicyRule;getSeverity;setPolicyRuleId;isPredefined;setSeverity;setPolicyRuleName;setPredefined"/>
<mapEntry key="alertprofile.Severity" value="toString;Severity"/>
<mapEntry key="alertprofile.dto.AlertProfileCRUDResponse" value="isIs_default;getId;getName;setId;setName;setProfileType;setIs_default;getProfileType"/>
<mapEntry key="alertprofile.dto.AlertProfileEventRule" value="getEvent_definition;setEvent_definition"/>
<mapEntry key="alertprofile.dto.AlertProfileGetAllResponse" value="setAlertProfileCount;getAlertProfileInfoList;setAlertProfileInfoList;getAlertProfileCount"/>
<mapEntry key="alertprofile.dto.AlertProfileInfo" value="getCreation_date_time;getNumber_of_rules;setFrequency;setNumber_of_rules;setCreation_date_time;getDisplayDescription;setCreated_by;setType;setDisplayName;getAlert_profile_id;getFrequency;setPolicy_based_rules;getName;setDisplayDescription;setDescription;setEvent_rules;getAlert_notification;getDescription;isIs_enabled;getEvent_rules;setVersion;getVersion;getDisplayName;setAlert_notification;getCreated_by;setName;getPolicy_based_rules;getType;setIs_enabled;setAlert_profile_id"/>
<mapEntry key="alertprofile.dto.AlertProfileNotification" value="setAlert_notification_msg;getAlert_notification_msg;setAlert_notification_subject;setEmail_to;setVersion;setAlert_notification_id;getAlert_notification_id;getVersion;getEmail_to;getAlert_notification_subject"/>
<mapEntry key="alertprofile.dto.AlertProfilePolicy" value="setPolicy_content_id;setPolicy_name;setVersion;getPolicy_rule;getId;getVersion;getDescription;getPolicy_id;setPolicy_id;setDescription;setId;getPolicy_name;setPolicy_rule;getPolicy_content_id"/>
<mapEntry key="alertprofile.dto.AlertProfilePolicyGroupBasedRule" value="getPolicies;setAlertProfileName;setApIsDefault;getDescription;setDescription;getPolicy_group_id;getVersion;setPolicy_group_name;setPolicies;isApIsDefault;getAlertProfileName;getPolicy_group_name;setPolicy_group_id;setPolicy_based_rule_id;setVersion;getPolicy_based_rule_id"/>
<mapEntry key="alertprofile.dto.AlertProfilePolicyRule" value="setPolicy_rule_display_name;getPolicy_rule_name;setPolicy_rule_id;getPolicy_rule_display_name;setPolicy_rule_name;getPolicy_rule_id"/>
<mapEntry key="alertprofile.dto.AlertProfileRule" value="getSeverity;setId;setIs_enabled;setFrequency;setRuleActions;getSre_rule_id;setSeverity;getRecommendation;setSre_rule_id;getDescription;setRecommendation;getPredefinedId;getVersion;getId;isIs_enabled;setDescription;setVersion;setPredefinedId;getFrequency;setName;getRuleActions;getName"/>
<mapEntry key="alertprofile.dto.AlertProfileType" value="getDisplayValue;getValue;AlertProfileType"/>
<mapEntry key="alertprofile.dto.EventAttribute" value="getEventAttributeId;setEventAttributeId;setEventAttributeDisplayName;getEventAttributeDisplayName"/>
<mapEntry key="alertprofile.dto.EventCompositeCondition" value="setEventConditions;getEventConditions;setLogicalOperator;getLogicalOperator"/>
<mapEntry key="alertprofile.dto.EventCondition" value="setOperatorId;setAttributeValue;getEventDisplayName;getEventId;getValueType;setEventAttributeId;setEventDisplayName;getOperatorId;getOperatorDisplayName;setAttributeDisplayValue;getAttributeDisplayValue;setValueType;setOperatorDisplayName;setEventAttributeDisplayName;setEventId;getEventAttributeDisplayName;getAttributeValue;getEventAttributeId"/>
<mapEntry key="alertprofile.dto.EventRuleCondition" value="getRuleTypeDescription;getThreshold;setTimeout;getEventCompositeCondition;setUniqueAttribute;setRuleTypeDescription;setRuleType;setEventCompositeCondition;setGroupBy;getGroupBy;setThreshold;getUniqueAttribute;getTimeout;getRuleType"/>
<mapEntry key="alertprofile.dto.RuleActionDTO" value="setId;getName;getId;setName"/>
<mapEntry key="alerts.AlertActivityData" value="setId;setComment;getId;setState;getComment;getState"/>
<mapEntry key="alerts.AlertFilter" value="setPageNumber;setSearchFilter;getStartDate;setStartDate;setEndDate;getOrder;setAdditionalFilters;setEventTypeToQuery;getSearchFilter;getEndDate;setOrder;getEventTypeToQuery;getAdditionalFilters;AlertFilter;getPageSize;setPageSize;getPageNumber"/>
<mapEntry key="alerts.AlertManagement" value="addComments;waitForAlert;alertActivity;addComment;getAlertsForAsset;getAlertComment;AlertManagement;getSeverityChart;getAlertById;getAllActivitiesOnAlert;getAllAlertsFields;getAlertState;waitForAlert;changeState;searchAndFilterAlert;getDevicesAlertCount;getAllAlerts;sendRequest1;changeState;searchAndFilterAlert;changeStateWithComment;getAlertCount"/>
<mapEntry key="alerts.SearchFilter" value="getSearchQuery;setSearchQuery"/>
<mapEntry key="applicationdiscovery.ApplicationDiscovery" value="getArrayListFromJson;getApplicationDiscoveryStatusOnAsset;postAppDiscoveryData;getInstalledSoftwaresAssociatedWithAsset;getAppDiscoveryData;verifyDiscoveryResults;deleteCacheForDiscovery;pollAdrStatusOnAgent;importAdrPolicy;triggerDiscoveryForAsset;importAppDiscoveryPolicies;importAppDiscoveryPolicies;ApplicationDiscovery"/>
<mapEntry key="applicationlibrary.Cleanup" value="Cleanup;getSchemaObjectJson;deleteSchemaObjectCurlMethod;deleteSchemaObjects;getListOfSchemaAsArrayList"/>
<mapEntry key="applicationlibrary.DCSCloud" value="applicationDiscovery;alertsPage;awsConnectionPage;AgentLogCollectionAPI;endToEndImpl;policyRecommendationPage;policyManagementAPI;azureConnectionPage;eventManagement;externalAPIController;speNasIntegrator;cpifController;navigate;eventsPage;speNasAsset;getUserid;gcp;antimalwareController;onPremPolicyTemplateController;usersUtility;speNasPolicy;userController;deepsight;ccReportController;deepsightImport;vulnerabilitiesPage;speNasScannerGroups;speS3Integrator;policyGroupController;awsIntegration;alertProfilePage;gcpConnectionPage;docker;setUserid;downloadAgentPage;policyTargetingController;threatsPage;azureIntegration;usersPage;speCommonLib;awssaas;containersPage;apiKeysPage;alertProfileManagement;ccDashboardController;policyLibraryPage;commonUIMethods;alertManagement;multidomainController;gcpIntegration;clientAPI;notificationManagement;scheduler;instancesPage;downloadAgentPackage;DCSCloud;jobsPage;policyReccomendationScheduler;assetManagementAPI;speDashboard;cicdPlugin;agentManagement;auditController;generalSettingsPage;policyGroupPageUI;jobsManagement;dashboard;policyTemplateController;oci;instancePage;loginPage;cleanAutomationEnvironemnt;policyRuleManagment;softwareServicesPage;notificationPage;policyLibraryAPI;f24Lib;customerOnboarding;jobsController"/>
<mapEntry key="assets.AssetManagement" value="getInstalledSoftwaresOnAsset;getInstanceHierarchy;waitForAgentState;getApplicationsForAssetID;getAssetInfo;getSecurityAgentTags;getSubnetsAssociatedToLoadBalancers;getRegionsForCloudPlatform;deleteAssetsAssociatedWithConnection;getAgentIdForAsset;getFields;enableVPCForCloudWatch;createAsset;getAssets;deleteAllLoadBalancer;getSecurityAgentForAssets;addTagsToAssets;getAssetVulnarability;removeApplications;getInstanceRisk;getApplicationsForAsset;getErrorMsg;getSearchableFieldsValues;getRegionsForPlatforms;getAssetDetailsUsingInstanceId;associateApplicationsToAsset;waitForAgentStateToInstalled;getCommonTagsForAssets;getVpcsForSource;getRiskOnAsset;getDeviceIdUsingAssetId;deleteLoadBalancer;getAssetInfoUI;getAllAssetsWithSoftwareDetails;getColumnFilterValuesForAssetGrid;deleteAllAssets;isAgentInstalled;waitForInstanceEnrolled;pollAgentStatusOnAsset;getInstalledApplcationForAsset;getVpcDetails;getAssetUsingInstanceName;getPaginatedVulnerabilitiesForAsset;deleteAsset;updateAssetCpeId;getAssetsAssociatedToLoadBalancers;getAssetRegions;getAutoScalingGroupDetail;getPaginatedVulnerabilitiesForAsset;getAssetSubnets;getInstalledSoftwaresForAssetWithDetails;isInstanceEnrolled;getPaginatedThreatsForAsset;isAssetPresent;getInstalledProductsOnAsset;getAllAssets;getAssetIdForAgentID;getSubnetsAssociatedToVPC;getSearchableField;getDeviceIdUsingInstanceId;getPolicyApplyState;getAssetUsingInstanceId;addApplications;getVpcsAssociatedToLoadBalancers;getAssetRisk;getAssetTags;getFilterMetaData;getSubnets;AssetManagement;getAssetThreats;getAssetInstanceID;getAssetAdapterConfigs;getUiAssets;getPaginatedThreatsForAsset;getApplicationsForAsset;putADRStatusForAsset;getAutoScalingGroupDetails;getAllLoadBalancers;getAgentInstalled;createAsset;getSecurityGroupsAssociatedToLoadBalancers;getAssetPolicyInfo;removeAssociateApplicationsToAsset;getApplications;getAssetSearchUsingSearchFilterValue;isAgentInDesiredState;updateAssetForAgent;getSearchableFields;getAWSAccountId;getAssetsInstalledSoftwaresDetails;getApplications;getAssetAutoScalingGroups;getAssetStaticContext;deleteSecurityAgent;getAutoScalingGroups;getLoadBalancerDetail;getAssetIdUsingDeviceId;getAssets;updateAsset;getInstanceMap;getDeviceIdUsingInstaceId;getAssetAllTags;getAssetBasic;getSecurityGroupsInRegion"/>
<mapEntry key="assets.InstancePage" value="getAssetDetail;verifyAppDiscoveryInProgress;isInstancePresentInGrid;clickOnInstanceInGrid;navigateToNextPage;clickOnInstanceCheckBox;navigateToAssetPage;clickOnInstanceColumHead;initiateAppDiscovery;verifyInstanceDetail;getInstanceRegion;addTags;getInstanceColumValues;getInstanceDetailFromGrid;assetInGrid;InstancePage;getPolicyStatusforInstance;verifyRecommendationForInstance;verifyAppDiscoveryData;getListOfApplicationForAsset;deleteTag;searchInstance;createAssetsForPagination;searchInstanceBy;selectInstanceRow;getAgentStatusForAsset;navigateToPreviousPage;clickOnRecommendationIcon;verifyTagPresent;unSelectDefaultFirstSelected;getAssetDetailFromTestData;verifyAppDiscoveryCompleted;clickOnAssetSubMenu;getAssetDataFronUiInHashMap"/>
<mapEntry key="assets.UnifiedAsset" value="setIsAssetFetchedViaPolling;getRegionName;getDomain;setLaunchTime;getMonitoring;setAssociationIds;getAppDiscoverCmdId;getFqdn;setSubnet;getAdrState;getVpcId;getPolicyAppliedDate;setFqdn;setPrivateIps;getAutoScalingGroupName;getAssociationIds;setMachineImageId;getAutoScalingGroup;setStopMonitoringTime;getStartMonitoringTime;setId;setStartMonitoringTime;setIpAdresses;setSubscriptionName;getFirewallGroups;setVmType;getAgentInstalledTime;setPublicDns;getLastHealthCheckTime;getCloudPlatform;getResourceGroupName;setCloudPlatformCreatedDate;setLastHealthCheckTime;setAgentInstalledStatus;setInstanceState;setSubnetId;getSecurityGroups;setCloudPlatformModifiedDate;setAgentInstalledTime;getPublicDns;getCpe;setSubscriptionID;setPolicyApplied;getSubnetId;getId;setCreatedTime;setAgentUninstalledTime;getLoadBalancers;getPropertiesToHash;setPrivateDns;getCloudPlatformModifiedDate;getLaunchTime;getRegion;setSource;getInstanceType;setAvailabilityZone;getCloudPlatformCreatedDate;getLastModified;setPlatform;getSource;setShutDownBehavior;setDomain;isMonitoring;beforeImport;getAssetDeletedTime;getUnenrollAgentCmdId;setNetworkInterfaceDeviceIds;getAgentUninstalledTime;getStopMonitoringTime;getAvailabilityZone;setVpcId;setLoadBalancers;getVmType;getAttachmentIds;getCreatedTime;setParentAssetId;isDeleted;getNetworkInterfaceDeviceIds;setAutoScalingGroup;getPlatform;setSecurityGroups;getParentAssetId;setInstanceId;equals;getSubnet;setDeleted;setAdrState;setMonitoring;setAssetIdentifiers;isUpdated;setDedicated;getPrimaryValues;setUpdated;setMeteringEventTime;getInstanceState;getInstanceId;getIpAdresses;getHostName;setPolicyAppliedDate;setRegionName;setDeleteReason;setCloudPlatform;getDeleteReason;setAutoScalingGroupName;setUnenrollAgentCmdId;getMacAddress;getMachineImageId;setMacAddress;setAssetDeletedTime;setAppDiscoverCmdId;getSubscriptionName;getDedicated;setLastModified;getObjectClasses;setHostName;getElasticIps;setCpe;getSubscriptionID;getPolicyApplied;setFirewallGroups;setInstanceType;getPrivateDns;setName;setRegion;getMeteringEventTime;setObjectClasses;setResourceGroupName;getPrivateIps;getShutDownBehavior;getIsAssetFetchedViaPolling;getAgentInstalledStatus;setAttachmentIds;getName;setElasticIps;isReconciled;getAssetIdentifiers;setReconciled;hashCode"/>
<mapEntry key="assets.dto.AgentInstalled" value="setAdditionalProperty;getValue;setValue;setDisplayValue;getDisplayValue;getAdditionalProperties"/>
<mapEntry key="assets.dto.CloudPlatform" value="getDisplayValue;setAdditionalProperty;setValue;getValue;setDisplayValue;getAdditionalProperties"/>
<mapEntry key="assets.dto.CpeWfn" value="getTargetSw;setPart;setUpdate;setLanguage;setEdition;setVendor;getVersion;setAdditionalProperty;getTargetHw;setProduct;getEdition;setSwEdition;getVendor;setOther;getPart;setTargetHw;getUpdate;setVersion;setTargetSw;getOther;getAdditionalProperties;getLanguage;getProduct;getSwEdition"/>
<mapEntry key="assets.dto.DeviceStatus" value="getAdditionalProperties;setValue;getValue;getDisplayValue;setAdditionalProperty;setDisplayValue"/>
<mapEntry key="assets.dto.IncludedDcsPolicyGroup" value="getEnabledCapabilities;setEnabledCapabilities;setUpgradable;getAuthor;getCreated;getModifiedBy;getModified;getId;getAdditionalProperties;getUpgradable;getPolicyContentId;getPlatform;setAdditionalProperty;getGroupType;setAuthor;setId;setPlatform;setDescription;getDescription;getMode;setGroupType;setPolicyContentId;getName;setName;setModifiedBy;setRevision;setModified;getRevision;setCreated;setMode"/>
<mapEntry key="assets.dto.IncludedInstalledProduct" value="getId;getProps;getAdditionalProperties;getObjClasses;getLastConnectedTime;setStatus;getAgentVersion;getStatus;setId;setName;setProps;setAdditionalProperty;setAgentVersion;setLastConnectedTime;setObjClasses;getName"/>
<mapEntry key="assets.dto.InstanceFilterDto" value="setSearch;setLimit;getAdditionalProperties;setAssociationCount;getSearch;setFields;setSort;getOffset;getFields;setTreefilter;setOffset;setInclude;getSort;getLimit;getTreefilter;setIncludeCount;setWhere;getAssociationCount;getIncludeCount;getWhere;setAdditionalProperty;getInclude"/>
<mapEntry key="assets.dto.InstanceList" value="setCount;setAdditionalProperty;setResults;getResults;getCount;getAdditionalProperties"/>
<mapEntry key="assets.dto.InstanceState" value="setAdditionalProperty;setDisplayValue;getValue;getDisplayValue;getAdditionalProperties;setValue"/>
<mapEntry key="assets.dto.Props" value="setCwpAgentProductVersion;getCwpAgentProductVersion;getAdditionalProperties;getCwpAvAgentProductVersion;setAdditionalProperty;setCwpAvAgentProductVersion"/>
<mapEntry key="assets.dto.Result" value="setInstanceState;setCpeWfn;setId;getDeviceStatus;getIncludedDcsTags;getInstanceType;getInstanceState;setPlatform;setCountIncludedDcsAdapterConfigs;getScanRunningState;setInstanceType;setAgentInstalledTime;setAgentInstalled;setSecurityAgent;setCloudPlatform;getNumberOfGroups;getIncludedDcsPolicyGroups;getIncludedInstalledProducts;setIncludedDcsPolicyGroups;setIncludedInstalledProducts;setPolicyApplied;getCountIncludedDcsAdapterConfigs;setAdditionalProperty;setInstanceId;getSecurityAgent;getPolicyApplied;getAgentInstalledTime;setPolicyAppliedDate;setAdrState;setRegionName;setScanRunningState;getAgentInstalled;getAdrState;getId;getAdditionalProperties;setNumberOfGroups;getCloudPlatform;setRegion;setObjClasses;getInstanceId;getCreated;setIncludedDcsTags;setCreated;getRegion;getPlatform;setDeviceStatus;getObjClasses;getPolicyAppliedDate;setStatusReason;getRegionName;getStatusReason;getCpeWfn"/>
<mapEntry key="assets.dto.SearchTextFilter" value="getSearchText;setSearchFields;getSearchFields;setSearchText"/>
<mapEntry key="assets.dto.SecurityAgent" value="getId;getAdditionalProperties;getName;setId;setAdditionalProperty;setLastConnectedTime;setAgentVersion;getProps;setName;getLastConnectedTime;getObjClasses;setObjClasses;getAgentVersion;setProps;getStatus;setStatus"/>
<mapEntry key="assets.dto.Status" value="getAPPDISCOVERY;setAMD;setAPPDISCOVERY;setAdditionalProperty;getIDS;setIDS;getIPS;setIPS;getAMD;getAdditionalProperties"/>
<mapEntry key="av.AntimalwareController" value="getSubNetForInstance;registerOnDemandScan;getMalwareDetailsForAssets;getEndDateForEventsData;getMaxValueFromHashMap;abortAvScanUsingInstanceIds;AntimalwareController;getDMALEventCountWithSubnetInfoForInstance;abortAvScanUsingInstanceIds;abortAvScan;registerScheduleScanUsingInstanceIds;getAVJobDetailsView;getMalwareDetailsForAssetsOld;abortAvScan;getLastAVRecurringJobDetail;registerOnDemandScanUsingInstanceIds;getStartDateForEventsData;getDMALEventCountForInstance;getMaxCountOfEventsToBeGeneratedForInstance;getAssetDetails;waitUntilScanJobStatusModified;registerOnDemandScanUsingInstanceIds;getAssets;copyVirusFileOnAzureVm;registerScheduleScanUsingInstanceIds;registerScheduleScan;registerScheduleScan;getTopNSubnetsFromSubnetEventHashMap;checkAssetSyncWithConnection;waitForAVRecurringJobCreated;waitUntilScanCanceled;waitUntilScanComplete;sendRequest1;copyVirusFileOnAWSVm;getTotalCountOfAVRecurringJob;mapsAreEqual;registerOnDemandScan;getMalwareDetailsForAssets"/>
<mapEntry key="av.AvDetailsDto" value="getMonthlySchedulerAvDto;setInstanceIds;getHourlySchedulerAvDto;getOneTimeSchedulerAvDto;setDeviceIds;getIdsList;getInstanceIds;getDailySchedulerAvDto;getWeeklySchedulerAvDto;getRecurringJobDetails;getDeviceIds;setRecurringJobDetails"/>
<mapEntry key="av.AvUriConstants" value="AvUriConstants"/>
<mapEntry key="av.ChartEventData" value="toString;setCount;setId;setName;getCount;getName;getId"/>
<mapEntry key="av.DayOfWeek" value="DayOfWeek;toString"/>
<mapEntry key="av.GetMalwareDetectionsChartResponse" value="getEventData;toString;setEventData"/>
<mapEntry key="av.RecurringJobDetails" value="getDayOfMonth;getHour;getMonth;getHourlyRecurringJobDetail;getWeeklyRecurringJobDetail;getYear;setHour;setSecond;setDayOfWeek;getEndTime;getStartTime;getSecond;setRecurringJobType;setDayOfMonth;getDayOfWeek;setYear;getMonthlyRecurringJobDetail;setStartTime;getMinute;getDailyRecurringJobDetail;setMonth;getRecurringJobType;getOneTimeRecurringJobDetail;setEndTime;setMinute"/>
<mapEntry key="awsintegration.AWSConfig" value="setAws_user;getCloudTrailBucketName;setPolling;setSecretKey;getAws_user;getAccountId;setAccountId;setPollingIntervalInHour;setAdapterName;setIsConfiguredWithF24;getPollingInterval;setExternalId;getId;setCloudTrailBucketName;setDeleted;getCftRegion;getRole;setRole;getSqsUrl;getName;setId;getAdapterName;setCftName;getF24BucketArn;getPollingIntervalInHour;getExternalId;setAWSSns;setConfigured;setAccessKey;setAWSRegionsArray;setErrorString;getSecretKey;getErrorString;getCftName;setPollingInterval;isPolling;getAWSSns;addSqsUrl;isConfiguredWithF24;setF24BucketArn;isDeleted;getAccessKey;setCftRegion;setName;getAWSRegionsArray;isConfigured"/>
<mapEntry key="awsintegration.AWSIntegration" value="deleteAWSInstance;waitForNextPollingJob;deleteAWSImage;securityGroupRules;getCloudAdapterConfigWithSubscriptionId;createVPCs;setAdapterExternalId;getInstanceDetails;setExternalId;createAWSInstance;getVPCsAssociatedWithAdapters;modifyInstanceType;getAdapterConfig;setAdapterConfig;setAzureAdapterConfig;createExternalId;extractAccountIdFromRole;getAdapterConfiguration;deleteCloudConnection;getCloudAdaptersUsingClouPlatformName;setAzureAdapterConfig;isInstanceRunning;setCloudWatchConfig;deleteAdapterConfig;createSubnets;getPlatformConfigured;toggleSyncOption;updateCPIFServiceForPolling;startInstance;getSubnetsAssociatedWithAdapters;setAdapterConfig;waitForNextPollingJob;getAdapterConfig;disableCloudWatchConfig;checkIfAdapterConfigured;deleteAWSInstanceWithAutoScalingGroup;createSecurityGroup;onDemandSync;updateExternalId;awsFetchAssets;stopUnprotectedInstances;stopInstance;getAdapterConfigs;getCloudAdapterConfigWithConnectionId;createLoadBalancers;getAdapterConfig;getCloudAdaptersUsingAdapterId;createAutoScalingGroup;createImage;createTagObject;getAssetsAssociatedWithAdapters;getJobForConnectionByConnectionName;stopEC2Instances;getCloudAdapterConfigWithConnectionName;AWSIntegration;isInstanceStopped;setAdapterConfig;getJobForConnection;setTagstoAllResources;activateExternalId;getCloudAdapterConfigWithAccountId;updateCPIFProxyServer;getAutoScalingGroupAssociatedWithAdapters;deleteElementUsingId;waitUntilPollingJobComplete;setAzureAdapterConfig;updateAdapterConfig;deleteAllConnections;getCloudAdapters;cloudFetchAssetsAPI;createAWSInstanceWithAutoScalingGroup;getLoadBalancerAssociatedWithAdapters"/>
<mapEntry key="awsintegration.AWSRegions" value="AWSRegions;toString"/>
<mapEntry key="awsintegration.AWSSSH" value="executecommand"/>
<mapEntry key="awsintegration.AdapterConfigDefaults" value="setPollingInterval;getPollingInterval"/>
<mapEntry key="awsintegration.AdapterConfiguration" value="setDcsSecretKey;setAccessKey;getDcsAccessKey;getCloudPlatform;setCloudTrailSyncInProgress;setDescription;getStatus;setExternalId;setId;setRegeneratedExternalId;setCrossAccountRoleArn;setPassword;getRegeneratedExternalId;getSecretKey;getEventsUrl;setDcsUser;getExternalId;setTenantId;getCrossAccountRoleArn;getDcsUser;getId;getCloudTrailSyncInProgress;setRequiresPolling;getDcsSecretKey;setAzureProperties;setCredentialCreationTime;setPollingIntervalHours;setUserId;setStatus;setDcsAccessKey;getPollingIntervalHours;getRequiresPolling;getAzureProperties;setAccessMechanism;hashCode;setClientId;getAccessMechanism;getClientId;getDescription;setSecretKey;getPollingIntervalMinutes;setPollingIntervalMinutes;setEventsUrl;setConfirmNewExternalId;getPassword;setCloudPlatform;getName;setName;getCredentialCretionTime;getTenantId;getAccessKey;getUserId;getConfirmNewExternalId"/>
<mapEntry key="awsintegration.AzureProperties" value="getSubscriptions;setTenantId;setClientId;getTenantId;setSubscriptions;getSecret;setSecret;getClientId"/>
<mapEntry key="awsintegration.AzureSubscription" value="getName;equals;getId;setState;hashCode;setName;setId;getState"/>
<mapEntry key="awsintegration.CPIFController" value="getAdapterConfigByConnectionName;activateNewExternalId;getAdapterConfigByConnectionId;deleteAdapterConfigurationByName;discardNewExternalId;getAdapterConfigs;createAdapterConfiguration;getAdapterConfigDefaults;deleteAdapterConfiguration;pollEvents;updateAdapterConfiguration;CPIFController"/>
<mapEntry key="awsintegration.EventURL" value="getName;equals;hashCode;setName;setUrl;getUrl"/>
<mapEntry key="awsintegration.dto.AdapterConfig" value="getAccessKey;setEventsUrl;getPollingIntervalHours;getClientId;getName;setName;setAwsProperties;setSecretKey;setCreated;getRequiresPolling;setClientId;getId;setObjClasses;getTenantId;getDcsSecretKey;getCredentialCreated;getSecretKey;getCrossAccountRoleArn;setDcsAccessKey;setAccessMechanism;setModified;getRegeneratedExternalId;getDcsUser;setStatus;getProperties;getAzureProperties;setCloudPlatform;setCredentialCreated;setProxyServer;getProxyServer;getPollingIntervalMinutes;setPollingIntervalMinutes;getModified;getDcsAccessKey;setUserId;setDcsUser;getCreated;getAgentPkgS3Arn;setProperties;setDcsSecretKey;setExternalId;setRequires_agentless_discovery;getCloudtrailSync;getStatus;getCloudPlatform;setCloudtrailSync;setPollingIntervalHours;getUserId;setRegeneratedExternalId;setAgentPkgS3Arn;getObjClasses;getExternalId;setId;setCrossAccountRoleArn;getRequires_agentless_discovery;getAwsProperties;setAzureProperties;getAccessMechanism;setDescription;setAccessKey;getDescription;setRequiresPolling;getEventsUrl;setTenantId"/>
<mapEntry key="awsintegration.dto.AutoScalingGroup" value="setObjClasses;getObjClasses;getUri;setDeleted;setRegion;setUpdated;setAdditionalProperty;getCreated;getModified;getDeleteReason;getUpdated;setAutoscalingGroupArn;getRegion;getAutoscalingGroupName;setModified;setCreated;getAutoscalingGroupArn;setUri;setDeleteReason;getDeleted;setAutoscalingGroupName;getAdditionalProperties;getId;setId"/>
<mapEntry key="awsintegration.dto.AwsProperties" value="getAdditionalProperties;setAdditionalProperty"/>
<mapEntry key="awsintegration.dto.AzureProperties" value="getAdditionalProperties;setAdditionalProperty"/>
<mapEntry key="awsintegration.dto.EventsUrl" value="getAdditionalProperties;setAdditionalProperty"/>
<mapEntry key="awsintegration.dto.MachineImage" value="setNoReboot;setImagename;setImagedescription;getImageType;setBaseInstanceId;getState;getHypervisor;setRootDeviceName;getImageLocation;isNoReboot;setOwner;setOwnerId;setPlatform;setOs;getVirtualizationType;setImageLocation;setImageid;getBaseInstanceId;getRegion;setVirtualizationType;setArchitecture;getImagedescription;getOwner;getPlatform;getImagename;setRegion;isPublic;setState;setPublic;getArchitecture;getImageid;getOs;getCreationDate;setCreationDate;setHypervisor;setImageType;getOwnerId;getRootDeviceName"/>
<mapEntry key="awsintegration.dto.Properties" value="setAdditionalProperty;getAdditionalProperties"/>
<mapEntry key="awsintegration.dto.ProxyServer" value="setAdditionalProperty;getAdditionalProperties"/>
<mapEntry key="awsintegration.dto.SecurityGroupDetails" value="setSecurityGroupDescription;setRemoveDefaultRules;setSecurityGroupEgressRules;getSecurityGroupName;getSecurityGroupId;setVpcId;setSecurityGroupIngressRules;getSecurityGroupIngressRules;setSecurityGroupName;getSecurityGroupDescription;setSecurityGroupId;getSecurityGroupEgressRules;isRemoveDefaultRules;getVpcId"/>
<mapEntry key="awsintegration.dto.SecurityGroupRules" value="getFromPort;setIpProtocal;getCidrBlockArray;getToPort;setCidrBlockArray;setFromPort;getIpProtocal;addCidrBlock;setToPort"/>
<mapEntry key="awssaas.AWSSAASimpl" value="activateCustomerAndLogin;verifyFreeUsage;signUp;cancelSubscriptions;getAWSToken;awsSubscriptionStatusPolling;getCustomerDetailsForSubscription;getCWPAPIdetails;getSubcriptionCancelStatus;cancelSubscription;AWSSAASimpl;getMFACode;getSubcriptionStatus;awsCancelSubscriptionStatusPolling;getSubcriptionNumberFromITStatus;verifySubscriptionStatus"/>
<mapEntry key="awssaas.CustomerSignUpInfo" value="getAwsProductCode;setTimeOffset;CustomerSignUpInfo;setPostalCode;getCompany;setPhone;getEmail;getCountry;setIndustry;CustomerSignUpInfo;getCity;getTimeOffset;setState;setAwsToken;setCompany;getPhone;getState;getAddress;setAwsProductCode;setCountry;setCity;getPostalCode;getIndustry;setEmail;getLastName;getAwsToken;setFirstName;setAwsCustomerId;setAddress;getAwsCustomerId;setLastName;getFirstName"/>
<mapEntry key="awssaas.ProvisionLineStatuses" value="setProvisionLineStatus;setMessage;getMessage;getProvisionLineStatus;setSourceLineId;getSourceLineId"/>
<mapEntry key="azure.Azure" value="listVirtualNetworks;listResourceGroup;createAzureScaleSetWithNewResourceGroup;deleteVirtualMachineScaleSet;deallocateVM;deleteVirtualNetwork;fillVMDetails;installExtension;deleteVM;deleteSecurityGroup;stopVirtualMachineScaleSet;listNetworkSecurityGroups;startVM;listStorageAccounts;Azure;deleteNetworkInterface;deleteExtension;createAzureVMWithSSHKey;createAzureVMUsingVHD;listExtensionInstalled;restartVirtualMachineScaleSet;updateVirtualMachineScaleSet;createAzureVMWithExtension;createAzureVM;validateAzureVirtualMachineScaleSetInfo;getStorageAccountsList;deleteAllNetworkSecurityGroups;Azure;createRandomName;checkResourceGroupExist;updateExtension;deleteAllStorageAccount;getNetworkInterfaceList;deleteVirtualNetwork;deleteVM;print;getVMDetails;stopVM;startVirtualMachineScaleSet;createAzureVM;createFrontEndNetworkSecurityGroupForUnix;deleteAllNetworkInterfaces;deleteAllPublicIP;refreshVirtualMachineScaleSet;listNetworkInterfaces;deallocateVirtualMachineScaleSet;createFrontEndNetworkInterfaceUsingNSG;deleteResourceGroup;installExtension;deleteAllNetworkSecurityGroup;createResourceGroup;deleteStorageAccount;createAzureVMWithExtension;deletePublicIP;Azure;getNetworkSecurityGroupList;getPublicIPsList;deleteAllVirtualNetworks"/>
<mapEntry key="azure.AzureExtension" value="getIsExistingVM;getAzureVMExtensionType;setResourceGroupName;setClientSecretKey;setAzureVMExtensionName;setIsReboot;getClientId;setCustomerSecretKey;getClientSecretKey;getAzureVMExtensionPublisherName;getIsReboot;getCustomerSecretKey;getResourceGroupName;setPlatform;setAzureVMExtensionType;setAzureVMExtensionPublisherName;getDomainId;getAzureVMExtensionName;getVirtualMachineName;setVirtualMachineName;getAzureVMExtensionVersion;setAzureVMExtensionVersion;setCustomerId;setDomainId;setIsExistingVM;getPlatform;getCustomerId;setClientId"/>
<mapEntry key="azure.AzureImages" value="getOffer;AzureImages;getSku;getPublisher;getVersion;getPlatform"/>
<mapEntry key="azure.AzureUtils" value="print;print;print;print;print;print;print;print;print;print;print;print;print;print;print;createRandomName;print;print;AzureUtils;print;cmdInvocation;print;print;print;print;print;print;print;print;print;print;createCertificate"/>
<mapEntry key="azure.AzureVMDetail" value="getRegion;getVersion;setOffer;setPlatform;setPassword;getPassword;setUserName;setIsRebooted;getVirtualMachineName;setPrimaryNetwork;getPublisher;getPrimaryNetwork;setSku;getDnsName;getPlatform;getIsSEPCEnrolled;getIsExtensionInstalled;getIsCreateVMWithExtension;setUseExistingResourceGroup;getInstanceId;setInstanceIP;getInstanceIP;setDnsName;getIsAgentEnrolled;setInstanceId;setIsAgentEnrolled;getIsRebooted;getSku;setResourceGroupName;setVirtualMachineName;getUserName;setRegion;setIsCreateVMWithExtension;setIsExtensionInstalled;getOffer;setPublisher;getUseExistingResourceGroup;setIsSEPCEnrolled;setVersion;getResourceGroupName"/>
<mapEntry key="azure.AzureVirtualMachineScaleSet" value="getVmoffer;getVmplatform;getVirtualMachineScaleSetSkuTypes;getVmssName;getRegion;setRegion;getVmsku;setVmDataDisk;getVmusername;setVmpassword;setVmoffer;setVmsku;getVmpublisher;setVmplatform;getResourceGroupName;getVmpassword;getVmDataDisk;setVirtualMachineScaleSetSkuTypes;setResourceGroupName;setVmpublisher;getCapacity;setVmusername;setCapacity;setVmssName"/>
<mapEntry key="azure.dto.Data" value="getForceReboot;getAdditionalProperties;setForceReboot;setAdditionalProperty"/>
<mapEntry key="azure.dto.ExecuteActionData" value="getActions;setAdditionalProperty;setData;getAdditionalProperties;setActions;getAssetIds;setAssetIds;getData"/>
<mapEntry key="azureintegration.AzureConfig" value="addSubscription;setPolling;isConfigured;isSubscriptionConfigured;setSecretKey;isPolling;setAdapterName;getErrorString;setSubscriptions;setDeleted;getName;setId;setConfigured;isDeleted;setName;getSubscriptions;setApplicationId;getPollingInterval;getSecretKey;setErrorString;setPollingInterval;getDirectoryId;getId;setDirectoryId;getAdapterName;getApplicationId"/>
<mapEntry key="azureintegration.AzureIntegration" value="AzureIntegration;waitUntilPollingJobComplete;createAzureInstance;createAzureVM;getAzureConnectionByName;deleteAzureResources;set_image_info;deleteResourceGroup;setAzureAdapterConfig;installAzureVMExtension;createAzureInstanceUsingSSH;deleteAzureVM;deployExtensionOnVM;createResourceGroup;checkIfAdapterConfigured;installAzureVMExtension;stopAzureVM;unInstallAzureVMExtension;startAzureVM;createRandomName;installAgentWithSingleClick;getAzureVMDetail;deleteAzureVM;deallocateAzureVM;isResourceGroupPresent;updateAdapterConfig;getCloudAdapters;createAzureInstance;getAdapterIfConfigured"/>
<mapEntry key="cicd.dto.Evidences" value="setFldatalist;getVer_fldatalist;getFldatalist;setVer_fldatalist"/>
<mapEntry key="cicd.dto.Fldatalist" value="getCnt;getName;setName;setCnt"/>
<mapEntry key="cicd.dto.Package" value="getVulCount;setVul_ids;setVersion;setVulCount;getVersion;getEvidences;setPkgId;getId;setId;getPkgId;setTitle;getTitle;setEvidences;getVul_ids"/>
<mapEntry key="cicd.dto.Packages" value="getTotalCount;setTotalCount;setPackages;getPackages"/>
<mapEntry key="cicd.dto.Projects" value="setId;getId;setName;getName;getInternalId;setInternalId"/>
<mapEntry key="cicd.dto.Records" value="getId;getProjectId;getRunId;setVulCount;getVulCount;setRunId;setCreateDate;setId;getCreateDate;setProjectId"/>
<mapEntry key="cicd.dto.Results" value="setVul_id;setTotalCount;getVul_id;setTitle;getTitle;getTotalCount"/>
<mapEntry key="cicd.dto.VerFldatalist" value="getCnt;setCnt;getName;setName"/>
<mapEntry key="cicd.lib.CICDPlugin" value="getCICDProjectsRecords;getCICDProjects;deleteConfigFile;downloadCICDPlugin;CICDPlugin;createConfigFileForJob;getCICDPackages;verifyCWPPluginScanReport"/>
<mapEntry key="com.cwp.codecoverage.CwpCoverageServer" value="main;waitingForTerminateRequest;setServerDetails;CwpCoverageServer"/>
<mapEntry key="commonlibrary.AWS" value="describeAMI;createNetworkInterface;setAWSRegion;addTagsToBuckets;deleteAutoScalingGroup;deleteCloudWatchLogGroup;detachInstanceFromAutoScalingGroup;addTagsToResource;waitCftDeployement;createElasticIP;deleteCftStack;createSqsSubscribeToSNS;getNewCftTag;deleteElasticIP;getIngressIps;updateLoadBalancerAttribute;createAutoScalingGroup;createSecurityGroup;modifyInstanceAttributes;listAllAutoScalingGroup;getInstanceListFromASG;createVPC;setS3BucketsObectPolicyToPublic;getCloudWatchEventsCount;getVolumeAttachedInstance;createEC2instance;createTagObject;attachNetworkInterface;listAllVolumes;waitForAmiAvailable;AWS;addInstanceToAutoScalingGroup;subscribeSNSToSQS;deleteCft;listAllImages;startEC2instance;getSecurityGroupRules;listS3Buckets;listAllSnapshots;createLoadBalancer;modifyNetworkInterfaceSecurityGroup;deleteKeyValuePair;getAutoScalingGroupDetails;getNetworkInterfaceAttachmentId;deleteAMI;deleteLoadBalancer;addTagsToAsgResource;unAssignElasticIP;getCftResources;bucketExist;setTagstoAllResources;assignElasticIP;listAllLoadBalancers;getInstanceStatusCheck;deleteVPC;updateSecurityGroupEgressRules;deleteSqs;deleteNetworkInterface;updateProxySetting;getInstanceDetails;listCftTemplatesDeployedInAws;modifyInstanceSecurityGroup;deleteCloudWatchLogStream;listAllInstanceIds;waitUntilInstancesStateChangedToDesiredState;assignPrivateIP;updateSecurityGroupIngressRules;attachNetworkInterface;getInstanceAvailabilityZone;terminateEC2instance;getAvailabilityZones;createCftStack;createKeyValuePair;unassignPrivateIP;getAllInstanceDetails;revokeSecurityGroupEgressRules;listAllSecurityGroups;stopEC2instance;createCloudWatchLogGroup;createAMI;createCftTags;createCftStack;deleteS3BucketsWithNamePrefix;getLoadBalancerDetails;addInstancesToLoadBalancer;setS3BucketPolicyToPublic;getInstanceState;deleteS3Bucket;deleteSecurityGroup;createTagObject;deleteSNSTopic;getCloudWatchEvents;putObjectToS3bucket;getCftStackStatus;createS3Bucket;deleteCloudTrail;addTagsToLoadBalancers;createAutoScalingGroup;createSecurityGroup;createCloudWatchLogStream;detachNetworkInterface;createSNSTopic;getDefaultEgressRulesForSecurityGroup;createTagForInstance;addTagsToDynamoDBresource;copyObjectsToBucket;AWS;deleteInstancesFromLoadBalancer;createCloudTrail"/>
<mapEntry key="commonlibrary.Azure" value="executeRequest;stopAzureResourceVM;startAzureResourceVM;deleteAzureRole;stopAzureRole;stopDeallocateAzureResourceVM;startAzureRole;getAzureRole;Azure;executeRequest;authorize;stopDeallocateAzureRole;Azure;executeRequestResourceVM;deleteAzureResourceVM"/>
<mapEntry key="commonlibrary.CWPManagement" value="CWPManagement;sendRequest;getHeaders;getCwpTestContext;sendRequest;setCwpTestContext"/>
<mapEntry key="commonlibrary.CWPTestContext" value="getSelenium;setRestClient;getUserDto;setUserDto;setDcs;getCommon;setAwsSSH;getRestClient;setCommon;getAwsSSH;setSelenium;getDcs"/>
<mapEntry key="commonlibrary.Common" value="getURLFromText;generateRandomString;verifySortOrder;calculateCodeCoverage;getCurrentDateTimeStampString;getValueFromPropertyFile;replaceValueInString;getJSONObjectFromJsonArray;compareTwoStringsIgnoreNewLines;getValueFromJSONByType;getRandomStringWithDateFormat;compareTwoCommaSaperatedStringsCaseInsensitive;getCalculation;getTimeStamp;getStringLength;compareTwoCommaSaperatedStrings;getRandomNumber;getValueFromXML;updateValueInPropertyFile;getValueFromJSON;getIndexOfValueInStringByRegEx;getSubstring;getCalculation;getDataFromString;getKeyIndexFromJSONByKeyAndValueType;GetValue;getLocalIPAddress;readPropertyFile;compareDates;waitWithoutStoppingThread;executeBatchFile;getValuesFromJsonArrayInArrayList;concatenateThreeString;getCurrentDateTimeStampString;getArrayListUsingRegex;getMapArrayListFromJsonArray;getProductURL;pause;generateRandom;getCurrentDateUTCTime;verifyStringContains;getStringRepresentation;readFile;getStringValueFromJSON;getValueFromJSON;getJsonFromXml;verifyStringAreSame;getCurrentDateTime;getConcatenatedString;getSnmpName"/>
<mapEntry key="commonlibrary.Config" value="getMariaDBParamsFromPropertiesFile;getParametersFromPropertiesFile;readProxyConfigurations;getBATParamsFromPropertiesFile;Initialize;getOracleCloudConnectionParamsFromPropertiesFile;getPolicyrParamsFromPropertiesFile;getGoogleCloudParamsFromPropertiesFile;getAWSCusDetailsFromPropertiesFile;getAzureParamsFromPropertiesFile;getCloudAdapterParamsFromPropertiesFile;getEventAlertsParamsFromPropertiesFile;getMailClientParamsFromPropertiesFile"/>
<mapEntry key="commonlibrary.CouchBase" value="getJasonDocIdFromResponse;teardown;flushBucket"/>
<mapEntry key="commonlibrary.DateFormatter" value="DateFormatter;getISODate;setISODate"/>
<mapEntry key="commonlibrary.ElementInfo" value="setBy;setLocator;getLocator;getBy"/>
<mapEntry key="commonlibrary.ElementRepository" value="getElementInfo;getElementInfoByReplacingText;getNode;ElementRepository"/>
<mapEntry key="commonlibrary.ErrorObject" value="setErrorResponse;getErrorResponse"/>
<mapEntry key="commonlibrary.ErrorResponse" value="setErrorCode;setErrorMsg;getErrorMsg;getErrorRemedy;setErrorRemedy;getErrorCode"/>
<mapEntry key="commonlibrary.Etrack" value="setUserName;setPassword;getDefectDetails;setEtrackUrl;setAuthenticationUrl"/>
<mapEntry key="commonlibrary.FileUtil" value="deleteOldFolderAndCreateNew;changeFileEncoding;deleteFolder;getRelativeFilepath;getLastModifiedFile;appendFileContentOnNLIfNotExists;appendFileContent;unzipFile;replaceFileContent;copyFolder;deleteAllFilesInDirectory;createNewFile;getAbsoluteFilePath;unTar;copyFile;getZipSourceFolder;getFileContent;zipFile;findFilesWithExtension;setZipSourceFolder;unZipFile;generateFileStructure;deleteFiles;deleteOldFileAndCreateNew;zipFiles"/>
<mapEntry key="commonlibrary.FixturesNew" value="getNewCwpTestContext;AfterClass;beforeSuite;beforeClass;afterSuite"/>
<mapEntry key="commonlibrary.GlobalData" value="setUserListFromPreviousRun;getAdditionalPropertyData;getAutomationProxySettings;getUserList;setResourceGroupName;setGlobalUserDetail;getResourceGroupName;addGcpConfig;setAdditionalPropertyData;setUserList;getAwsConfigs;addAwsConfigs;getInstanceFromInstancePool;getAzureConfigUsingAppId;getSpeDeployedCftName;setSpeControllerIp;getBucketList;getSpeControllerIp;getSpePpk;getSpeRegion;setSpePpk;addUserInList;getAwsConfigs;getGCPConfig;getCommonUserDetail;setSpeDeployedCftName;getAzureConfigUsingSubscriptionId;getInstancePool;addInstanceInInstancePool;setCommonUserDetail;getSelenium;getCloseSeleniumList;addToCloseSeleniumList;setGcpConfigs;setAutomationProxySettings;getSpeBridgeDeviceId;setAwsConfigs;addAzureConfig;getGcpConfigs;GlobalData;setSpeRegion;getGlobalUserDetail;setAzureConfig;setSelenium;getAwsConfigsUsingId;getUserListFromPreviousRun;addBucketInBucketPool;getAzureConfig;setSpeBridgeDeviceId;getInstance"/>
<mapEntry key="commonlibrary.GoogleAuthentication" value="getSecretKey;addGoogleAuthenticatorAccount"/>
<mapEntry key="commonlibrary.Http" value="addFormParameter;getRequest;buildHttpsClient;getResponse;getMethod;getBasicAuthToken;getRequestForHttps;getHeader;Http;addHeader;Http;setServiceURL;getStatusCode;Http;setAuthorizationToken;deleteRequestWithBody"/>
<mapEntry key="commonlibrary.JSONDateDeserializer" value="deserialize"/>
<mapEntry key="commonlibrary.JSONDateSerializer" value="serialize"/>
<mapEntry key="commonlibrary.JenkinsIntegration" value="deleteJob;createJob;getJenkinsDashboard;waitForJobToComplete;isJobCompleted;trigerJenkinsJob;restartJenkinsAndWait;getLastBuildNumberUsingJobNumber;uninstallPlugin;JenkinsIntegration;restartJenkins;uploadPlugin;clearWorkspaceOnJenkinsServer;getJobDetails"/>
<mapEntry key="commonlibrary.JsonHelper" value="parseJsonData;convertJsonToMap;convertToJson;convertJsonToObject;convertJsonToCollection;convertJsonToObject"/>
<mapEntry key="commonlibrary.JsonUtil" value="getElementCount;isJsonArray;isElementPresentInJson;isElementPresentInJson;getJsonArrayLength;convertJsonArrayToStringList;getValue;getJsonElementValue;updateJsonElementValue;convertJsonObjectToJsonArray;getElementCount"/>
<mapEntry key="commonlibrary.Localization" value="setPrefixAndSuffix;setElementsForWorkFlow;addHardCodedStrings;getLablesForPseudoBuild;getData;validateChanges;createPseudoFile"/>
<mapEntry key="commonlibrary.Log" value="getLogFilePath;Message;errorMessage;cleanUp"/>
<mapEntry key="commonlibrary.LoggingListener" value="onTestStart;onTestSuccess;OnTestFinish;onTestSkipped;onTestFailure"/>
<mapEntry key="commonlibrary.MailClient" value="getTextFromMessage;getTextFromMimeMultipart;disconnect;MailClient;MailClient;pollForMailMessage;monitorNewEmail;getMailMessage"/>
<mapEntry key="commonlibrary.MariaDB" value="createConnection;executeQuery;executeSQLFile;closeConnection"/>
<mapEntry key="commonlibrary.Network" value="ping"/>
<mapEntry key="commonlibrary.Nexpose" value="waitForScanCompletion;waitForScanStart;getEngineActivity;getSiteIdFromSiteDeviceListing"/>
<mapEntry key="commonlibrary.RabbitMQ" value="getMessageFromQueueInRabbitMQ;getRabbitMqMessageCount"/>
<mapEntry key="commonlibrary.Report" value="getClassName;getIDofSuite;createXmlElement;createXMLForDashboard;getResultsInTestNgFormat"/>
<mapEntry key="commonlibrary.RestAPIBase" value="getJsonFromFile;GetResponse;TrimJson;setServiceURL;setTestCaseID;downloadFileInResponse;clearHeaders;setAuthorizationToken;getValueFromReponse;getResult;GetResponse;addURLParameter;GetResponse;getExceptionMessage;getResponseHeader;getStatusCode;addHeader;uploadFileInRequest"/>
<mapEntry key="commonlibrary.RestClient" value="restRequest;restRequest;getHttpStatus;callHttpClient;restRequest;restRequest;setHttpStatus;RestClient;restRequest"/>
<mapEntry key="commonlibrary.RestResponse" value="getResponseObj;getStatus;setResponseString;setStatus;setErrorObject;getErrorObject;getResponseString;setResponseObj"/>
<mapEntry key="commonlibrary.RestTemplateClient" value="createZipFileFromByteArray;restRequest;init;RestTemplateClient"/>
<mapEntry key="commonlibrary.SSH" value="deleteMultipleFileFromUnixInSameDirectory;reStartServiceWithoutStatusCheck;executeCommandWithoutOutput;stopService;setTimeOut;executeCommandOld;startService;initialization;close;checkServiceStatus;copyFile;reStartService;jschInitialize;deleteFileFromUnix;copyFileFromUnix;jschExecuteCommandWithoutOutput;initialization;downloadFile;sendFile;executeCommand;jschExecuteCommand"/>
<mapEntry key="commonlibrary.Selenium" value="click;clickElementInTableCell;sendKeys;navigateToUrl;getXAxisTitle;isElementSelected;sendKeysWithoutClearingText;setServiceURL;setServiceURL;isElementWithTextPresent;getElements;findElement;getSubElementWithTag;getTableRowIndexByCellValue;unSelectCheckBox;isCheckBoxSelected;selectDropdownValue;isElementSelected;dismissAlert;getValuesForMultipleElementsFound;scrollToElement;waitForElementToBeClickable;getAttributeValue;getTableContents;isElementEnabled;navigateBack;waitForElementToDisappear;getTableColumnContents;mouseHover;maximizeMinimizeOrDockBottomDrawer;getElement;getTableColumnValuesInRow;findElementsByTagNameAndAttributeValue;waitForPageToLoad;waitForElementToLoad;scrollIntoView;getToolTipText;selectDropdownValueByVisibleText;getParentNodeOfElement;clickCheckBoxInFrontOfLabel;waitForElementToBeDisplayed;getCurrentURL;clearTextField;getPopupMessage;isCheckBoxSelected;waitForTextToBePresentInElement;getToolTipText;getElementByAttribute;deleteAllCookies;importQuestions;getListContentsByIdentifier;getTableColumIndexFromHeader;checkTableContentSortingAscending;getAllWebElementsOnPage;findElementInTableCellByXpath;getTableCellEventSeverity;getTextFromInputField;click;getChart;sendControlKey;getAllPageElementsLable;getTable;selectCheckBox;dragAndDrop;isElementAbsent;getPageTitle;waitForPageToLoad;mouseHover;setBrowser;getTableColumnContentsByColumnName;waitForElementToBeClickable;takeScreenshot;mouseHover;getTextList;getTableColumnAttributeValueByTagName;waitForTextToBePresentInElement;waitForElementToLoad;doubleClik;unSelectCheckBox;getTableCellValue;waitForElementToBeDisplayed;clickUsingJavascript;scrollIntoView;sendKeysInBrowserNativeDialog;clickUsingJavascript;isElementDisplayed;getHeaderValues;doubleClik;getTextFromInputField;getXPath;getElements;clickElementInTableCellByXpath;getYAxisTitle;oneOfElementsLocatedVisible;wait;getTableColumnEventSeverity;refresh;getWebDriver;getTableRowValuesUnderColumn;getText;getAllPageElementsForTabOrder;getTableCellAttributeValueByTagName;verifySortOrder;checkTableContentSortingDescending;clickOnSvgElement;getElementAttribute;validateTabOrder;waitForElementToBeDisplayed;sendKeysForTextboxElementInTableCell;getTextList;isElementPresent;waitForElementToBeEnabled;sendCtrlA;isScrollBarPresent;clearTextForTextboxElementInTableCell;getAttributeValue;click;scrollToTop;getLegendValues;getTableByIdentifier;getWindowTitle;getElementAttribute;waitForElementToLoad;isAlertPresent;getTableRowContentByCellValue;sendControlKey;selectBrowserTab;isElementPresent;waitForOneOfElementsVisible;sendDel;getText;getXpathCount;getTableDataByAttribute;getElements;getTableCellContent;findElementByTagNameAndText;getElementInfo;clearTextField;sendKeysWithoutClearingText;waitForElementToDisappear;acceptAlert;closeBrowser;waitForElementToBeEnabled;pressEnter;getText;selectDropdownValueByVisibleText;setWebdriverFile;getToolTipText;getStringRepresentation;selectDropdownValueByIndex;getSeriesDataForLegend;waitForTextToBePresentInTableCell;verticalScroll;getElementInfoByReplacingText;initialize;scrollToBottom;getTagCountInElement;isElementEnabled;executeJs;sendKeys;getTableFromContainer;getByObjectOfElement;navigateToTabInBottomDrawer;getLegendColor;scrollToElement;getTableRowCount;isElementAbsent;pressKey;isElementDisplayed;findElementsByTagName;typeText;selectDropdownValue;scrollToElement;getTableCellValue;getAbsoluteXPath;getElement;selectValueFromDropdownMenu;waitForTextToBePresentInElement;getTableColumnCountInRow;setWebDriver;selectCheckBox;getWebdriverFile;waitForElementToBeDisplayed;editChart;getTagCountInTdElement;getTableByIdentifier;selectDropdownValueByIndex;findElementInTableCell;getTagCountInElement;navigateForward"/>
<mapEntry key="commonlibrary.SimpleObfuscator" value="obfuscate;SimpleObfuscator;deObfuscate;getInstance"/>
<mapEntry key="commonlibrary.TesNGMain" value="main"/>
<mapEntry key="commonlibrary.TestAssert" value="executeAssert"/>
<mapEntry key="commonlibrary.TestDataProvider" value="getAppMessage;getTestDataForTestCase;getTestDataForTestCase;readFile"/>
<mapEntry key="commonlibrary.TestListener" value="beforeInvocation;getTestResult;afterInvocation;updateResultFile"/>
<mapEntry key="commonlibrary.TestStatus" value="skip;fail;pass"/>
<mapEntry key="commonlibrary.UiFixtures" value="afterClassForUI;getNewCwpTestContext;takeScreenShotOnFailure;loginInSeparateBrowser;loginInSeparateBrowser;beforeClassForUI"/>
<mapEntry key="commonlibrary.UserDto" value="setTrialDaysRemaining;setLname;setClassName;setUserId;getUserEmail;setDomain;getClassName;setDomainId;getPassword;getUserId;getLname;getSecretKey;printDetail;setUserEmail;getFname;getDomainId;setPassword;setCustomerId;setToken;setSecretKey;getToken;getTrialDaysRemaining;setFname;getDomain;getCustomerId"/>
<mapEntry key="commonlibrary.VMWareSDK" value="revertSnapshot;getVirtualMachine;getNICDeviceConfigSpecification;getVirtualApp;initialize;esxiHostEnterMaintenanceMode;vmWaitForAlarmsToGetCleared;renameESXIhost;vmPowerOn;vAppPowerOn;vmEditNIC;vmDelete;getVmFromVapp;vmChangeESXIHostName;cloneVm;vAppDelete;getEsxiHostFromHostID;getManagedEntityArray;createSnapshot;vmPowerOff;getEsxiHost;getEsxiHostNameForVm;getEsxiHostIdForVm;vAppPowerOff;getEsxiHostNameFromHostID;vmPowerOff;getFolder;getServerConnection;vmGetSummary"/>
<mapEntry key="commonlibrary.Windows" value="killProcess;executeCommand;isProcessRunning"/>
<mapEntry key="commonlibrary.Xml" value="addElementToXml;getElement;convertNodeToString;evaluateMethod;expression;addElementsToXml;xmlToJson;createNodeListFromXml;searchNodeValueInXmlFromSameIndexOfGivenKey;getValueFromXML;nodeToString;getNodeValues;isNodeValueExistsInXml;xmlStringToJson;getXmlDocumentForString"/>
<mapEntry key="coverage.TestAssetVulnerabilityAndThreat" value="setUp;tearDown;testGetVulnerabilityExposure"/>
<mapEntry key="coverage.TestCCDashboardController" value="testGetSecurityPostureByRegion"/>
<mapEntry key="coverage.TestOnPremPolicyTemplateController" value="testGetPolicyTemplateSettingsForPolicyCapability;testGetPsetMapEntryForPolicy;testGetPolicyNavigationData;testGetUniqueValuesForAttribute;testImportPolicyTemplate;testGetPolicyTemplateChoicegroups;testGetPolicyTemplateDetails;testGetPolicyTemplateSettingsMetadata;testGetPolicyTemplateSettings;testGetContentForPolicyTemplate;testGetPolicyTemplateFieldsForUI;testGetAssetsForPolicyTemplate"/>
<mapEntry key="coverage.TestPolicyGroupController" value="testCreateDefaultAVPolicyGroups"/>
<mapEntry key="coverage.TestPolicyTemplateController" value="testGetStaticMetadatas;testGetContentForPolicyTemplate;testGetPsetMapEntryForPolicy;testGetAVPolicyTemplateSettings;testGetPolicyTemplateSettings"/>
<mapEntry key="customeronboarding.CustomerOnBoarding" value="registerCustomerAPI;getGlobalAuthToken;addUserAPI;getCustomerFromEmailId;getAutoEnforceSettings;userDetail;activateUserAPI;enableMFAForUserAPI;getAuthTokenForCustomer;getActivationLinkDetails;getAuthTokenForCustomer;getCustomerActivationLink;setAutoEnforceSettings;getActivationKeyAndUserDetail;loginAPI;validateMFATokenAPI;CustomerOnBoarding;getCustomerUsingActivationKey"/>
<mapEntry key="dashboard.CCDashboardController" value="getSecurityPostureByRegion;CCDashboardController"/>
<mapEntry key="dashboard.Dashboard" value="compareMaps;computePercentage;getChartSecPostureActualData;getTickerAlert;getNewInstanceCount;Dashboard;computeAlertTickerData;getTickerNewMalware;computeHighRiskTickerData;getInstancedataFromMDR;getuiConfig;getsearchField;getAlertDataFromMDR;getDateTimeFromTimestamp;getAssetThreatData;getEventAlertDataFromMDR;getChartSecInsightActualData;isIdenticalHashSet;getTickerHighRisk;getHighRiskTickerActualData;getChartTop5InfectedSubnets;getChartSecInsight;getProtectedInstanceCount;getHashMapFromTop5InfectedSubnetsAPIData;getUnProtectedInstanceCount;getHashMapFromNewMalwareTickerAPIData;getChartInfraChangeActualData;computeChartSecPostureExpectedData;getNewInstanceTickerActualData;getHashMapFromTop5MalwareDetectionsAPIData;getChartThreat;computeChartSecInsightExpectedData;getTickerNewInstance;getEventTickerActualData;getAssets;computeChartInfraChangeExpectedData;getRiskSetFromJson;sendRequest1;getFields;computeEventTickerData;getHierarchy;getThreatExposure;computeNewInstanceTickerData;getChartTopPolicy;getTickerEvent;getAlertTickerActualData;getRiskSetBySeverity;getChartInfraChange;dataCreationForTopPolicyChart;dataValidationForTopPolicyChart;getChartSecPosture;getProtectedInstanceCountByRegion;getSetFromJSONArray"/>
<mapEntry key="dashboard.ThreatDetails" value="SetThreatsListMap;SetThreatCountBySeverityMap;ThreatDetails"/>
<mapEntry key="dashboard.dto.AssetStatusByRegion" value="setTotal;setRegion;getSecured;getAgent_not_installed;getRegion;getTotal;setSecured;setAgent_not_installed;getAgent_installed;setAgent_installed"/>
<mapEntry key="dashboard.dto.SecurityPosture" value="getData;setData;addAssetStatus"/>
<mapEntry key="deepsight.Deepsight" value="getPaginatedThreats;getThreatDetails;getPaginatedVulnerabilities;getThreatExposures;unsuppressVulnerability;verifyThreatsForE2E;getInstanceRisk;getAllVulnerabilities;getSuppressedVulnerabilitiesFromMDR;Deepsight;getCriticalRisks;getGlobalRegionBasedThreatMap;getAllThreats;getVulnerbilityFieldValues;getThreatMapWithSeverityFilter;getThreatMap;getVulnerabilityExposures;suppressVulnerability;getVulnerabilityDetails;getSuppressVulnerabilities;getApplicationsForVulnerability;getThreatMap;getCompositeThreatMapData;getThreatFieldValues;getRiskExposureByApplications;getSoftwareApplications;getVulnerabilitiesForThreat;getSuppressedVulnerabilitiesFromDeepSight;getRiskExposureByApplications;unsuppressVulnerabilityAPI;getThreatMapWithRegionAndSeverityFilters;suppressVulnerabilities;unSuppressVulnerabilities"/>
<mapEntry key="deepsight.DeepsightImport" value="DeepsightImport;getVulnerabilityDetails;importDeepsightFeeds;getSecurityRiskDetails;configureDeepSightDB;getRisksByWFN"/>
<mapEntry key="deepsight.dto.CriticalRisks" value="getVulnerabilities;setThreats;getThreats;setVulnerabilities"/>
<mapEntry key="deepsight.dto.InstanceRiskVo" value="setVulnerabilityCount;getThreatCount;getVulnerabilityCount;setThreatCount;setInstanceId;getInstanceId"/>
<mapEntry key="deepsight.dto.PaginatedRisksFilter" value="setOffset;setThreatMapFilter;getThreatMapFilter;getIdsFilter;getSearchTextFilter;setSortDirection;setUiFilter;getLimit;setSearchTextFilter;getUiFilter;setSort;setIdsFilter;getSortDirection;setLimit;getSort;getOffset"/>
<mapEntry key="deepsight.dto.ProviderRegionZoneFilter" value="ProviderRegionZoneFilter;getRegions;getPlatform;getAvailabilityZone;setRegions;setPlatform;setAvailabilityZone"/>
<mapEntry key="deepsight.dto.RiskExposure" value="getyAxis;getApplicationRiskMap;getxAxis;getSeries;setSeries;setxAxis;setApplicationRiskMap;setyAxis"/>
<mapEntry key="deepsight.dto.RiskType" value="getName;RiskType"/>
<mapEntry key="deepsight.dto.SeriesData" value="setSeriesName;getSeriesName;setData;SeriesData;getData"/>
<mapEntry key="deepsight.dto.SeverityFilter" value="getHigh;setHigh;getMedium;getLow;setMedium;setLow"/>
<mapEntry key="deepsight.dto.SuppressVulnerability" value="getInstances;getVulnerabilityid;setInstances;setId;hashCode;equals;setVulnerabilityid;getId"/>
<mapEntry key="deepsight.dto.Threat" value="setVulnerabilitiescount;setImpactRating;setApplicationscount;getId;getApplicationscount;setInstancecount;equals;getSeveritylevel;getAssociatedVulnerabilities;getSeverity;getAssociatedInstances;getTitle;setSeverity;setId;getDescription;setAssociatedInstances;getVulnerabilitiescount;getInstancecount;getAssociatedApplications;setAssociatedApplications;setSeveritylevel;setDescription;setAssociatedVulnerabilities;getImpactRating;setTitle;hashCode"/>
<mapEntry key="deepsight.dto.ThreatListVO" value="getThreatList;setTotalCount;setThreatList;getTotalCount"/>
<mapEntry key="deepsight.dto.ThreatMapFilter" value="getThreatDuration;getStartTime;setAssetids;getScopeFilter;setThreatDuration;setScopeFilter;setStartTime;setSeverityFilter;getAssetids;setEndTime;getSeverityFilter;getEndTime"/>
<mapEntry key="deepsight.dto.ThreatPublicDto" value="setAssociatedVulnerabilities;equals;getAssociatedApplications;setTitle;getAssociatedInstances;getTitle;getDescription;setDescription;getAssociatedVulnerabilities;setAssociatedApplications;hashCode;setAssociatedInstances;setSeveritylevel;getSeveritylevel"/>
<mapEntry key="deepsight.dto.ThreatPublicDtoListVO" value="getThreatList;setTotalCount;getTotalCount;setThreatList"/>
<mapEntry key="deepsight.dto.Title" value="getText;setText"/>
<mapEntry key="deepsight.dto.VulnerabilitiesThreatsPublicFilter" value="getName;setDescription;setCves;setInstance_ids;setSeverity;setApplication;getInstance_ids;setName;getSeverity;getCves;getApplication;getDescription"/>
<mapEntry key="deepsight.dto.Vulnerability" value="getApplicationscount;getSeverity;setSeverity;getCves;setRiskScore;equals;getSeveritylevel;getId;setAssociatedInstances;setSeveritylevel;getDescription;getAssociatedThreats;setAssociatedApplications;setId;setAssociatedThreats;getInstancecount;getThreatscount;getTitle;getAssociatedInstances;setDescription;hashCode;getAssociatedInstanceIds;setTitle;setAssociatedInstanceIds;setCves;getRiskScore;setApplicationscount;getAssociatedApplications;setThreatscount;setInstancecount"/>
<mapEntry key="deepsight.dto.VulnerabilityListVO" value="getTotalCount;setVulnerabilities;setTotalCount;getVulnerabilities"/>
<mapEntry key="deepsight.dto.VulnerabilityPublicDto" value="getSeveritylevel;getAssociatedInstances;setAssociatedInstances;hashCode;getDescription;setAssociatedThreats;equals;setTitle;setDescription;getAssociatedApplications;getTitle;getAssociatedThreats;setAssociatedApplications;setSeveritylevel;setCves;getCves"/>
<mapEntry key="deepsight.dto.VulnerabilityPublicDtoListVO" value="setVulnerabilities;setTotalCount;getVulnerabilities;getTotalCount"/>
<mapEntry key="deepsight.dto.VulnerabilityVO" value="getLastSeen;setLastSeen;setFirstSeen;setTitle;getAssociatedInstanceCount;getCves;setSeverity;getId;setRiskScore;setAssociatedInstances;setAssociatedInstanceCount;getRiskScore;setId;setAssociatedApplications;setDescription;getSeverity;getAssociatedApplicationsCount;setAssociatedApplicationsCount;setCves;getTitle;getAssociatedInstances;getDescription;getFirstSeen;getAssociatedApplications"/>
<mapEntry key="deepsight.dto.XAxis" value="getTitle;setCategories;getCategories;setTitle"/>
<mapEntry key="deepsight.dto.YAxis" value="setTitle;getTitle"/>
<mapEntry key="docker.Docker" value="mapsAreEqual;getAllContainerDetailsAPI;startNewContainer;getContainerChartAPI;getStartDateForEventsData;stopContainer;getContainerDetailsArrayFromContainerDetails;startDockerService;getTotalCountFromContainerDetails;getAllContainerDetailsAPIforCC;getTopNContainersFromContainerDetailsHashMap;startContainer;getAllContainerDetailsAPI;Docker;runCommandInsideContainer;getEventCountForContainerByContainerName;getEndDateForEventsData;getContainersDataFromChart;startNewContainerWithName;validateContainerDetails"/>
<mapEntry key="docker.InstanceDTO" value="getInstanceUsername;getInstanceIpAddress;getInstanceName;setPpkPath;setInstancePassword;getPpkPath;setInstanceName;setInstanceId;getInstancePassword;setInstanceUsername;setInstanceIpAddress;getInstanceId"/>
<mapEntry key="e2e.EndToEndImpl" value="uninstallDCSAgentFromGivenPlatform;installSoftwaresOnGivenMachine;getAgentInstalled;isAssetPresent;appendToCsv;setupAuthenticatedProxyConfigurationOnInstance;installDCSAgentOnGivenPlatform;isInstallerFileUpdated;setupAnonymousProxyConfigurationOnInstance;uninstallSoftwaresFromGivenMachine;pollAgentStatusOnAsset;createCsvFile;updateInstallerFile;getAsset;isAgentInstalled;uninstallSoftwaresFromGivenMachine;installDCSAgentOnGivenPlatformUsingAnsible;uninstallDCSAgentFromGivenPlatform;installSoftwaresOnGivenMachine;rebootMachine;isInstallerFileUpdated;installAgent;installDCSAgentOnGivenPlatform;EndToEndImpl;applyPolicyCombinationsToAgent;getAssetUsingInstanceId"/>
<mapEntry key="e2e.PolicyCombinations" value="getAllPolicyCombinations;swap;PolicyCombinations;getAllPolicyCombinations"/>
<mapEntry key="event.EventFilter" value="getOrder;getSearchFilter;setPagenumber;setPagesize;getPagesize;getEndDate;getPagenumber;getAdditionalFilters;setOrder;setAdditionalFilters;EventFilter;setEndDate;setDisplayLabels;getStartDate;setStartDate;setSearchFilter;isDisplayLabels"/>
<mapEntry key="event.EventGenerationResponse" value="setFailed;getFailuerReason;isFailed;setFailuerReason"/>
<mapEntry key="event.EventManagement" value="retrieveEventGroupsConfig;verifyEventIsGeneratedForAsset;validateEventSeverityField;processCloudTrailEvent;getEventsForAsset;generateAndVerifyEventForWindowsInstance;generatePFILEventOnUnix;dashboardCharts;generatePFILEventOnUnixUsingSSH;searchAndFilterEvent;getDefaultInputForFindEvent;getMalwareEventTickerCount;generateDSYSEventOnUnix;generateDFWUEventOnUnix;getUniqueInstancesForEvent;sendRequest1;searchAndFilterEvent;waitForEvent;processCspEvent;verifyEventIsGeneratedForAsset;generateDFWUOnAzureVm;getFilesWithMalwareTickerCount;processEventForPSR;isEventEnrichedWithInstanceData;logEventOnAsset;findEvent;verifyEventIsGeneratedForWindowsAsset;processCspEvent;generateDSYSEventUnixUsingSSH;executePostRequestToPublishEvent;findEvent;getEvents;processCloudTrailEvent;getThreatSummaryForStorage;generateAndVerifyEventForLinuxInstance1;validateEventDateField;isEventEnrichedWithPolicyData;processCspEvent;findEvent;generateAndVerifyEventForWindows;modifyEventInputData;getEvent;getEventCount;EventManagement;findEvent;waitForEvent;generateAndVerifyEventForLinuxInstanceUsingSSH;generateAndVerifyEventForDocker;eventTrend;generateDRGWEventOnWindows;setTimeSpanForFindEvent;getBucketsWithMalwareTickerCount;findEvent"/>
<mapEntry key="event.SearchFilter" value="getSearchQuery;setSearchQuery"/>
<mapEntry key="f24.F24" value="triggerAutomatedAgentDeployment;F24;getAutomatedAgentDeploymentStatus;waitUntilAutomatedProtectionJobComplete;getCFTDeploymentAttributesAPI;pollForF24Status"/>
<mapEntry key="f24.dto.CloudPlatformProvisioning" value="setAdditionalProperty;getCftUrl;setConnectionId;getToken;getAdditionalProperties;setExternalId;getExternalId;getSymantecAccountId;setCftUrl;getConnectionId;setToken;setConnectionName;getConnectionName;setSymantecAccountId"/>
<mapEntry key="f24.dto.Deployments" value="getTechs;setTargets;setAdditionalProperty;getAdditionalProperties;setProxyServer;getProxyServer;setTechs;getTargets;getConnectionId;setConnectionId"/>
<mapEntry key="f24.dto.F24ConfigStatus" value="getStep;getAdditionalProperties;setAdditionalProperty;getPlatform;getConnectionId;getRegion;setRegion;setConnectionId;setStep;setPlatform"/>
<mapEntry key="f24.dto.Step" value="getAdditionalProperties;getStatus;getPayload;getName;setPayload;setStatus;setAdditionalProperty;setName"/>
<mapEntry key="f24.dto.Target" value="getReboot;setAdditionalProperty;setInstanceId;getAdditionalProperties;getInstanceId;getId;setRegion;getRegion;setReboot;setId"/>
<mapEntry key="f24.dto.WithAgentDeployment" value="getAdditionalProperties;getWithAgentDeployment;setAdditionalProperty;setWithAgentDeployment"/>
<mapEntry key="generalsettings.dto.Attribute" value="getAutoScalingGroupName;getMachineImageId;setMachineImageId;setAutoScalingGroupName;getAdditionalProperties;setAdditionalProperty"/>
<mapEntry key="generalsettings.dto.AutoEnforce" value="getAutoEnforceTopRecommendation;setAutoEnforceTopRecommendation;getAttributes;setAttributes;getAdditionalProperties;setAdditionalProperty"/>
<mapEntry key="generalsettings.dto.EventHubSettings" value="setEnabled;setAdditionalProperty;getEnabled;getAdditionalProperties"/>
<mapEntry key="generalsettings.dto.GeneralSettingsDto" value="setAutoDiscover;getMultiAccountForStorageEnabled;setImportEventsToAwsOverbridgeSettings;setMultiFactorEnabledFlag;getAutoAvScanState;getEventHUBSettings;setPrivateDeployment;getImportEventsToAwsOverbridgeSettings;setBridgeIntegrationState;setAutoAvScanState;getPrivateDeployment;setMultiAccountForStorageEnabled;getBridgeIntegrationState;getMultiFactorEnabledFlag;setAutoEnforce;getAutoEnforce;setEventHUBSettings;getAutoDiscover"/>
<mapEntry key="generalsettings.dto.ImportEventsToAwsOverbridgeSettings" value="setAdditionalProperty;getAdditionalProperties;getEnabled;setEnabled"/>
<mapEntry key="generalsettings.dto.PrivateDeployment" value="setEnabled;getEnabled;setAdditionalProperty;getAdditionalProperties"/>
<mapEntry key="googlecloud.GCP" value="listGlobalImages;createInstance;deleteInstance;listCustomImages;deleteInstance;createGroupTemplate;getGCPInputStream;GCP;getInstanceGroups;getInstanceDetail;getVMList;startInstance;resetInstance;getInstanceToDiskIdMap;getRegions;createInstance;deleteGCPInstances;GCP;stopInstance;getZones;createComputeService"/>
<mapEntry key="googlecloud.GoogleCloudUrlProcessor" value="processParameters;processParameters"/>
<mapEntry key="googlecloud.adapter.dto.GCPAdapterConfig" value="getGcpProperties;setStatus;setName;setCloudPlatform;setPollingIntervalMinutes;getStatus;getCloudPlatform;setGcpProperties;setId;getName;setDescription;getPollingIntervalHours;getDescription;getPollingIntervalMinutes;setPollingIntervalHours;getId"/>
<mapEntry key="googlecloud.lib.GCPConfig" value="setErrorString;getAdapterName;setConfigured;setName;getId;getPollingInterval;getGcpProperties;setPolling;setDeleted;getName;setGcpProperties;isDeleted;isConfigured;setAdapterName;isPolling;getErrorString;getProjectName;setProjectName;setPollingInterval;setId"/>
<mapEntry key="googlecloud.lib.GCPImages" value="GCPImages;getImageName;getImageProject"/>
<mapEntry key="googlecloud.lib.GCPInstanceState" value="GCPInstanceState;getInstanceState;getGCPInstanceState"/>
<mapEntry key="googlecloud.lib.GCPIntegration" value="waitForNextPollingJob;GCPIntegration;checkIfAdapterConfigured;getAdapterConfigUsingConnectionId;getAssetsAssociatedWithAdapters;deleteAdapterConfiguration;getAdapterConfigByName;deleteCloudConnection;createAdapterConfiguration;getCloudAdapters;getGCPInputStream;readFile;waitUntilPollingJobComplete"/>
<mapEntry key="googlecloud.lib.GCPProperties" value="setServiceAccountJson;getServiceAccountJson"/>
<mapEntry key="googlecloud.lib.GCPServiceAccountJson" value="getAuth_provider_x509_cert_url;setTokenURI;getProjectId;setClient_x509_cert_url;setAuth_provider_x509_cert_url;setPrivateKeyId;setClientId;getTokenURI;setClientEmail;getClientId;getType;getPrivateKey;setAuthURI;setPrivateKey;setType;getAdditionalProperties;getAuthURI;getPrivateKeyId;getClientEmail;setProjectId;getClient_x509_cert_url;setAdditionalProperties"/>
<mapEntry key="instancePool.BucketDto" value="getName;isUsedForScheduledScan;setName;setUsedForScheduledScan;setRegion;getRegion"/>
<mapEntry key="instancePool.BucketPoolInput" value="getUseexistingbuckets;setAdditionalProperty;getBucketList;setBucketList;getAdditionalProperties;setUseexistingbuckets"/>
<mapEntry key="instancePool.ExistingInstance" value="setType;setInstalledApplications;setOsPlatform;getRegion;setInstanceId;getOsPlatform;setAgentInstallableDirNameOnInstance;getPrivateKeyPath;getName;setCloudPlatform;getPassword;getInstanceIP;getAdditionalProperties;setName;getInstalledApplications;getInstanceId;getDeviceId;setAgentInstalled;setInstanceIP;getAgentInstallableDirNameOnInstance;getCloudPlatform;setAdditionalProperty;getAgentInstalled;setPassword;getUserName;getType;setRegion;setPrivateKeyPath;setDeviceId;setUserName"/>
<mapEntry key="instancePool.InstanceDto" value="getCloudPlatform;getKeyGroupName;getVirtualNetworkName;getAgentPackagName;setAmi;getPublicIPAddressName;isNew;setZoneName;setCloudPlatform;setDeleted;setCommandLineArgs;getVmName;setAgentPackagName;isInstallAgent;getDeviceId;setType;setUsePassword;isInUse;setProjectName;setImage;getVmId;setResourceGroupName;setKeyGroupName;setVmId;setRegion;getOsPlatform;setInstanceType;setIsNew;setOsPlatform;getResourceGroupName;setPublicIPAddressName;getProxyEnabled;setSecurityGroupName;setDeviceId;setWindowsInstallerBatchFilePath;getProjectName;getPassword;setAgentPackageLocation;printDetails;setInstanceId;getNetworkInterfaceName;getName;setInstalledApplications;getClassNames;setPrivateKeyPath;getPrivateKeyPath;getZoneName;isDeleted;setInstallAgent;getInstanceUserName;isUsePassword;getMessage;setPassword;setMessage;setInstanceIP;isImage;setUserDto;getCommandLineArgs;getWindowsInstallerBatchFilePath;getInstanceType;setInstanceUserName;getRegion;getInstanceIP;getAmi;setName;isAgentInstalled;setNetworkInterfaceName;setAgentInstalled;getInstanceId;setProxyEnabled;getInstalledApplications;getUserDto;getAgentPackageLocation;getSecurityGroupName;addClassNames;setVmName;setInUse;getType;setVirtualNetworkName"/>
<mapEntry key="instancePool.InstancePoolInput" value="setUseInstances;setComment;setNewInstances;getNewInstances;setPscpDir;setExistingInstances;getPscpDir;getAdditionalProperties;getComment;getUseInstances;getExistingInstances;setAdditionalProperty"/>
<mapEntry key="instancePool.NewInstance" value="getSecurityGroupId;setResourceGroupName;setSecurityGroupId;getOsPlatform;setOsImageVersion;setUserName;getInstanceName;getPassword;getPrimaryNetwork;setSecurityGroupName;setPrimaryNetwork;getImageName;getOsName;getImageProjectName;setInstalledApplications;setOsVersion;getAgentInstallableDirNameOnInstance;setOsVender;setAgentPackagName;getName;setAdditionalProperty;getWindowsInstallerBatchFilePath;setOsPlatform;getProjectName;getZoneName;getProxyEnabled;getPrivateKeyPath;getUserName;getCloudPlatform;getResourceGroupName;setCloudPlatform;setRegion;setPrivateKeyPath;setProxyEnabled;setWindowsInstallerBatchFilePath;getOsVersion;getInstalledApplications;setOsName;getAMI;setImageProjectName;setKeyName;setName;setImageName;setType;setProjectName;setAMI;getAgentPackagName;getKeyName;getType;getOsImageVersion;getOsVender;setAgentInstallableDirNameOnInstance;getRegion;setInstanceName;getSecurityGroupName;setPassword;setZoneName;getAdditionalProperties"/>
<mapEntry key="jobs.AVJobDetailsView" value="getInstance_platform;setInstance_name;getInstance_cloudplatform;getInstance_id;setInstance_platform;setInstance_cloudplatform;setMalwareCount;getMalwareCount;setInstance_id;getJobHistory;setJobHistory;getInstance_name"/>
<mapEntry key="jobs.JobCategoryView" value="setAllowNotification;getJobDetails;setScheduleType;getScheduleType;getCategory;getAllowNotification;setResultCount;setJobDetails;getResultCount;setCategory"/>
<mapEntry key="jobs.JobDetail" value="getIsGroupJob;getPollingIntervalHours;hashCode;setEnabled;getAllownotification;getJobId;setIsGroupJob;getStartTime;getJobName;getEndTime;setStatus;getScheduleId;setStartTime;setEndTime;equals;getPollingIntervalMinutes;setPollingIntervalHours;setUserName;getEnabled;setScheduleId;setAllownotification;getStatus;setFailReason;setSummary;getUserName;setScheduleType;setJobName;setJobId;setPollingIntervalMinutes;getFailReason;getScheduleType;getSummary"/>
<mapEntry key="jobs.JobHistory" value="setJobRunId;setFailedreason;getSummary;setJobName;setStarttime;getJobRunId;setEndtime;getFailedreason;setStatus;setSummary;setUserName;getStatus;setJobId;getJobId;getEndtime;getStarttime;getJobName;getJobParameterId;setJobParameterId;getUserName"/>
<mapEntry key="jobs.JobNotification" value="setJobIds;setEnabled;getEnabled;getCategory;setCategory;getJobIds"/>
<mapEntry key="jobs.JobSchedule" value="getId;getCronexpression;setId;setPollinginterval;setCronexpression;getStarttime;setScheduleid;getScheduleid;getPollinginterval;setStarttime;getEndtime;setEndtime"/>
<mapEntry key="jobs.JobsController" value="getAllJobsForCategoryWithScheduleType;getPolicyEnforcementJobDetail;updateJobSchedule;isJobPresentForApplyPolicy;getPolicyEnforcementJobDetail;getApplyPolicyGroupJobCount;getJobDetailForApplyPolicy;getAVJobDetail;getJobDetailForApplyPolicy;isJobPresentForApplyPolicy;waitForApplyPolicyGroupJobCreated;enableJobNotification;JobsController;getAllJobsForCategory;isInstancesAssociatedWithPolicyEnforcementJob;cancelJobSchedule;numberOfJobsCreatedForApplyPolicyGroup;isJobPresentForAWSConnection;updateRecurringJobSchedule;isJobPresentForAWSConnection;getAllJobs;getPolicyEnforcementJobDetail;getJobsCountForCategory;updateJobSchedule"/>
<mapEntry key="jobs.JobsManagement" value="getJobs;JobsManagement;getEpochTimeofNextPollingJobForCloudConnection;reRunJob;retriggerDeleteConnectionJobs;getWaitTimeofNextPollingJobForCloudConnection;getJobDetailsByJobIdFromJobDetailsArray;cancelSchedule;getSyncJobDetailsForCloudConnection;getJobsDetailsUsingCategory;scheduleJob;getJobsUsingCategory;getLastedJobIdFromJobDetailsArray;forceDeleteConnectionJob;getJobsWithJobStatus"/>
<mapEntry key="jobs.PolicyEnforcementJobDetailView" value="setJobHistories;getMode;setPolicyGroupParameter;setPolicyGroupName;getJobHistories;getPolicyGroupName;setMode;getPolicyGroupParameter"/>
<mapEntry key="login.LoginPage" value="getCurrentDomain;LoginPage;login;logOut;isUserLoggedIn;oktaLogin;switchDomain;isUserLoggedIn;isUserLoggedOut;enterGAuthSecretKey;fillUserNameAndPassword;login;login;login"/>
<mapEntry key="multidomain.dto.CreateDomainRequest" value="setAdministrator;setProductId;setOrganizationalUnit;getRegion;getDomainName;setDomainName;getAdministrator;setRegion;getProductId;getOrganizationalUnit"/>
<mapEntry key="multidomain.dto.Domain" value="setDefault;getPartitionId;isDefault;setId;getId;getName;setPartitionId;setName"/>
<mapEntry key="multidomain.dto.DomainUser" value="setLastName;getUserId;setFirstName;getPrivileges;setEmail;setPrivileges;getEmail;getFirstName;getLastName;setUserId"/>
<mapEntry key="multidomain.lib.MultidomainController" value="MultidomainController;getDomainIdUsingDomainName;createDomainWithNewUser;getAllDomains;switchDomain;getDomainsAvailableForUser;createDomain;createDomainWithExistingUser"/>
<mapEntry key="notifications.NotificationManagement" value="getNotifications;changeNotificationsStatus;getNotifications;enableNotification;disableNotification;NotificationManagement"/>
<mapEntry key="oracle.connection.dto.CreateConnectionRequest" value="setDescription;setName;getPollingIntervalHours;getOcpProperties;getPollingIntervalMinutes;toString;setPollingIntervalMinutes;getName;setPollingIntervalHours;setOcpProperties;getDescription;setCloud_platform;getCloud_platform"/>
<mapEntry key="oracle.connection.dto.CreateConnectionResponse" value="setDescription;setOcpProperties;getPollingIntervalHours;setStatus;setId;getCloud_platform;setPollingIntervalHours;setCloud_platform;getPollingIntervalMinutes;getDescription;setPollingIntervalMinutes;getName;getStatus;setName;getOcpProperties;getId;toString"/>
<mapEntry key="oracle.connection.dto.OcpProperties" value="getPrivateRSAKey;setAuditevent_sync;getFingerPrint;getTenancyId;toString;getAuditEventSyncEnabled;setUserId;getHomeRegion;setPrivateRSAKey;getAuditevent_sync;setHomeRegion;setFingerPrint;getUserId;setTenancyId;setAuditEventSyncEnabled"/>
<mapEntry key="oracle.connection.lib.OCIIntegration" value="OCIIntegration;checkIfOciAdapterConfigured;getOciConnectionByName;createOciConnection;getOciConnections"/>
<mapEntry key="policymanagement.ExternalAPIController" value="revokePoliciesOnAssets;ExternalAPIController;applyPolicyGroupToAsset;applyPolicyGroupToAssets;sendRequest1;revokePoliciesOnAsset"/>
<mapEntry key="policymanagement.MinAgentVersion" value="setMinor_ver;setSerial;getSerial;setMajor_ver;getMinor_ver;getMajor_ver"/>
<mapEntry key="policymanagement.OnPremPolicyTemplateController" value="getPolicyTemplateSettingsForPolicyCapability;getPolicyNavigationData;getUniqueValuesForAttribute;getContentForPolicyTemplate;searchPolicyTemplates;getPolicyTemplateSettingsMetadata;getPolicyTemplateFieldsForUI;getPolicyTemplateDetails;getAssetsForPolicyTemplate;getPolicyTemplateChoicegroups;getPsetMapEntryForPolicy;getPolicyTemplateSettings;searchPolicyTemplates;OnPremPolicyTemplateController;importPolicyTemplate"/>
<mapEntry key="policymanagement.PolicyGroupController" value="getPolicyGroupsForAssets;getRulesForAppliedAsset;createDefaultAVPolicyGroups;getRulesForAssetAndPolicyGroup;getPolicyGroupForAsset;getAssetsForPolicyGroup;deletePolicyGroupsAssociationsForAsset;getPoliciesForPolicyGroupPlatform;PolicyGroupController"/>
<mapEntry key="policymanagement.PolicyGroupDetails" value="getGroupType;setPolicyDetails;getCapabilities;getAuthor;setName;setMode;setGroupType;getMinAgentVersion;getName;setPolicyDetails;setDescription;getDescription;setPlatform;getMode;setMinAgentVersion;setCapabilities;getRules;setAuthor;getPolicyDetails;getPlatform;setRules"/>
<mapEntry key="policymanagement.PolicyLibrary" value="getChoiceGroups;getPolicyTemplate;importPolicyResourceIntoMariaDB;getClassicPolicyTemplates;importPolicyTemplatesIntoMariaDB;getPolicyNavigationData;searchPolicyTemplates;getSettingsOfTemplatePolicy;getAllPolicyTemplates;getAllPolicyTemplatesWithFieldName;createCPEDictionary;getPolicySettingsMetadataFromMariaDB;importCPEDictionary;createDefaultPolicyGroups;PolicyLibrary;getFieldValuesOfPolicyTemplates;searchPolicyTemplatesWithConditions;getNavigationDataOfTemplatePolicy;upgradePolicyInPolicyGroup;getMetadataFieldsOfTemplatePolicyGroup;getAvailablePolicyNames;searchPolicyTemplates;getClassPolicyTemplateId;getMetadataFieldsOfTemplate;getAssetForClassicPolicy"/>
<mapEntry key="policymanagement.PolicyManagement" value="getDefaultPolicyGroups;createPolicyGroupForUI;deletePolicyGroupForUI;associatePolicyGroupWithRecommendation;editPolicyGroup;isPolicyPresentInPolicyGroup;getUpgradablePolicies;getAppliedPolicyGroup;removePolicyContentAssociationWithPolicy;createRecommendation;updatePolicyGroup;removePolicyGroupAssociationWithAsset;getPolicyIdAndPolicyContentId;waitForPolicyRevokeOnPrem;deletePolicyGroup;verifyRecommendationRanking;saveEditedAVPolicyInCache;getRecommendation;getPolicyNavigationDataIDS;associatePolicyWithPolicyContent;getPolicySettings;getPolicySettingsIPS;changeAllPolicyGroupModeToTest;searchPolicyGroup;getAppliedPolicyGroupName;waitForAVPolicyApplied;waitForPolicyRevoke;getPolicyGroupenabled_capabilities;getAllRecommendation;getAssociatedRecommendationForAsset;getAllPoliciesForPolicyGroup;waitForPolicyApply;getPolicyRuleSetting;changePolicyGroupMode;editPolicyGroupForUI;createPolicyContent;getStringFromJson;getEffectivePolicyForAsset;sortPolicyGroupByColumName;addUpdateProcessMapEntry;getAssetStatus;getAllOnPremPolicies;policyGroupUpgrade;getRecommendationFromMdr;searchPolicyByKeyword;applyPolicyGroup;getAllPoliciesForUI;editPolicyGroupForUI;getAssociatedInstanceForPolicy;waitForPolicyApply;searchPolicyByFilterAndKeyword;getAssetsForPolicyGroup;getAllPolicyGroupsForUI;paginationOfPolicies;copyPolicy;getPolicy;associatePolicyToPolicyGroup;getAssociatedSettingsPolicy;PolicyManagement;getPolicySettingsForAssetIPS;waitForPolicyRevoke;getRulesOnAssetForPolicyGroup;filterPolicyByColumNameValue;isPolicyGroupRevoked;editPolicyGroupForUI;associateRecommendationWithAsset;paginationOfPolicyGroups;removeRecommendationAssociatedWithAsset;removePolicyAssociationWithPolicyGroup;getAllInstanceForPolicyGroups;downloadCachedPolicyFile;getAssociatedParametersForPolicy;changePolicyState;getAllPoliciesForPolicyGroupForUI;getEffectivePolicyForPolicyGroup;createPolicyGroup;getPolicyUsingTemplateId;suppressRuleForRuleId;pushPolicyGroupToDomain;updatePolicyBasedRecomendationTrueInPropertyFile;getPolicyNavigationDataIPS;getAppliedPolicyGroupAuthor;createPolicyGroup;addUniqueDateTimeToCopyPolicyApiInput;deletepolicy;createPolicyGroupForUI;searchPolicyGroupByKeyword;getDistributionOfAssetAcrossRecommendations;policyGroupRequest;applyPolicy;sortPolicyByColumName;getPolicyRules;getPolicyContentForPolicy;updatePolicySettings;getProcessMapEntry;deleteEffectivePolicy;getPolicyCommandErrors;waitForPolicyRevokeOnPrem;revokePolicyFromAgent;getPolicyRules;deletePolicyContent;getPolicyGroupsForRecommendation;saveEditedPolicyInCache;isLatestPolicyGroupApplied;validatePolicyListValues;getPolicySettingsIDS;getSpecificPolicies;getRecommendationForAsset;deleteAllpolicyGroups;getChoiceGroupDetailsFromResponse;getPolicyGroupFields;getPolicyFields;applyPolicyGroup;getAssociatedPolicyGroupOfPolicy;getPolicies;removePolicyGroupAssociationWithRecommendation;getPolicyTemplateIdAndPolicyContentId;pollRecommendationForAsset;getPolicyGroupsWorthUpgradingForTemplate;getAppliedPolicyGroupId;getPolicyApplyStatusOnAsset;getInstanceForSamePolicyGroupApplied;cleanPolicyCache;searchPolicyGroupByFilterAndKeyword;getInstanceRecommedationDetailsForUI;createPolicy;getPolicyGroupInfo;getFiveMinsFromCurrentUTCDateInMilliseconds;filterPolicyGroupByColumNameValue;createPolicyGroupForUI;verifyPolicyidFromPolicyResponse;updatePolicy;getChoiceGroupDetailsFromInput;getPolicyGroup;editPolicyGroupRESTThroughInputJSON;getPolicyGroupRankingWithIds;getPolicyGroupIDFromPolicyGrpName;getPolicyChoiceGroup;ignoreRecommendation;getPoliciesFields;validateKeywordSearchRearchResult;getAllPolicies;getPolicyAppliedStatusOnAgent;getPolicyInputJsonString;getPolicySettingsForAssetIDS;getAllPolicyGroups;deleteRecommendation;getPolicySettingsMetadata;getPolicyGroupBasicInfo"/>
<mapEntry key="policymanagement.PolicyObject" value="getTemplateType;getMajorVersion;getDescription;getPolicySettings;getMinorVersion;setName;setSerial;getId;getAuthor;getPsetmapentry;isIs_predefined;setDescription;setTemplateid;setPolicySettings;setId;setPsetmapentry;setTitle;setIs_predefined;setTemplateType;setAuthor;setMajorVersion;getTitle;setMinorVersion;is_predefined;setPolicyEdited;getName;getTemplateid;getSerial;isPolicyEdited"/>
<mapEntry key="policymanagement.PolicyReccomendationScheduler" value="schedulePolicyReccomendation;PolicyReccomendationScheduler"/>
<mapEntry key="policymanagement.PolicyRuleManagment" value="getTagRule;getRulesForAssetAndPolicyGroup;associateRuleToPolicyGroup;removeRuleAssociatedToPolicyGroup;getRulesForPolicyGroup;getPolicyRulesForAsset;addRuleForPolicyRecommendation;addRuleForPolicyRecommendation;getPolicyRule;getAssociatedRuleToPolicyGroup;getVPCRule;deletePolicyRule;getRuleIDByPassingRuleType;PolicyRuleManagment;getRuleForPolicyTemplate;getOSPlatformRule;getSubnetRule;getCloudPlatformRule;getAMIIdRule"/>
<mapEntry key="policymanagement.PolicyTargetingController" value="PolicyTargetingController;applyRecommendationScheduled"/>
<mapEntry key="policymanagement.PolicyTemplateController" value="getAssetsForPolicyTemplate;getPolicyTemplateSettings;searchPolicyTemplates;searchPolicyTemplates;getAVPolicyTemplateSettings;getContentForPolicyTemplate;getStaticMetadatas;PolicyTemplateController;getPsetMapEntryForPolicy"/>
<mapEntry key="policymanagement.PolicyTemplateId" value="getPlatform;getName;getId;printPolicyTemplatesInfo;setName;setRevision;setId;setPlatform;setPolicyTemplateId;getPolicyTemplateId;PolicyTemplateId;getRevision"/>
<mapEntry key="policymanagement.UpdatePolicyRequest" value="getAffectedPolicyTemplateId;getTargetGroupId;setTargetGroupId;setAffectedPolicyTemplateId;getOperation;setOperation"/>
<mapEntry key="policymanagement.dto.AlertConfiguration" value="getEnable;setEnable;getSeverity;setSeverity"/>
<mapEntry key="policymanagement.dto.Attribute" value="setType;getType;getValue;setValue"/>
<mapEntry key="policymanagement.dto.AttributeValue" value="setAttribute_name;getAttribute_name;setAttribute_value;getAttribute_value"/>
<mapEntry key="policymanagement.dto.BytesPolicyContent" value="setContent;getContent"/>
<mapEntry key="policymanagement.dto.Choice" value="getName;setValue;getValue;setName;getInfo;setInfo"/>
<mapEntry key="policymanagement.dto.ChoiceGroups" value="setInfo;setVersion;getOstype;setAfversion;getVersion;getAfversion;setOstype;setChoices;getInfo;getChoices;setName;getName"/>
<mapEntry key="policymanagement.dto.Choices" value="setName;getChoice;setChoice;getName"/>
<mapEntry key="policymanagement.dto.CpeDictionaryItem" value="getCpe;setTitle;setCpe23;setCpe;getCpe23;getTitle"/>
<mapEntry key="policymanagement.dto.FileVO" value="getFileName;getKey;setKey;setFileName"/>
<mapEntry key="policymanagement.dto.InputFormat" value="getRequiredFormat;setRequiredFormat;setValueSeparator;setOptionalFormats;getFields;getValueSeparator;setFields;getOptionalFormats;setIsMultiValued;getIsMultiValued"/>
<mapEntry key="policymanagement.dto.InputFormatField" value="setKey;getKey;setDisplayName;getDisplayName"/>
<mapEntry key="policymanagement.dto.MetaData" value="setParamtype;setMetaDataAttributes;getParamtype;setName;getName;getMetaDataAttributes;getMultiplicity;setMultiplicity"/>
<mapEntry key="policymanagement.dto.MetaDataAttributes" value="setConstraint;getRequired;getConstraint;setDisplayName;setPlatform;setOrder;setRequired;getType;getDisplayName;getPlatform;setForUI;getForUI;setChoiceGroupName;getChoiceGroupName;getInputFormat;setName;setType;getName;getOrder;setInputFormat"/>
<mapEntry key="policymanagement.dto.MetaDatas" value="setMetadata;getMetadata"/>
<mapEntry key="policymanagement.dto.NavigationFolder" value="getNavigationParameter;getNavigationFolders;setNavigationItems;setNavigationFolders;getNavigationItems;setNavigationParameter"/>
<mapEntry key="policymanagement.dto.NavigationItem" value="getNavigationParameters;setNavigationParameters"/>
<mapEntry key="policymanagement.dto.NavigationParameter" value="setName;setValue;getName;getValue"/>
<mapEntry key="policymanagement.dto.Parametervalue" value="getValueName;getValue;setValue;setValueName"/>
<mapEntry key="policymanagement.dto.PolicyContent" value="getContentJson;setContentJson"/>
<mapEntry key="policymanagement.dto.PolicyGroup" value="setEnabledCapabilities;getCreated;setCreated;getPolicyGroupType;setUpgradable;setRevision;setModified;setName;PolicyGroup;setPolicyGroupMode;getPolicyContentId;getAuthor;setPlatform;setId;getId;setPolicyGroupType;setPolicyContentId;getPlatform;getCustomProperties;getName;isSystemGroup;getDescription;setModifiedBy;getRevision;setDescription;setAuthor;isUpgradable;getEnabledCapabilities;getMinAgentVersion;setCustomProperties;getModifiedBy;getPolicyGroupMode;PolicyGroup;setMinAgentVersion;getModified"/>
<mapEntry key="policymanagement.dto.PolicyGroupMode" value="getPolicyGroupModeValue;PolicyGroupMode;fromString"/>
<mapEntry key="policymanagement.dto.PolicyGroupSearchParams" value="setLimit;setOffset;getFieldsParam;addFields;setWhere;setSort;setDefaultFieldsParam;setFields;getSearchParams"/>
<mapEntry key="policymanagement.dto.PolicyGroupView" value="getId;setUpgradable;setNumberOfPolicies;PolicyGroupView;getEnabledCapabilities;getAuthor;getName;getPlatform;getCustomProperties;setCustomProperties;setEnabledCapabilities;setMinAgentVersion;getCommonAttributes;isUpgradable;setCategory;setRevision;getCategory;getNumberOfInstances;getNumberOfPolicies;getModified;getAlertConfigurationinfo;setName;getModifiedBy;getCreated;setAssociatedPolicyTemplates;setModifiedBy;setNumberOfInstances;getDescription;getPolicyRules;getMinAgentVersion;getPolicyGroupMode;getRank;setId;setPolicyGroupType;getAssociatedPolicyTemplates;setDescription;PolicyGroupView;setCommonAttributes;setRank;setAuthor;setPolicyGroupMode;setAlertConfigurationinfo;getRevision;getPolicyGroupType;setPolicyRules;setPlatform"/>
<mapEntry key="policymanagement.dto.PolicyNavigationData" value="setNavigationItems;getNavigationFolders;getType;setInfo;setNavigationFolders;getInfo;getNavigationItems;setType"/>
<mapEntry key="policymanagement.dto.PolicyParameter" value="setDirty;getType;setUri;setValues;setName;setType;getName;setDisplayName;getDirty;getDisplayName;getValues;getUri"/>
<mapEntry key="policymanagement.dto.PolicyRuleDTO" value="getDescription;getConditionDisplayText;setOrder;getName;getRule;getIsSystemRule;setRuleText;setDescription;getDisplayName;getRuleText;setIdMetadata;getId;setDisplayName;setRule;getIdMetadata;getOrder;setId;getRuleType;setIsSystemRule;setRuleType;setName;setConditionDisplayText"/>
<mapEntry key="policymanagement.dto.PolicySetting" value="setCreated;getModified;getCreated;getAppName;setSections;setModified;setAppName;setSecurityCapabilityType;getSections;getSecurityCapabilityType"/>
<mapEntry key="policymanagement.dto.PolicySettingRule" value="setType;setSettings;setState;setSettingClassifier;getType;getAppName;getAssociatedRules;getParameters;setHidden;getPolicyParameters;setAssociatedRules;getMetadata;setReadonly;getState;setAssociatedOptions;setMetadata;setPolicyParameters;getId;setName;getHidden;setEditable;getName;setId;addCategory;getReadonly;getSettings;getEditable;getAssociatedOptions;setCategory;setAlertConfiguration;getAlertConfiguration;getDescription;setAppName;getSettingClassifier;setDescription;getCategory;setParameters"/>
<mapEntry key="policymanagement.dto.PolicySettingsSection" value="getSettings;setCategory;setNavigationMetadata;getCategory;getSettingClassifier;getHidden;getSections;getDisposition;getType;addCategory;getNavigationMetadata;setIsAlertConfigured;setDisposition;getAppName;getDescription;setSections;setType;getTitle;setSettings;getIsAlertConfigured;setSettingClassifier;setAppName;setHidden;setTitle;setDescription"/>
<mapEntry key="policymanagement.dto.PolicyTemplate" value="getCustomProperties;getPlatform;setBytesPolicyContent;getMetadatas;setRevision;getPolicyContentId;setPlatform;setCapabilities;getAuthor;setPolicyParameters;getTemplateType;setIsTemplate;getRevision;getPolicyVersion;setPolicyContentId;setPolicyNavigationData;setTemplateType;getPolicySettings;setSubType;getChoiceGroups;getModifiedBy;setMetadatas;getObjectClasses;setModifiedBy;getPolicyNavigationData;setPolicyVersion;getPolicyId;getModified;setName;setTypeDisplayName;getResId;getTemplateId;getTypeDisplayName;setObjectClasses;getName;setChoiceGroups;setTemplateId;setCpe;setPolicyContent;setCreated;getCreated;getPolicyObjectURI;getCapabilities;getTitle;getIsTemplate;setIsLatest;getBytesPolicyContent;getPsetmapentry;setType;getDescription;setCustomProperties;getPolicyParameters;setPsetmapentry;setResId;setPolicySettings;setPolicyId;getIsLatest;setAuthor;setModified;getType;setTitle;getSubType;getCpe;setPolicyObjectURI;getPolicyContent;setDescription"/>
<mapEntry key="policymanagement.dto.PolicyTemplateView" value="getType;getTypeDisplayName;setTypeDisplayName;setSubType;getResId;getSubType;getModifiedBy;setType;setModified;setPolicyContent;getModified;setCreated;getCreated;getCapabilities;getPolicyObjectURI;setAuthor;getPolicyContent;setModifiedBy;setCustomProperties;setCpe;getTitle;getCpe;getDescription;getIsLatest;setCapabilities;setIsLatest;setResId;setPlatform;setPolicyVersion;getName;setPolicyId;getCustomProperties;getRevision;setNumberOfPolicyGroups;getPolicyVersion;setDescription;getPlatform;getNumberOfPolicyGroups;setTemplateType;setTitle;setPolicyObjectURI;setVersionRevision;setLatestEvents;getAuthor;PolicyTemplateView;setName;getTemplateId;setRevision;getVersionRevision;PolicyTemplateView;getTemplateType;setTemplateId;getLatestEvents;getPolicyId"/>
<mapEntry key="policymanagement.dto.PolicyTemplateViewWrapper" value="getCount;setCount;setPolicyList;getPolicyList"/>
<mapEntry key="policymanagement.dto.Property" value="setPropertyName;getPropertyName;Property;setPropertyValue;Property;getPropertyValue"/>
<mapEntry key="policymanagement.dto.PsetMap" value="compareTo;setAttrs;setRuleId;getRuleId;setiRuleId;setPsetName;getPsetName;getOption;findAttrFromPsetMapWithType;getInfo;getiRuleId;toSortedMap;setInfo;setOption;findAttrFromPsetMapWithValue;getAttrs"/>
<mapEntry key="policymanagement.dto.PsetMapEntry" value="getPsetMaps;setPsetMaps;setOptionType;getLastRuleId;getOptionType;setLastRuleId"/>
<mapEntry key="policymanagement.dto.RecommendationSchedule" value="setPolicyGroupId;getPolicyGroupId;getAssetIds;setScheduledDatetime;getScheduledDatetime;setAssetIds"/>
<mapEntry key="policymanagement.dto.SchemaFieldsDTO" value="clone;hashCode;setLocalizedValue;setDefaultValue;setFieldName;setDisplayValue;getDefaultValue;getDisplayValue;getLocalizedValue;getFieldName;equals"/>
<mapEntry key="policymanagement.dto.SettingRuleAssociatedOptionData" value="getOptionExpression;setResolvedRuleName;getResolvedRuleName;setOptionExpression;SettingRuleAssociatedOptionData;getMappedOptions;setMappedOptions"/>
<mapEntry key="policymanagement.dto.SettingRuleAssociatedRuleData" value="SettingRuleAssociatedRuleData;getMappedRules;setMappedRules"/>
<mapEntry key="policymanagement.dto.StaticAttributes" value="setOrder;setName;getRequired;setRequired;getPlatform;setDisplayName;setForUI;getDisplayName;getInputFormat;setPlatform;getType;getForUI;getOrder;setType;getName;setInputFormat"/>
<mapEntry key="policymanagement.dto.StaticMetaData" value="getAttributes;getMultiplicity;setAttributes;setName;getName;setMultiplicity"/>
<mapEntry key="policymanagement.dto.StaticMetaDatas" value="setStaticmetadata;getStaticmetadata"/>
<mapEntry key="policymanagement.dto.Value" value="getOrder;toSortedMap;setOrder;setParametervalue;getParametervalue"/>
<mapEntry key="policymanagement.dto.Version" value="getMajor;getSerial;Version;setSerial;setMinor;getMinor;toString;compare;Version;setMajor;compareTo"/>
<mapEntry key="publicapi.dto.PublicApiDto" value="isConfigured;setGetEventsAPI;isAdapterConfigured;isUpdateAzureConnection;setPostAvScan;setCreateGCPConnection;isGetEventsAPI;setThreatAPI;isGetAgentPackage;isThreatAPI;setAssetsAssociatedPG;setVulnerabilityAPI;isPGApplied;setCreateAdapterConfigAPI;isCreateOCIConnection;isGetAuthTokenAPI;setCreateAzureConnection;isPGFound;setGetAgentPackage;isRunAvScan;setGetAgentlogsDownloadZip;setGetAssetsAssociatedwithPG;setUpdateAzureConnection;setAdapterConfigured;isPostGetAssetId;isUpdateGCPConnection;isCreateAzureConnection;setPostGetAssetId;setGetAssetAPIwithFilter;setPGApplyFailed;setGetAgentVersionAPI;setGetAlertsAPI;setGetPolicyGroupAPI;isAssetsAssociatedPG;setRunAvScan;setUpdateGCPConnection;isCreateGCPConnection;isGetPolicyGroupAPI;setUpdateOCIConnection;setConfigured;isGetAdapterConfigAPI;isPostAvScan;setPGApplied;setPGFound;isPGApplyFailed;isGetAssetsAssociatedwithPG;isVulnerabilityAPI;setGetAuthTokenAPI;setCreateOCIConnection;isGetAgentlogsDownloadZip;setGetAdapterConfigAPI;isGetAgentVersionAPI;isUpdateOCIConnection;isCreateAdapterConfigAPI;isGetAssetAPIwithFilter;isGetAlertsAPI"/>
<mapEntry key="publicapi.integration.ClientAPI" value="ClientAPI;getClientConfig;getClientCredentials;enableClientApiKeys"/>
<mapEntry key="publicapi.integration.ClientCredentials" value="setClient_name;getDomain_id;setScope;setClient_id;getClient_credentials_privs;setClient_id_issued_at;setClient_credentials_privs;setClient_secret_expires_at;getClient_secret;toString;setGrant_types;getScope;getClient_id;getCustomer_id;getClient_id_issued_at;getOwner_uri;setClient_secret;getClient_name;setCustomer_id;getGrant_types;setDomain_id;getClient_secret_expires_at;setOwner_uri"/>
<mapEntry key="regressionclasses.AWSPollingTest" value="tearDown;verifyChangedInstanceStateUpdatedAfterAWSPolling;verifyAutoScalingGroupDeletedAfterAWSPolling;verifyVPCUpdatedAfterAWSPolling;verifyInstanceElasticIPUpdatedAfterAWSPolling;verifyInstanceNetworkInterfaceUpdatedAfterAWSPolling;verifyLoadBalancersUpdatedAfterAWSPolling;verifyInstanceSecurityGroupUpdatedAfterAWSPolling;verifyNotificationWhenNewInstanceAddedAfterPollingJob;verifyAssetsAssociationtoLoadBalancerUpdatedAfterAWSPolling;verifyAssetsUpdatedIfDetachedToASGAfterAWSPolling;setUp;verifyInstanceTagsUpdatedAfterAWSPolling;verifyAssetForNewInstanceCreatedAfterAWSPolling;verifyAssetsUpdatedIfAttachedToASGAfterAWSPolling;createTestData"/>
<mapEntry key="regressionclasses.AlertsEventsAndAlertProfileTest" value="verifyCreateAPWithEventBasedRule;verifyAlertActivity;removePolicyGroup;searchAndFilterLiveEvents;verifyGetEventCategoryReqForCreateAP;verifyAlertProfileRuleDeletedOnPolicyGroupDeletion;verifyEditAlertProfile;verifyGlobalAlertProfileCreate;verifyDeleteAlertProfiles;verifyCreatePolicyGroupWithAlertProfileConfigured;setup;verifyAlertForEventBasedRule;verifyAlertForPolicyBasedAlertRule;searchAPByNameAndDescription;verifyEventEnrichment"/>
<mapEntry key="regressionclasses.AntimalwarePolicyGroupFlowTest" value="setUp;verifyCreatePolicyGroupUnixWithouAVPolicy;tearDown"/>
<mapEntry key="regressionclasses.AntimalwarePolicySettingsWorkflowTest" value="tearDown;verifyAntimalwarePolicySettingForUnix;setUp"/>
<mapEntry key="regressionclasses.AntimalwareTest" value="verifyOnDemandAvScanOnAzureAgent;verifyCancelAvScan;verifyOnDemandAvScanWhenScanAlreadyRunning;verifyScheduledAvScan;verifyAVScanUsingInstanceIds;verifyDMALEventAndAlertForAV;verifyEditCancelScheduledAvScan;verifyAvWhenInstanceAgentUninstalled;verifyMalwareTickerAndDashboardChart;setUp;verifyOnDemandAvScan"/>
<mapEntry key="regressionclasses.AntimalwareTestWindows" value="verifyOnDemandAvScanAndScheduledScan;verifyOnDemandAvScanWhenScanAlreadyRunning;verifyOnDemandAvScanWhenCWPPolicyIsApplied;setUp"/>
<mapEntry key="regressionclasses.AntimalwareTestWindows2" value="verifyMalwareTickerAndDashboardChart;verifyEventsForAV;verifyAlertForAV"/>
<mapEntry key="regressionclasses.AuditEventsTest" value="verifyAuditEvents"/>
<mapEntry key="regressionclasses.AzureManagementAPITests" value="verifyDeleteConnectionWillNotImpactOtherConnection;tearDown;verifyImportAzureInstancesTestsAPI;verifyStopAzureInstanceTests;verifyStopAzureInstanceAPIWithoutStopPriviladgesTests;verifySingleClickAgentInstallation;verifyDeleteAzureConnectionTests;setUp;verifyAzureCloudAdapterConfigWithInvalidInputTestsAPI;verifyAzureCloudAdapterConfigTestsAPI;verifyInstancesFromOtherConnectionNotMarkedDeleted;verifyStopAzureInstanceAPIForAlreadyStoppedInstanceTests;verifyInstanceStateChangedTests;verifyDeleteConnectionWithoutInstancesAssociatedTest"/>
<mapEntry key="regressionclasses.CICDPluginTests" value="setUp;verifyCICDpluginOnUnixAndWindowsNodes;verifyCICDPlugin;tearDown"/>
<mapEntry key="regressionclasses.CloudConnectionCleanup" value="setUp;deleteCloudAdaptorConfiguration;deleteSQSQueue"/>
<mapEntry key="regressionclasses.CloudConnectionConfig" value="createSQSQueue;setUp;verifyCloudAdaptorConfiguration;AzureAdapterConfiguration;AWSAdapterConfiguration;GCPAdapterConfiguration"/>
<mapEntry key="regressionclasses.CloudTrailListenerServiceTest" value="createAsset;verifyTerminatedNewInstanceNotStoredInDatabaseAfterPollingCloudTrailEvent;verifyNewAssetInstanceIsStoredInDatabaseAfterPollingCloudTrailEvent;verifyCloudTrailStartListeningToCloudAdapterOfNewCustomer;verifyInstanceElasticIPUpdatedAfterPollingCloudTrailEvent;verifyInstanceStateChangeUpdatedAfterPollingCloudTrailEvent;tearDown;verifyInstanceSecurityGroupUpdatedAfterPollingCloudTrailEvent;verifyInstanceRegisterDeregisterAfterPollingCloudTrailEvent;verifyUpdateAssetsWithASGInDatabaseAfterPollingCloudTrailEventForAttachInstance;verifyUpdateAssetsWithASGInDatabaseAfterPollingCloudTrailEventForDetachInstance;verifyInstanceTagsUpdatedAfterPollingCloudTrailEvent;verifyAWSCloudtrailEvent;verifyVPCUpdatedAfterPollingCloudTrailEvent;setUp;verifyLBUpdatedAfterPollingCloudTrailEvent;verifyInstanceNetworkInterfaceUpdatedAfterPollingCloudTrailEvent;verifyCloudTrailServiceListeningToSQSSubscribedToSNSFromMultipleRegion;createTestData;verifyAutoScalingGroupUpdatedAfterPollingCloudTrailEvent"/>
<mapEntry key="regressionclasses.DashboardTests" value="verifyAlertTickerData;verifyHighRiskTickerData;verifyNewInstanceTickerData;verifyThreatExposureChart;verifySecurityAlertsInsightChart;verifySecurityPostureChart;verifyInfraChangeChart;verifyEventTickerData"/>
<mapEntry key="regressionclasses.DeepsightImportTest" value="verifyImportOfDeepsightFeeds"/>
<mapEntry key="regressionclasses.DeepsightLiveAgentAPITest" value="verifyThreatMapForMultipleAssetsWithMultipleApplicationsWithSeverityFilter;verifyAssetThreatCorrelationAfterExistingApplicationDeleted;verifyThreatAndVulnerabilityExposuresForSingleAssetWithSingleApplication;getRiskSetFromJson;verifyGetSecurityRisksDetails;verifyCriticalThreatsAndVulnerabilitiesInLast24HoursForMultipleAssetsWithMultipleApplications;verifyAssetThreatCorrelationForAssetAfterAgentEnrollment;verifyThreatMapWhenNoPotentialRiskWithAsset;getVulAndRiskCount;verifyThreatMapWhenRegionSelectionReturnsNoThreatAndVulnerabilityData;getCountOfEntitiesFromInputEntity;verifyAssetThreatCorrelationAfterExistingApplicationUpdated;verifyThreatAndVulnerabilitiesExposuresForAnAssetWithMultipleApplications;getJsonObjectFromAssetDetails;verifyAssetThreatCorrelationAfterDeepSightFeedImport;verifyCountInRegionMapOfThreatMap;verifyThreatMapForMultipleAssetsWithMultipleApplicationsWithSeverityFilterHighMediumDisabled1;tearDown;verifyThreatMapWhenSeverityFilterReturnsNoData;getVulSetBySeverity;getSetForKeyEntityFromInputArrayEntity;verifyThreatMapWhenNoThreatAssociatedWithVulnerabilityOnAsset;verifyThreatAndVulnerabilityChartsWhenNoPotentialRiskWithAsset;verifyPaginatedVulnerabilitiesAndThreats;setUp;getCountRiskBySeverity;verifyThreatMapAndChartsWhenAssetHasPotentialRiskAndApplicationHasNoPotentialRisk;verifyThreatMapForAnAssetWithSingleApplicationBothHasPotentialRisk;getArrayListFromJson;isIdenticalHashSet;getVulHavinRiskSetFromJson;removeAllApplicationsOnAsset;verifyThreatMapForRegionSelectedWhenMultipleAssetsInDifferentRegions;verifyGetVulnerabilityDetails;getVulHavinRiskSetFromJsonByRiskSeverity;getRiskSetBySeverity;verifyThreatMapForRegionRemovedWhenMultipleAssetsInDifferentRegions;verifyThreatMapForAnAssetWithMultipleApplications;verifyAssetThreatCorrelationAfterNewApplicationDiscovered;verifyThreatMapForMultipleAssetsWithMultipleApplications;verifyThreatMapAndChartsWhenNoPotentialRiskWithAssetAndApplication;getVulSetFromJson;verifyThreatMapForMultipleAssetsWithMultipleApplicationsWithSeverityFilterHighMediumDisabled;getCountOfEntitiesFromApplicationsEntity;verifyThreatAndVulnerabilitiesExposuresForMultipleAssetsWithMultipleApplications;getCountVulBySeverity"/>
<mapEntry key="regressionclasses.DockerTests" value="verifyDashboardChartDataForContainers;verifyEventAndAlertForContainer;verifyContainerStateMgmt;setup;verifyContainerDetails;getArrayListFromJson;verifyDockerIPSIDSFunctionality;tearDown;verifyDockerDiscoveredAfterRunDiscoveryAndPolicyRecommendation"/>
<mapEntry key="regressionclasses.DockerTests_Ubuntu16" value="verifyDashboardChartDataForContainers;verifyContainerStateMgmt;getArrayListFromJson;verifyEventAndAlertForContainer;verifyDockerIPSIDSFunctionality;verifyDockerDiscoveredAfterRunDiscoveryAndPolicyRecommendation;tearDown;verifyContainerDetails;setup"/>
<mapEntry key="regressionclasses.E2EAVOnlySubscription" value="verifyPolicyWorkspaceForAVOnly;verifyInstanceForAVOnly;setup;verifyAlertProfileForAVOnly"/>
<mapEntry key="regressionclasses.E2EAutomationAWSAmazonLinux2" value="verifyCreatePolicyGroupLiveAgentTestUnix;verifyApplyPolicyGroupOnAgent;tearDown;verifyCollectAndDownloadAgentLogFileForSingleAgent;verifyRevokePolicyGroup;getArrayListFromJson;verifyRunDiscoveryAndRecommendationAgent;verifyEventTypes;setup;verifyResetAgentLogsForSingleAgent;verifyVerboseLoggingIsEnabledForSingleAgent;verifyDeletePolicyGroupAPI;verifyApplyRecommendationAgent"/>
<mapEntry key="regressionclasses.E2EAutomationAWSAmazonLinux2017" value="verifyRunDiscoveryAndRecommendationAgent;verifyVerboseLoggingIsEnabledForSingleAgent;verifyDeletePolicyGroupAPI;verifyEventTypes;setup;getArrayListFromJson;verifyCreatePolicyGroupLiveAgentTestUnix;verifyCollectAndDownloadAgentLogFileForSingleAgent;verifyApplyRecommendationAgent;verifyApplyPolicyGroupOnAgent;verifyResetAgentLogsForSingleAgent;verifyRevokePolicyGroup;tearDown"/>
<mapEntry key="regressionclasses.E2EAutomationAWSCentOS73" value="verifyCreatePolicyGroupLiveAgentTestUnix;verifyApplyPolicyGroupOnAgent;tearDown;setup;verifyRunDiscoveryAndRecommendationAgent;getArrayListFromJson;verifyEventTypes;verifyRevokePolicyGroup;verifyApplyRecommendationAgent;verifyDeletePolicyGroupAPI"/>
<mapEntry key="regressionclasses.E2EAutomationAWSRHEL73" value="verifyNotificationWhenDiscoveryIsRunOnEnrolledAgent;verifyResetAgentLogsForSingleAgent;setup;verifyCollectAndDownloadAgentLogFileForSingleAgent;verifyApplyPolicyGroupOnAgent;verifyRunDiscoveryAndRecommendationAgent;getArrayListFromJson;verifyTop5PolicyChart;verifyVerboseLoggingIsEnabledForSingleAgent;tearDown;verifyAlert;verifyRevokePolicyGroup;verifyCreatePolicyGroupLiveAgentTestUnix;verifyEventTypes;verifyDeletePolicyGroupAPI;verifyApplyRecommendationAgent"/>
<mapEntry key="regressionclasses.E2EAutomationAWSRHEL73WithProxy" value="getArrayListFromJson;verifyCollectAndDownloadAgentLogFileForSingleAgent;verifyApplyPolicyGroupOnAgent;tearDown;verifyCreatePolicyGroupLiveAgentTestUnix;verifyRevokePolicyGroup;verifyApplyRecommendationAgent;verifyAlert;verifyDeletePolicyGroupAPI;verifyVerboseLoggingIsEnabledForSingleAgent;verifyResetAgentLogsForSingleAgent;verifyEventTypes;verifyNotificationWhenDiscoveryIsRunOnEnrolledAgent;verifyTop5PolicyChart;verifyRunDiscoveryAndRecommendationAgent;setup"/>
<mapEntry key="regressionclasses.E2EAutomationAWSUbuntu14" value="verifyApplyRecommendationAgent;verifyApplyPolicyGroupOnAgent;getArrayListFromJson;tearDown;verifyRevokePolicyGroup;verifyDeletePolicyGroupAPI;verifyRunDiscoveryAndRecommendationAgent;verifyCreatePolicyGroupLiveAgentTestUnix;verifyEventTypes;setup"/>
<mapEntry key="regressionclasses.E2EAutomationAWSUbuntu16" value="verifyApplyPolicyGroupOnAgent;getArrayListFromJson;verifyApplyRecommendationAgent;verifyRevokePolicyGroup;tearDown;verifyDeletePolicyGroupAPI;verifyRunDiscoveryAndRecommendationAgent;verifyEventTypes;setup;verifyCreatePolicyGroupLiveAgentTestUnix"/>
<mapEntry key="regressionclasses.E2EAutomationAWSWindows" value="verifyApplyPolicyGroupOnWindowsAgent;verifyDeletePolicyGroupAPI;verifyRunDiscoveryAndRecommendationWindowsAgent;verifyRevokePolicyGroup;tearDown;getArrayListFromJson;verifyCreatePolicyGroupLiveAgentTestWindows;verifyApplyRecommendationWindowsAgent;verifyEventTypes;setUp"/>
<mapEntry key="regressionclasses.E2EAutomationAWSWindowsForProduction" value="verifyDeletePolicyGroupAPI;verifyCreatePolicyGroupLiveAgentTestWindows;verifyApplyPolicyGroupOnWindowsAgent;verifyEventTypes;setUp;verifyApplyRecommendationWindowsAgent;verifyRunDiscoveryAndRecommendationWindowsAgent;getArrayListFromJson;tearDown;verifyRevokePolicyGroup"/>
<mapEntry key="regressionclasses.E2EAutomationAzureUbuntu14" value="verifyDeletePolicyGroupAPI;verifyRunDiscoveryAndRecommendationAgent;verifyApplyRecommendationAgent;getArrayListFromJson;tearDown;verifyRevokePolicyGroup;verifyCreatePolicyGroupLiveAgentTestUnix;verifyApplyPolicyGroupOnAgent;setup;verifyEventTypes"/>
<mapEntry key="regressionclasses.E2EAutomationGCPCentOS7" value="verifyEventTypesAndAlerts;verifyAgentSupportability;verifyCreateAndApplyPolicyGroupLiveAgentTestUnix;getArrayListFromJson;setup;verifyRunDiscoveryAndApplyRecommendationOnCentOSAgent;verifyRevokeAndDeletePolicyGroup;tearDown;verifyTop5PolicyChart"/>
<mapEntry key="regressionclasses.E2EAutomationGCPRHEL7" value="setup;verifyCreateAndApplyPolicyGroupLiveAgentTestUnix;verifyAgentSupportability;verifyEventTypesAndAlerts;tearDown;getArrayListFromJson;verifyRevokeAndDeletePolicyGroup;verifyRunDiscoveryAndApplyRecommendationOnRHELAgent"/>
<mapEntry key="regressionclasses.E2EAutomationGCPWindows" value="tearDown;verifyCreatePolicyGroupApplyOnWindowsAgent;verifyRevokeAndDeletePolicyGroup;verifyRunDiscoveryAndApplyRecommendationOnWindowsAgent;verifyEventTypes;getArrayListFromJson;verifyCollectAndDownloadAgentLogFileForSingleAgent;setUp"/>
<mapEntry key="regressionclasses.E2EAutomationOnPrem" value="verifyCreatePolicyGroupLiveAgentTestUnix;verifyEventTypes;getArrayListFromJson;verifyAlert;verifyApplyPolicyGroupOnAgent;setup;tearDown;verifyJobIsCreatedForPolicyApplyUsingApplyNowFromInstancePage"/>
<mapEntry key="regressionclasses.E2EAutomationOnPremWindows" value="verifyEventTypes;getArrayListFromJson;verifyAlert;setup;verifyApplyPolicyGroupOnAgent;tearDown;verifyJobIsCreatedForPolicyApplyUsingApplyNowFromInstancePageWindows;verifyCreatePolicyGroupLiveAgentTestWindows"/>
<mapEntry key="regressionclasses.E2EAutomationSupportability" value="setup;verifyAgentSupportability"/>
<mapEntry key="regressionclasses.E2EAutomation_PolicyGroupTweakTests" value="tearDown;verifyProductionModePolicyGroupWorkflow;verifyEditPolicyGroup_ApplicationOfCorrectPoliciesOnAgent;verifyRecommendationsBasedOnAttributesBasedRules;verifyTestModePolicyGroupWorkflowForUnix;verifyCreationOfPolicyGroupFromTemplatePolicyGroup_AssigningPGToInstances;setUp;verifyRecommendationsRankingBasedOnAttributesPrioritization;verifyRecommendationtRankingAlgorithm"/>
<mapEntry key="regressionclasses.E2EAzureAutomationCentOS73" value="verifyApplicationDiscoveryPostOneApplicationUninstall;verifyEventTypes;verifyApplicationDiscovery;verifyPolicyGroupApplyUsingRecommendation;tearDown;verifyRevokePolicy;verifyPolicyRecommendationAfterApplicationDiscovery;setup"/>
<mapEntry key="regressionclasses.E2EAzureAutomationRHEL73" value="verifyPolicyGroupApplyUsingRecommendation;tearDown;verifyRevokePolicy;verifyApplicationDiscoveryPostOneApplicationUninstall;verifyApplicationDiscovery;verifyPolicyRecommendationAfterApplicationDiscovery;verifyEventTypes;setup"/>
<mapEntry key="regressionclasses.E2EAzureVMExtensionCentOS" value="verifyVMExtensionUninstall;verifyInstallVMExtensionWhileVMCreationWithReboot;verifyRevokePolicy;verifyApplicationDiscovery;verifyPolicyRecommendationAfterApplicationDiscovery;tearDown;verifyApplicationDiscoveryPostOneApplicationUninstall;verifyEventTypes;setup;verifyInstallExtensionOnExistingVMWithoutReboot;verifyInstallVMExtensionOnExistingVMWithReboot;verifyInstallVMExtensionWhileVMCreationWithoutReboot;verifyPolicyGroupApplyUsingRecommendation"/>
<mapEntry key="regressionclasses.E2EAzureVMExtensionOEL" value="tearDown;verifyVMExtensionUninstall;verifyInstallVMExtensionWhileVMCreationWithReboot;verifyInstallVMExtensionOnExistingVMWithReboot;setup"/>
<mapEntry key="regressionclasses.E2EAzureVMExtensionRHEL" value="verifyApplicationDiscoveryPostOneApplicationUninstall;verifyEventTypes;verifyInstallVMExtensionOnExistingVMWithReboot;verifyInstallVMExtensionOnExistingVMWithoutReboot;verifyPolicyRecommendationAfterApplicationDiscovery;setup;verifyVMExtensionUninstall;tearDown;verifyRevokePolicy;verifyPolicyGroupApplyUsingRecommendation;verifyInstallVMExtensionWhileVMCreationWithoutReboot;verifyApplicationDiscovery;verifyInstallVMExtensionWhileVMCreationWithReboot"/>
<mapEntry key="regressionclasses.E2EAzureVMExtensionUbuntu" value="verifyVMExtensionUninstall;verifyInstallVMExtensionWhileVMCreationWithReboot;verifyApplicationDiscovery;verifyEventTypes;verifyInstallVMExtensionOnExistingVMWithReboot;verifyPolicyGroupApplyUsingRecommendation;setup;verifyPolicyRecommendationAfterApplicationDiscovery;verifyRevokePolicy;tearDown"/>
<mapEntry key="regressionclasses.E2EAzureVMExtensionWindows" value="setup;verifyRevokePolicy;tearDown;verifyPolicyRecommendationAfterApplicationDiscovery;verifyInstallVMExtensionWhileVMCreationWithReboot;verifyApplicationDiscovery;verifyPolicyGroupApplyUsingRecommendation;verifyInstallVMExtensionOnExistingVMWithReboot"/>
<mapEntry key="regressionclasses.E2ECreateLinuxImage" value="tearDown;createInstanceUsingUnixSilverImageWithCWPAgentBackedIn;createInstanceUsingUnixGoldenImageWithCWPAgentBackedIn;setup"/>
<mapEntry key="regressionclasses.E2ECreateWindowsImage" value="setup;createInstanceUsingWindowsGoldenImageWithCWPAgentBackedIn;tearDown"/>
<mapEntry key="regressionclasses.E2EJobsAndNotificationManagementTests" value="verifyUserCanEditAzurePeriodicSynchJob;verifyUserCanEditAWSPeriodicSynchJob;verifyNotificationAfterAzureConfigurationAndAssetImport;verifyNotificationWhenFirstTimeAssetIsImportedFromAWS;verifyNotificationReadUnRead;verifyJobIsCreatedForAzurePolling;verifJobIsNotCreatedIfAWSConfigurationFails;verifJobIsCreatedForAWSPeriodicSynch;setUp"/>
<mapEntry key="regressionclasses.E2EPolicyTuningTests" value="setUp;VerifyBasicPolicyTuningWhenOnlyProductionModePolicyGroupIsPresent;VerifyBasicPolicyTuningWhenTestModePolicyGroupIsPresent;tearDown"/>
<mapEntry key="regressionclasses.E2EUnixPolicyContentTests" value="setUp;tearDown;verifyContentForUnix"/>
<mapEntry key="regressionclasses.E2EUnixPolicyContentWithDiscoveryTests" value="verifyContentAfterDiscoveryForUnix;setUp;tearDown"/>
<mapEntry key="regressionclasses.E2EUnixVMExtension" value="verifyInstallVMExtensionOnExistingVMWithReboot;tearDown;verifyVMExtensionUninstall;setup;E2EUnixVMExtension;verifyInstallVMExtensionWhileVMCreationWithReboot"/>
<mapEntry key="regressionclasses.E2EVerfications" value="verifyUserCanConfigureAutoDiscoveryForNewInstanceEnrollment;setUp;verifyRecommendationsInCaseOfMultiplePolicyGroups;verifyUserCanSeeOsBasedRecommendationOnAutoDiscovery;tearDown;verifyUserCanRunApplicationDiscoveryOnMultipleInstancesAndCanSeePolicyRecommedationWhnAwsIsNotConfigured"/>
<mapEntry key="regressionclasses.E2EVerificationsWithSqs" value="verifyAMIBasedEnforcement;verifyASGBasedEnforcement;setup;tearDown;verifyPolicyRecommedationBasedAssetAttributesWhenAwsCTIsConfigured;verifyUserCanRunApplicationDiscoveryOnMultipleInstancesAndCanSeePolicyRecommedationWhnAwsIsConfigured"/>
<mapEntry key="regressionclasses.E2EWindows" value="verifyCreatePolicyGroupApplyOnWindowsAgent;E2EWindows;tearDown;verifyRevokeAndDeletePolicyGroup;getArrayListFromJson;verifyRunDiscoveryAndApplyRecommendationOnWindowsAgent;verifyEventTypes;setup;verifyCollectAndDownloadAgentLogFileForSingleAgent"/>
<mapEntry key="regressionclasses.E2EWindowsPolicyContentTests" value="setUp;verifyContentForWindows"/>
<mapEntry key="regressionclasses.E2EWindowsPolicyContentWithDiscoveryTests" value="verifyContentAfterDiscoveryForWindows;setUp"/>
<mapEntry key="regressionclasses.E2EWindowsTestFactory" value="integerProvider"/>
<mapEntry key="regressionclasses.EnableCapabilitiesIPS" value="setUp;VerifyCreateAndApplyOnInstanceByDDisablingIPS"/>
<mapEntry key="regressionclasses.EnableCapablilities" value="VerifyCreateAndApplyOnInstanceByDDisablingIPS;setUp"/>
<mapEntry key="regressionclasses.F24TestsForLinux" value="setup;tearDown;verifyF24WizardWithAgentDeploymentForPollingConnection;verifySingleClickAgentInstallation"/>
<mapEntry key="regressionclasses.GCPPollingTest" value="setUp;verifyExistingInstanceImportedAfterGCPConnectionConfiguration;verifyGCPConnectionConfiguration;tearDown;verifyInstanceStateUpdatedAfterPeriodicSync;verifyAssetForNewInstanceCreatedAfterGCPPolling"/>
<mapEntry key="regressionclasses.MixedModePolicyGropuCreation" value="verifyEditMixedModePolicyGroupAndApply;VerifyCreateMixedModePolicyGroupAndApplyOnInstance;setUp"/>
<mapEntry key="regressionclasses.MultiDomainTests" value="domainVerifications;verifyDefaultPolicyGroupsAndAlertProfileCountInNewlyAddedDomain;tearDown;verifyNewlyAddedSuperAdminUserAbleToAccessDomains;setup;verifyPushPolicyGroupToDomain;verifyViewerAndAdminUserNotAbleAccessDomains;verifyDomainCreationWithNewUser;verifyDomainCreationWithExistingUsers"/>
<mapEntry key="regressionclasses.OCIConnectionTests" value="verifyOciConnectionConfiguration;setUp"/>
<mapEntry key="regressionclasses.PolicyAutoEnforcementTests" value="verifyAutoEnforcementOfTopRankedPolicyGroup;tearDown;setup"/>
<mapEntry key="regressionclasses.PolicySearchSortFilterPagination" value="verifySearchingSortingFilterPaginationOfPolicy;verifySearchingSortingFilterPaginationOfPolicyGroup;verifyPolicyAndPolicyGroupFields;setUp"/>
<mapEntry key="regressionclasses.RecommendationsE2EVerifications" value="verifyRecommendationWhenAllPolicyGroupsAndInstalledAppsPresent;verifyTagBasedRecommendation;tearDown;verifyRecommendationWhenInstalledAppRemoved;verifyRecommendationWhenAllPolicyGroupsAndSingleInstalledAppPresent;verifyNotificationWhenNewAgentIsEnrolled;setUp;verifyRecommendationWhenAgentIsEnrolledToServer"/>
<mapEntry key="regressionclasses.SpeCloudConnectionConfig" value="verifyCloudAdaptorConfiguration;setUp;AWSAdapterConfiguration"/>
<mapEntry key="regressionclasses.SpeS3P2Tests" value="verifyOobAlerts;verifyCreateDeleteBucketOperations;setup;verifyPublicAccessObjectLevelEvent"/>
<mapEntry key="regressionclasses.SpeS3Tests" value="verifyPermissionAssesmentEvent;verifyAlerts;verifyAllS3bucketsAreVisibleOnCwpConsole;setup;verifyEvents;verifyScheduleScan;verifyNrtsStatus"/>
<mapEntry key="regressionclasses.UatSpeS3" value="afterSuite;speVerifyNrtsAndScheduleScanWithEvent;setup"/>
<mapEntry key="regressionclasses.UserManagementTests" value="verifyAddUsers;verifyDeletedUserCanBeAdded;verifyActivationReactivationFlow;verifyAdminUserCanEditUser"/>
<mapEntry key="report.CCReportController" value="getAllReports;getAllReportTemplates;getSecurityPostureByRegionStorageReport;getSecurityPostureByRegionStorageReport;CCReportController;getAllReports;getSecurityPostureByRegionReport;getAllReportTemplates;getReportTemplate;getSecurityPostureByRegionReport"/>
<mapEntry key="scheduler.Scheduler" value="Scheduler;executeSchedulerJob"/>
<mapEntry key="setuptestclasses.AntimalwarePolicyModeChange" value="changeAntimalwarePolicyState"/>
<mapEntry key="setuptestclasses.AutomationProxySettings" value="setProxyMethod;getAdditionalProperties;getProxyPassword;getProxyMethod;setProxyServer;getProxyPort;setCloudPlatformToConfigProxy;getProxyProtocol;setAdditionalProperty;setProxyUsername;setProxyAuthScheme;getProxyServer;getProxyUsername;setProxyProtocol;setProxyPassword;getCloudPlatformToConfigProxy;getProxyAuthScheme;setProxyPort"/>
<mapEntry key="setuptestclasses.CwpCleanup" value="cleanCloudConnections"/>
<mapEntry key="setuptestclasses.DeploySpeCft" value="downloadAndDeploySpeCft;verifyControllerList"/>
<mapEntry key="setuptestclasses.DeploySpeCftForUat" value="downloadAndDeploySpeCft"/>
<mapEntry key="setuptestclasses.DownloadAndInstallAgent" value="downloadAndInstallAgent"/>
<mapEntry key="setuptestclasses.InstancePool" value="createGCPInstance;createInstance;createAzureInstance;getExistingInstanceDataFromList;createAWSInstance;dataProvider;createInstancePool;getNewInstanceDataFromList"/>
<mapEntry key="setuptestclasses.S3BucketPool" value="dataProvider;createS3Bucket;createBucketPool"/>
<mapEntry key="setuptestclasses.SetupProxyConfiguration" value="updateInstancePoolWithProxyConfiguration;setupProxyConfiguration;createSecurityGroupWithProxyDetails"/>
<mapEntry key="setuptestclasses.SpeCleanup" value="tearDown;unenrollScanner;deleteSpeAssets;deleteSpePolicies;deleteSpeScannerGroups;setUp"/>
<mapEntry key="setuptestclasses.SpeUatBucketPool" value="speUatBucketPool"/>
<mapEntry key="setuptestclasses.Users" value="skipUser;getUsersTokens;checkSetupSuccessded;doneWithUserToken;hasInDeserializedData;dataProvider"/>
<mapEntry key="spe.asset.dto.AssetIdentifiers" value="setInstanceId;getInstanceId;getAdditionalProperties;setAssetId;getAssetId;setAdditionalProperty"/>
<mapEntry key="spe.asset.dto.CpeWfn" value="getEdition;setProduct;setOther;getProduct;setLanguage;setVendor;getAdditionalProperties;getTargetHw;getTargetSw;setSwEdition;setEdition;getVersion;setPart;getLanguage;setUpdate;getPart;getSwEdition;setTargetHw;getUpdate;setTargetSw;setVersion;getVendor;getOther;setAdditionalProperty"/>
<mapEntry key="spe.asset.dto.CreateSpeAssetRequest" value="setAppName;getAppName;getType;setSubType;getSubType;setType;setVersion;getRpcClientIp;toString;setDescription;getId;getScannerGroupId;setName;getName;setScanRequestIp;setId;getVersion;setRpcClientIp;getScanRequestIp;getDescription;setScannerGroupId"/>
<mapEntry key="spe.asset.dto.CreateSpeAssetResponse" value="toString;getStorageAssetName;setStorageAssetName;setStorageAssetId;getStorageAssetId"/>
<mapEntry key="spe.asset.dto.Device" value="getOs;getCloudPlatform;setObjClasses;getCreated;getUpdated;getModified;getPolicyApplied;getAgentInstalled;getFqdn;getPrivateIps;setInstanceId;setCloudPlatform;setDomain;getAgentInstalledTime;getProps;getInstanceId;setReconciled;setUri;getHw;getId;getAdditionalProperties;getCpeWfn;getPlatform;getDomain;getReconciled;setCpeWfn;getObjClasses;setId;getDeleted;setMacAddress;getUri;getInstanceState;getAssetIdentifiers;setAgentInstalled;getOperatingSystemCpe;setOperatingSystemCpe;setHw;setModified;getDedicated;setCreated;getHost;setAgentInstalledTime;setOs;setHost;setPlatform;setPrivateIps;setAdditionalProperty;setDeleted;setFqdn;setUpdated;setDedicated;setProps;getMacAddress;setInstanceState;setAssetIdentifiers;setPolicyApplied"/>
<mapEntry key="spe.asset.dto.Hw" value="setAdditionalProperty;setPhysCpus;getAdditionalProperties;getPhysCpus"/>
<mapEntry key="spe.asset.dto.ListDeviceProps" value="getBase_policy_id;setBase_policy_id;toString"/>
<mapEntry key="spe.asset.dto.ListSpeAssetResponse" value="toString;setResults;getResults;getCount;setCount"/>
<mapEntry key="spe.asset.dto.ListSpeAssetsIncludedDcsTargetDevicesGroup" value="setSubtype;getPolicy_status;getSubtype;setPolicy_id;setId;setPolicy_status;getModified;getCreated;getPolicy_name;setModified;toString;setName;getPolicy_id;setCreated;setPolicy_job_id;setDesc;getDesc;setPolicy_name;getName;getAuthor;getProps;getId;setIs_system;setPolicy_version;setAuthor;setProps;getIs_system;getPolicy_version;getPolicy_job_id"/>
<mapEntry key="spe.asset.dto.ListSpeAssetsProps" value="setCwps_rpc_client_ip;setCwps_app_name;setCwps_asset_type;setCwps_scan_request_ip;toString;getCwps_scan_request_ip;setCwps_asset_sub_type;getCwps_app_name;getCwps_asset_type;getCwps_version;getCwps_rpc_client_ip;getCwps_asset_sub_type;setCwps_version"/>
<mapEntry key="spe.asset.dto.ListSpeAssetsResult" value="getDesc;setObj_classes;getId;getProps;getIncluded_dcs_target_devices_group;setIncluded_dcs_target_devices_group;setId;getDeleted;toString;setDesc;setDeleted;setName;getCreated;getDedicated;setProps;setCreated;setDedicated;getObj_classes;getName"/>
<mapEntry key="spe.asset.dto.Os" value="getAdditionalProperties;getName;setAdditionalProperty;setName"/>
<mapEntry key="spe.asset.dto.Props" value="getAdditionalProperties;setAdditionalProperty;getCwpType;setCwpType"/>
<mapEntry key="spe.common.dto.DashboardEventData" value="toString;setWhere;setCount;setName;getName;getCount;getDisplayName;getWhere;setDisplayName"/>
<mapEntry key="spe.common.dto.ErrorResponse" value="setErrorResponse;getErrorResponse;toString"/>
<mapEntry key="spe.common.dto.ErrorResponseJson" value="toString;setErrorCode;getErrorRemedy;getErrorMsg;setErrorMsg;setErrorRemedy;getErrorCode"/>
<mapEntry key="spe.common.dto.GetAllNotificationsResponse" value="toString;getNotificationDetailList;getNotification_unread_count;setNotification_count;setNotification_unread_count;setNotificationDetailList;getNotification_count"/>
<mapEntry key="spe.common.dto.GetDashboardResponse" value="getTotalFilesScanned;getWhere;getTotalDataScanned;setWhere;setTotalFilesScanned;toString;setEventData;getEventData;setTotalDataScanned"/>
<mapEntry key="spe.common.dto.GetObjectsFromGridRequest" value="getSearch;setWhere;setIncludeCount;setOffset;setInclude;getLimit;getOffset;getFields;setSort;getWhere;setLimit;getInclude;toString;getIncludeCount;setFields;setSearch;getSort"/>
<mapEntry key="spe.common.dto.GetSpePoliciesFromGridRequest" value="getSort_field;getWhere;setSearch;setSort_field;getPagenumber;toString;setWhere;getPagesize;setSort;getSearch;getSort;setPagesize;setPagenumber"/>
<mapEntry key="spe.common.dto.NotificationData" value="setJOB_ID;setAlert_name;getSource_field_name;setDescription;getSource_field_value;getDescription;setArgs;getJOB_NAME;setSource_field_name;setJOB_PARAMETERS;toString;getArgs;getJOB_ID;getAlert_name;setJOB_NAME;setSource_field_value;getJOB_PARAMETERS"/>
<mapEntry key="spe.common.dto.NotificationDetailList" value="getRequest_type;setUrl;getData;getType_name;setSub_category_name;getNotification_id;setType_name;setCategory_name;getDescription;getIs_multiple_notification_grouped;getNotification_date;setRequest_type;getCategory_name;getRead_status;setIs_multiple_notification_grouped;setRead_status;setData;getUrl;setIs_navigation_allowed;getSub_category_name;setNotification_date;toString;setNotification_id;setDescription;getIs_navigation_allowed"/>
<mapEntry key="spe.common.dto.ScannerHealthStatusDashboardResponse" value="toString;setStatusData;getStatusData"/>
<mapEntry key="spe.common.dto.ScannerHealthStatusData" value="getStatus;getDisplayName;getCount;toString;setCount;setDisplayName;setStatus"/>
<mapEntry key="spe.common.dto.ScannerLicenseStatusDashboardResponse" value="setStatusData;getStatusData;toString"/>
<mapEntry key="spe.common.dto.ScannerLicenseStatusData" value="setStatus;getStatus;setDisplayName;getCount;setCount;toString;getDisplayName"/>
<mapEntry key="spe.dashboard.dto.GetThreatSummaryDashboardResponse" value="toString;getEventData;setEventData"/>
<mapEntry key="spe.dashboard.dto.ThreatSummaryEventData" value="setCount;setName;getName;setDisplayName;getDisplayName;getCount;toString"/>
<mapEntry key="spe.dashboard.lib.SpeDashboard" value="SpeDashboard;getThreatSummaryDashBoard;getThreatDetailsFromThreatSummaryDashBoard"/>
<mapEntry key="spe.nas.dto.AdaptersProps" value="setAssetId;setSpeStorageBridge;toString;getSpeStorageBridge;getAssetId"/>
<mapEntry key="spe.nas.dto.AssetIdentifiers" value="getAssetId;getInstanceId;setAssetId;toString;setInstanceId"/>
<mapEntry key="spe.nas.dto.Contents" value="getContent_type_id;getContent_last_download_time;setVersion;setContent_last_download_time;setContent_type_id;setSequence;getSequence;toString;getVersion"/>
<mapEntry key="spe.nas.dto.LicenseInfo" value="setFulfillment_id;getFulfillment_id;getExpiry_date;setExpiry_date;setFeature;getFeature;toString"/>
<mapEntry key="spe.nas.dto.ListScannersIncludedDcsScannerDevicesGroup" value="getDesc;setDesc;getProps;setPolicy_name;getPolicy_version;getPolicy_job_id;getName;setAuthor;setPolicy_version;setProps;getModified;setIs_system;getPolicy_name;getCreated;setPolicy_id;getPolicy_status;toString;setPolicy_job_id;getIs_system;setPolicy_status;setSubtype;setId;setName;setModified;getId;getSubtype;getAuthor;getPolicy_id;setCreated"/>
<mapEntry key="spe.nas.dto.ListScannersIncludedInstalledProductsLicenseInfo" value="setAvscanning_fulfillment_id;getInsight_fulfillment_id;getAvscanning_expiry_date;setInsight_expiry_date;setApkreputation_expiry_date;setApkreputation_feature;setAvcontent_fulfillment_id;getApkreputation_fulfillment_id;getApkreputation_feature;getAvcontent_expiry_date;getApkreputation_expiry_date;setApkreputation_fulfillment_id;setAvscanning_expiry_date;getAvcontent_fulfillment_id;toString;setAvscanning_feature;getInsight_feature;setAvcontent_feature;getAvscanning_feature;getAvcontent_feature;setAvcontent_expiry_date;getInsight_expiry_date;setInsight_feature;getAvscanning_fulfillment_id;setInsight_fulfillment_id"/>
<mapEntry key="spe.nas.dto.ListScannersProps" value="setBase_policy_id;toString;getBase_policy_id"/>
<mapEntry key="spe.nas.dto.ListScannersResponse" value="getResults;setResults;setCount;getCount;toString"/>
<mapEntry key="spe.nas.dto.ListScannersResult" value="getPrivate_ips;setincluded_installed_products_props_cwps_custom_app_name;setIncluded_installed_products_supported_asset_types_sub_type;setIncluded_installed_products_props_cwp_applied_policy_id;setIncluded_installed_products_supported_asset_types_protocol;setLicense_status;getIncluded_installed_products_last_liveupdate_date;getCustom_name;getIncluded_installed_products_props_cwp_applied_policy_id;getPlatform;setIncluded_installed_products_props_cwps_scanner_start_time;setCustom_name;getincluded_installed_products_props_cwps_custom_app_name;getIncluded_installed_products_contents_antivirus_version;setOs_name;getIncluded_installed_products_props_cwp_applied_policy_name;setAgent_installed;setIncluded_installed_products_status_SPE_STORAGE_BRIDGE;getContents;setIncluded_installed_products_last_liveupdate_date;getIncluded_installed_products_props_cwp_applied_policy_version;setCreated;setHost;getIncluded_installed_products_props_cwps_enforce_spe_asset_scan;setIncluded_installed_products_license_info;setIncluded_installed_products_props_cwp_applied_policy_name;getIncluded_installed_products_supported_asset_types_protocol;setIncluded_dcs_scanner_devices_group;getLiveupdate_definition_status;getOs_name;setPrivate_ips;getIncluded_installed_products_license_info;setOs_version;setIncluded_installed_products_props_cwps_enforce_spe_asset_scan;setIncluded_installed_products_contents_antivirus_version;getIncluded_installed_products_props_cwp_applied_policy_version_id;getIncluded_installed_products_supported_asset_types_asset_type;getIncluded_dcs_scanner_devices_group;setId;getIncluded_installed_products_props_cwps_scanner_start_time;getCreated;getProduct_version;getLicense_status;getIncluded_installed_products_supported_asset_types_sub_type;getId;setIncluded_installed_products_props_cwp_applied_policy_version;setContents;setIncluded_installed_products_props_cwp_applied_policy_version_id;getHost;toString;setProduct_version;setIncluded_installed_products_supported_asset_types_asset_type;getOs_version;getIncluded_installed_products_status_SPE_STORAGE_BRIDGE;getAgent_installed;setLiveupdate_definition_status;setPlatform"/>
<mapEntry key="spe.nas.dto.NasEnrolmentRequest" value="setAssetIdentifiers;getFqdn;toString;getAdapters;setFqdn;setAdapters;setVersion;getNumberOfCores;getInstanceId;getIpAaddresses;getCloudPlatformName;getVersion;setIpAaddresses;setOsType;setAdaptersProps;setHostname;setInstanceId;getDomain;getTimezone;setNumberOfCores;setOsCpeId;setAssetId;getOsCpeId;setOsVersion;getHostname;getOsType;setMacAddress;setCloudPlatformName;getAssetId;setTimezone;setDomain;getAssetIdentifiers;getAdaptersProps;getOsVersion;getMacAddress"/>
<mapEntry key="spe.nas.dto.NasEnrolmentResponse" value="setGetCommandsUrl;setUpdateCommandStatusUrl;setAdditionalProperty;getR3Url;getSpocServer;setR3Url;getPushEventUrl;setAccessToken;getMeteringStatusUrl;getSpocProtocol;setUpdateAgentInfoUrl;getGetCommandsUrl;getAccessToken;getUpdateCommandStatusUrl;setAgentPassword;setTokenType;setSpocProtocol;setAgentId;setUnregisterAgentUrl;setRefreshToken;setPushEventUrl;getUpdateAgentInfoUrl;getUnregisterAgentUrl;getSpocChannel;getAgentId;setMeteringStatusUrl;setSpocChannel;getAgentPassword;getRefreshToken;getAdditionalProperties;setSpocServer;getTokenType"/>
<mapEntry key="spe.nas.dto.NasUpdateInfoRequest" value="getMacAddress;getInstanceId;getAdditionalProperties;setCloudPlatformName;setAssetId;getAssetId;getVersion;getFqdn;getHostname;getTimezone;setAssetIdentifiers;getAssetIdentifiers;setNumberOfCores;setIpAddresses;setAdaptersProps;setOsType;setHostname;setInstanceId;setOsVersion;getOsVersion;setMacAddress;setVersion;setOsCpeId;getAdaptersProps;getCloudPlatformName;getAdapters;getNumberOfCores;getOsType;setFqdn;setAdapters;getDomain;setAdditionalProperty;setTimezone;getOsCpeId;setDomain;getIpAddresses"/>
<mapEntry key="spe.nas.dto.SpeStorageBridge" value="setContents;getCustomAppName;setSupportedAssetTypes;setProductVersion;setCustomAppName;setStatus;getAppliedPolicyVersion;getContents;setAppliedPolicyId;getTechnologySet;getAppliedPolicyId;setAppliedPolicyVersion;getSupportedAssetTypes;setLicenseInfo;getStatus;getScannerUptime;getLicense_info;setTechnologySet;toString;getProductVersion;setScannerUptime"/>
<mapEntry key="spe.nas.dto.Status" value="getSPE_STORAGE_BRIDGE;setSPE_STORAGE_BRIDGE"/>
<mapEntry key="spe.nas.dto.SupportedAssetTypes" value="getSub_type;setAsset_type;setProtocol;toString;getProtocol;getAsset_type;setSub_type"/>
<mapEntry key="spe.nas.lib.SpeCommonLib" value="downloadSpeEnrollmentScript;sendRequest1;getAlertCount;getNotificationCount;getAllScannerGroupsId;checkSpeAssetInUIList;getStartDateForDashboardData;verifyScanStatisticsDashBoard;getScannerHealthStatusDashBoard;getScannersDetailsFromHealthStatusDashBoard;clearSpeEnrollScriptDownloadFolder;createSPEWorkspacePolicy;downloadSpeEnrollScriptWithCustomerDetails;getNotifications;checkScannerInUIListByScannerName;getMaxPolicyVersionId;getEventCount;enrollScanner;getScannerDetails;getSpePolicyJobDetails;sendRequestAlerts;getScanStatisticsDashBoard;getScannerLicenseStatusDashBoard;waitForNotification;checkScannerInUIListByScannerId;getScannersDetailsFromLicenseStatusDashBoard;waitForEvent;waitForAlert;getAllSpePoliciesId;getAllSpeAssetsId;waitUntilJobComplete;searchAndFilterEvent;enrollSpeScanner;checkPolicyInUIListByPolicyName;getEndDateForDashboardData;checkScannerGroupInUIListByScannerGroupName;getSpePolicyEnforcementJobDetail;SpeCommonLib;checkPolicyInUIList;unenrollScanner;checkScannerGroupInUIList"/>
<mapEntry key="spe.nas.lib.SpeNasAsset" value="SpeNasAsset;editSpeAsset;getSpeAssetsList;getSpeAssetsList;deleteSpeAsset;addSpeAsset"/>
<mapEntry key="spe.nas.lib.SpeNasIntegrator" value="initilizeUpdateAgentInfoRequest;initilizeSpeNasEnrolmentRequest;toggleScanRestrictionScanner;SpeNasIntegrator;updateNasDevice;editCustomNameNasScanner;getScannersList;enrolSpeNasScanner;getNasScanner;importSpePolicyFromScanner;getScannersList"/>
<mapEntry key="spe.nas.lib.SpeNasPolicy" value="updateSpeLibraryPolicy;copySpeWorkspacePolicy;deleteSpeWorkspacePolicy;getSpeLibraryPolicy;SpeNasPolicy;editAndApplySpeWorkspacePolicyOnScannerGroups;createSpeLibraryPolicy;editSpeWorkspacePolicy;getSpeWorkspacePolicyVersions;getSpeWorkspacePolicyDetailByVersion;getAllSpeWorkspacePolicies;createSpeWorkspacePolicy;applySpeWorkspacePolicyOnScannerGroups"/>
<mapEntry key="spe.nas.lib.SpeNasScannerGroups" value="getScannerGroupDetail;SpeNasScannerGroups;deleteScannerGroup;dissociateSpeAssetsFromScannerGroup;associateScannerGroupWithSpeAssets;associateScannerGroupWithScanners;listScannerGroups;updateScannerGroup;createScannerGroup"/>
<mapEntry key="spe.nas.ui.dto.IncludedInstalledProductsLicenseInfo" value="getInsightFulfillmentId;setAvscanningExpiryDate;getAvscanningFeature;getInsightFeature;setAvscanningFulfillmentId;getAvcontentFeature;getInsightExpiryDate;getAvcontentFulfillmentId;setAdditionalProperty;setAvcontentFulfillmentId;setApkreputationFeature;getApkreputationFulfillmentId;getAvscanningFulfillmentId;getAvcontentExpiryDate;setAvcontentExpiryDate;setInsightExpiryDate;setInsightFulfillmentId;getApkreputationFeature;setApkreputationExpiryDate;getAdditionalProperties;setAvscanningFeature;getApkreputationExpiryDate;setAvcontentFeature;setApkreputationFulfillmentId;getAvscanningExpiryDate;setInsightFeature"/>
<mapEntry key="spe.nas.ui.dto.LicenseInfo" value="setAdditionalProperty;getAvscanningExpiryDate;setInsightFeature;setInsightFulfillmentId;getInsightExpiryDate;setAvscanningFulfillmentId;setAvscanningFeature;setInsightExpiryDate;getInsightFulfillmentId;getInsightFeature;getAvscanningFulfillmentId;setAvscanningExpiryDate;getAvscanningFeature;getAdditionalProperties"/>
<mapEntry key="spe.nas.ui.dto.NasListUi" value="setResults;getAdditionalProperties;getCount;getResults;setAdditionalProperty;setCount"/>
<mapEntry key="spe.nas.ui.dto.Result" value="setIncludedInstalledProductsLastLiveupdateDate;getProductVersion;getOsVersion;getIncludedInstalledProductsSupportedAssetTypesSubType;setAdditionalProperty;setOsVersion;getIncludedInstalledProductsStatusSPESTORAGEBRIDGE;setIncludedInstalledProductsContentsAntivirusVersion;setOsName;getLicenseStatus;setIncludedInstalledProductsLicenseInfo;getIncludedInstalledProductsPropsCwpAppliedPolicyId;setId;getCreated;setIncludedInstalledProductsSupportedAssetTypesAssetType;getAgentInstalled;setPolicyName;setCreated;setIncludedInstalledProductsSupportedAssetTypesProtocol;setHost;getIncludedInstalledProductsSupportedAssetTypesAssetType;setAgentInstalled;setProductVersion;setIncludedInstalledProductsSupportedAssetTypesSubType;setIncludedInstalledProductsPropsCwpAppliedPolicyId;getOsName;getIncludedInstalledProductsContentsAntivirusVersion;getIncludedInstalledProductsLastLiveupdateDate;getIncludedInstalledProductsSupportedAssetTypesProtocol;getHost;getIncludedInstalledProductsLicenseInfo;setIncludedInstalledProductsStatusSPESTORAGEBRIDGE;setLicenseStatus;getPolicyName;getAdditionalProperties;getId"/>
<mapEntry key="spe.policy.dto.CopySpePolicyRequest" value="getDescription;setPolicy_version_id;toString;setDescription;setName;getName;getPolicy_version_id"/>
<mapEntry key="spe.policy.dto.CreateSpeLibraryPolicyRequest" value="setDescription;toString;setPolicy_type;setPlatform;getSpe_policies;setSpe_policies;getPolicy_status;setPolicy_id;getRepository_type;getPolicy_sub_type;setRepository_type;getPolicy_id;setPolicy_sub_type;setFeature_code;setCurrent_active_policy_version_id;getPolicy_type;setName;getPlatform;getName;setPolicy_status;getFeature_code;getCurrent_active_policy_version_id;getDescription"/>
<mapEntry key="spe.policy.dto.GetSpePolicyVersionDetailResponse" value="setModified_by;getPolicy_version_id;getPolicy_status;getCreated;setCreated;setModified;getModified;setPolicy_status;setVersion;getModified_by;setCreated_by;getVersion;toString;getCreated_by;setPolicy_version_id"/>
<mapEntry key="spe.policy.dto.GetSpeWorkspacePoliciesResponse" value="getCount;getResults;setResults;toString;setCount"/>
<mapEntry key="spe.policy.dto.PoliciesResults" value="getModified_by;getCurrent_active_policy_version_id;setPolicy_version_modified_by;getProduct_version;setPlatform;toString;getPolicy_status;getModified;setDescription;setPolicy_version_created_by;getPolicy_version_policy_status;setCurrent_active_policy_version_id;setPolicy_status;setProduct_version;setPolicy_schema_version;setPolicy_type;setFeature_code;getPolicy_id;getPolicy_version_modified;getCreated_by;getPolicy_sub_type;setName;getPolicy_version_created_by;setModified;setVersion;setPolicy_version_policy_status;setCreated;setRepository_type;getPolicy_version_modified_by;setIs_deleted;getName;getPolicy_schema_version;getPlatform;getPolicy_type;setPolicy_version_modified;setPolicy_id;getRepository_type;setPolicy_version_created;getVersion;setPolicy_sub_type;getFeature_code;setCreated_by;getDescription;getPolicy_version_created;setModified_by;getCreated;getIs_deleted"/>
<mapEntry key="spe.policy.dto.SpePolicy" value="setPolicy_status;setParent_policy_reference_id;toString;getVersion;setVersion;getPolicy_version_id;setPolicy_version_id;getPolicy_status;getParent_policy_reference_id"/>
<mapEntry key="spe.policy.dto.SpePolicyJobDetail" value="getUserName;setScheduleType;getStatus;setJobId;setAllownotification;setStartTime;toString;setEnabled;getEnabled;setEndTime;setUserName;setStatus;getScheduleType;setIsGroupJob;setJobName;getIsGroupJob;getAllownotification;getJobId;getStartTime;getEndTime;getJobName"/>
<mapEntry key="spe.policy.dto.SpePolicyJobDetails" value="setPolicyType;setPolicyGroupName;getPolicyGroupParameter;getPolicyGroupName;setPolicyDeleted;setJobHistories;setPolicyGroupParameter;getPolicyType;getAssetGroupName;getAssetGroupDeleted;setAssetGroupDeleted;getJobDetail;setJobDetail;getPolicyDeleted;toString;getJobHistories;setAssetGroupName"/>
<mapEntry key="spe.policy.dto.SpePolicyJobHistory" value="getStatus;setJobParameterId;getSummary;setStatus;setSummary;setJobId;setJobRunId;setStarttime;setEndtime;getJobRunId;setJobName;getJobId;setUsername;setFailReason;getEndtime;toString;getUsername;getFailReason;getJobParameterId;getStarttime;getJobName"/>
<mapEntry key="spe.s3.lib.SpeS3Integrator" value="pollForSpeEventsToGivenBucket;getBucketDeviceIdByBucketName;checkControllerExists;getSampleScheduleJsonForGivenBucket;deleteAllBridgeDevicesFromCustomerAccount;getBucketProtectionStatus;polllForSpePersmissionEventsToGivenBucket;getSpeDefaultApId;SpeS3Integrator;isBucketPresentInCwp;polllForBucketToBeDeletedFromCWP;pollForBucketStatusToBeChanged;polllForBucketToBeAppearInCWP;getListOfS3Buckets;getControllersList;verifySpeAlertIsGenerated;verifyIfBucketHasGivenPermission;getS3BucketDetails;deleteControllerAndItsAssociatedBucketsFromUI;pollForSpeContainerVloilationEventsToGivenBucket"/>
<mapEntry key="spe.s3.schedule.dto.Schedule" value="setTrigger;setName;getScope;getAdditionalProperties;getDescription;setDescription;setScope;getName;setAdditionalProperty;getTrigger"/>
<mapEntry key="spe.s3.schedule.dto.Scope" value="getRecursion;setPermissionCheck;setAdditionalProperty;getPermissionCheck;getMalwareScanning;setRecursion;getAdditionalProperties;setMalwareScanning;getBucketName;setBucketName"/>
<mapEntry key="spe.s3.schedule.dto.Trigger" value="setDayOfMonth;setAdditionalProperty;getDayOfMonth;getDayOfWeek;getHours;setStartDateTime;setMonth;setHours;getMonth;getEndDateTime;setEndDateTime;getMinutes;getStartDateTime;getAdditionalProperties;setMinutes;setDayOfWeek"/>
<mapEntry key="spe.s3.ui.dto.AccountBlockPermission" value="getACCOUNTBLOCKPUBLICACLS;getACCOUNTBLOCKPUBLICPOLICY;setACCOUNTBLOCKPUBLICACLS;setACCOUNTBLOCKPUBLICPOLICY;getACCOUNTIGNOREPUBLICACLS;getAdditionalProperties;setACCOUNTIGNOREPUBLICACLS;setAdditionalProperty;getACCOUNTRESTRICTPUBLICBUCKETS;setACCOUNTRESTRICTPUBLICBUCKETS"/>
<mapEntry key="spe.s3.ui.dto.BucketAcl" value="setGrantee_id;setPermission;getPermission;getGrantee_id;toString"/>
<mapEntry key="spe.s3.ui.dto.BucketBlockPermission" value="setBUCKETBLOCKPUBLICPOLICY;getBUCKETBLOCKPUBLICACLS;getAdditionalProperties;getBUCKETRESTRICTPUBLICBUCKETS;setAdditionalProperty;getBUCKETBLOCKPUBLICPOLICY;setBUCKETBLOCKPUBLICACLS;setBUCKETRESTRICTPUBLICBUCKETS;getBUCKETIGNOREPUBLICACLS;setBUCKETIGNOREPUBLICACLS"/>
<mapEntry key="spe.s3.ui.dto.BucketListUi" value="getAdditionalProperties;setCount;getCount;getResults;setResults;setAdditionalProperty"/>
<mapEntry key="spe.s3.ui.dto.BucketPermission" value="getAdditionalProperties;setBucketPermission;getAccountBlockPermission;setBucketBlockPermission;getBucketPermission;setAdditionalProperty;setAccountBlockPermission;getBucketBlockPermission"/>
<mapEntry key="spe.s3.ui.dto.BucketProps" value="toString;setScanConfigured;getNotificationConfigured;setNotificationConfigured;getScanConfigured"/>
<mapEntry key="spe.s3.ui.dto.Bucket_Cloud_account" value="setOwner_id;getOwner_id;toString;getOwner_name;setOwner_name"/>
<mapEntry key="spe.s3.ui.dto.Bucket_Storage_notification_config" value="getName;setName;getEvents_configured;setSend_to;toString;setSend_to_value;getSend_to_value;getSend_to;setEvents_configured"/>
<mapEntry key="spe.s3.ui.dto.CloudAccount" value="setOwnerId;setAdditionalProperty;getOwnerId;getAdditionalProperties;setOwnerName;getOwnerName"/>
<mapEntry key="spe.s3.ui.dto.GetBucketDetailsResponse" value="setConsolidatedPermissions;setCreated;getDlpViolationEventCount;getAccountId;getStorageLastModifiedDate;getObjClasses;getAccess;setCloudAccount;setDeleted;setRegion;getDedicated;setName;setAntimalwareFileDetectionEventCount;getAntimalwareFileResponseEventCount;getStorageCreatedDate;setAccess;setProps;getBucketPermission;getRegionName;setObjClasses;getAntimalwareFileDetectionEventCount;getIsCloudtrailEvent;setStorageLastModifiedDate;getScanConfigured;setAccountId;setDedicated;getBridgeName;getDeleted;setBucketPermission;getStorageNotificationConfig;setBridgeName;setRegionName;getPermissions;getId;getAdditionalProperties;getProps;setIsCloudtrailEvent;setBridgeId;getBridgeId;setCloudPlatform;getCloudAccount;getRegion;getPermissionEventCount;getProtectionStatus;setAdditionalProperty;setProtectionStatus;getConsolidatedPermissions;getCreated;setPermissionEventCount;getCloudPlatform;setScanConfigured;setStorageCreatedDate;setStorageNotificationConfig;getName;setDlpViolationEventCount;setAntimalwareFileResponseEventCount;setId;setPermissions"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListAssetIdentifiers" value="setAccount_id;toString;getAmi_id;getAccount_id1;setInstance_id;setAccount_id1;getRegion;setAmi_id;setRegion;getAccount_id;getInstance_id"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListCpeWfn" value="setVendor;getLanguage;setEdition;getSw_edition;setUpdate;toString;setSw_edition;setTarget_sw;getTarget_sw;setTarget_hw;setVersion;setLanguage;setProduct;setOther;setPart;getVersion;getPart;getEdition;getOther;getTarget_hw;getVendor;getUpdate;getProduct"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListIncludedInstalledProducts" value="setCpe_wfn;getLast_connected_time;getAgent_version;setObj_classes;getVendor;setProduct_uuid;setId;setVendor;setType;getProps;getId;setStatus;getVersion;toString;getType;setIdentifier;setProps;setSupported_technologies;getCreated;getModified;getCpe_wfn;setAgent_version;setIs_potential_risk;setName;getIs_potential_risk;getIdentifier;getProduct_uuid;getSupported_technologies;getObj_classes;setModified;getStatus;getName;setLast_connected_time;setCreated;setVersion"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListOs" value="getName;toString;setName"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListPotentialRisk" value="getVulnerability_id;setDiscovered_date;toString;getDiscovered_date;setVulnerability_id"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListProps" value="setSqs_queue_exist;getDeployment_configured;setStack_name1;getMulti_account;getSubscription_valid;getNrts;getSqs_queue_exist;getStack_name;setStack_name;setSubscription_valid;setS3_queue;setMulti_account;getMulti_region;getMode_of_discovery;setMulti_region;setDeployment_version;getDeployment_version;getS3_queue;setMode_of_discovery;toString;setDeployment_configured;setNrts;getStack_name1"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListResponse" value="getCount;toString;setCount;getResults;setResults"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListResult" value="setOs;getPlatform;setPrivate_ips;setInstance_id;getAgent_installed;setRegion_name;getAsset_identifiers;setAgent_installed;setIncluded_installed_products;setAsset_identifiers;getInstance_id;setPlatform;getName;getObj_classes;setId;getOs;getRegion_name;setObj_classes;toString;getCreated;getHost;setName;getIncluded_installed_products;setHost;getId;getRegion;setCreated;getPrivate_ips;setRegion"/>
<mapEntry key="spe.s3.ui.dto.GetControllersListStatus" value="setSPE_S3_BRIDGE;setDLP;getDLP;getSPE_S3_BRIDGE;toString"/>
<mapEntry key="spe.s3.ui.dto.Props" value="getNotificationConfigured;setAdditionalProperty;setScanConfigured;getAdditionalProperties;getScanConfigured;setNotificationConfigured"/>
<mapEntry key="spe.s3.ui.dto.Result" value="setCloudPlatform;getDedicated;getBridgeName;setBridgeId;getAccess;getObjClasses;setStorageNotificationConfig;setObjClasses;getStorageCreatedDate;setProtectionStatus;setIsCloudtrailEvent;setScanConfigured;getBucketPermission;getPermissions;getStorageNotificationConfig;setName;setConsolidatedPermissions;setId;getRegionName;getIsCloudtrailEvent;getProtectionStatus;setPermissions;setStorageCreatedDate;getConsolidatedPermissions;setCloudAccount;getCreated;getId;setAccess;getCloudPlatform;getProps;setRegion;getAdditionalProperties;getDeleted;getRegion;getScanConfigured;getBridgeId;setCreated;getCloudAccount;getName;setAccountId;setDedicated;setProps;getAccountId;setDeleted;setRegionName;setAdditionalProperty;setBucketPermission;setBridgeName"/>
<mapEntry key="spe.s3.ui.dto.StorageNotificationConfig" value="getName;setEventsConfigured;getAdditionalProperties;setSendToValue;getEventsConfigured;setName;getSendToValue;getSendTo;setSendTo;setAdditionalProperty"/>
<mapEntry key="spe.scannergroup.dto.CreateScannerGroupRequest" value="setName;getPolicy_id;setProps;getName;setId;getPolicy_name;setPolicy_name;setDesc;getDesc;setPolicy_version;toString;getProps;getPolicy_version;setPolicy_id;setSubtype;getSubtype;getId"/>
<mapEntry key="spe.scannergroup.dto.CreateScannerGroupResponse" value="getSubtype;setCreated;getIs_system;toString;setName;setModified;getPolicy_id;getPolicy_name;setProps;setPolicy_job_id;setPolicy_id;getCreated;getModified;getName;setPolicy_name;setId;setDesc;getPolicy_status;getDesc;setPolicy_status;getAuthor;setIs_system;setAuthor;getPolicy_job_id;getProps;getId;setPolicy_version;setSubtype;getPolicy_version"/>
<mapEntry key="spe.scannergroup.dto.EditScannerResponse" value="setPrivate_ips;getAgent_installed;setCustom_name;setAgent_installed;getCustom_name;getPrivate_ips;setOs_name;setCreated;setHost;getPlatform;getHost;setOs_version;getId;toString;setPlatform;setId;setIncluded_installed_products_props_cwps_enforce_spe_asset_scan;getOs_name;getOs_version;getCreated;getIncluded_installed_products_props_cwps_enforce_spe_asset_scan"/>
<mapEntry key="spe.scannergroup.dto.ListScannerGroupResponse" value="setResults;getResults;getCount;toString;setCount"/>
<mapEntry key="spe.scannergroup.dto.ListScannerGroupResults" value="getCreated;setSubtype;getPolicy_job_id;setPolicy_version;getSubtype;getAuthor;getProps;getId;setPolicy_job_id;setDesc;setId;setPolicy_status;setPolicy_name;getPolicy_id;setCreated;toString;setName;setModified;setProps;getPolicy_version;getIs_system;getPolicy_status;getPolicy_name;getName;setPolicy_id;setAuthor;setIs_system;getDesc;getModified"/>
<mapEntry key="spe.scannergroup.dto.ListScannerGroupsProps" value="setBase_policy_id;toString;getBase_policy_id"/>
<mapEntry key="spe.scannergroup.dto.ScannerGroupProps" value="setBase_policy_id;toString;getBase_policy_id"/>
<mapEntry key="testclasses.AWSSaasMarketPlaceStorageTests" value="verifySubscribeCWPStorageCustomerFromSaaSMarketPlace;verifyDefaultGeneralSettings;verifyReSubscribeCWPStorageCustomerFromSaaSMarketPlace;tearDown;verifyCancelCWPStorageCustomerSubscriptionFromSaaSMarketPlace;verifyDefaultAlertProfiles"/>
<mapEntry key="testclasses.AWSSaasMarketPlaceTests" value="verifyDefaultGeneralSettings;verifyReSubscribeCWPCustomerFromSaaSMarketPlace;tearDown;verifyDefaultPolicyGroups;verifySubscribeCWPCustomerFromSaaSMarketPlace;verifyCancelCWPCustomerSubscriptionFromSaaSMarketPlace;verifyDefaultAlertProfiles"/>
<mapEntry key="testclasses.AlertProfileTest" value="createAPWithEventBasedRuleForPreventionEvent;deleteAPWithDeletionOfAssociatedPG;createAPWithEventBasedRuleForAWSCloudTrailEvent;getAllPredefinedRules;createAPWithEBRHavingMultipleConditions;createAPFromPolicyGroup;getListOfEventTypeFields;associatedDefaultAPCreatedFromPolicyGroup;createAPWithPolicyBasedRule;extractDataFromJsonArray;editDefaultAPFromAPListPage;verifyAlertProfileCRUD;getAggregatedFieldsForEventTypes;deleteMultipleAP;verifyAWSActivityMonitorProfile;createAPwithSpecialChar;createAPWithEventBasedRuleForAWSCTEvtWithCustomAttribute;searchAPbyNameAndDescription;getListOfEventType;getAlertProfileInfoForSreRuleId;getAllTemplateRules;getDevicesAlertCount;createAPWithEventBasedRuleForDetectionEvent;associatedDefaultWithSomeSuffixAPCreatedFromPolicyGroup;createAPWithEventAndPolicyBasedRule;getAllCategoryNameToDisplayNameMap"/>
<mapEntry key="testclasses.AuditControllerTests" value="verifyGetAuditEventsUsingDateRange;verifyGetAuditEventsUsingCutomerEmailId;verifyGetAuditEventsWhenCustomerLogsIn;verifyGetAuditEventsUsingCutomeridAndDomainid"/>
<mapEntry key="testclasses.Browser" value="getDriver;getBrowserMobProxy;getBrowserCapabilities;getBrowserCapabilities"/>
<mapEntry key="testclasses.CleanClass" value="verifyProtectionAdapter"/>
<mapEntry key="testclasses.CwpPublicApiAutomaton" value="testApiGetAgentVersionForPlatformAll;testApiPutAzureConnectionUpdate;testApiExtractPolicySettings;testApiPutGcpConnectionUpdate;verifyScript_cwp_aws_connection_create_single_call_with_cloudtrail;testApiGetAssets;testApiPutOciConnectionUpdate;verifyScript_cwpassets;verifyScript_cwp_agentlogsdownloadzip;verifyScriptAddTagsToInstances;verifyScript_cwp_agentinstall;testApiPostAzureConnectionCreate;testPostGetAssetId;verifyScriptCreateUpdateAzureConnection;verifyScript_cwp_runavscan_onselectassets;verifyScript_cwptandv;verifyScript_cwpgetalerts;verifyScriptCreateUpdateGcpConnection;testApiGetAssetAssociatedWithPolicyGroup;verifyScript_cwp_aws_connection_create_single_call_with_periodic_sync;testApiGetCloudAdapters;verifyScript_runAVscan;testApiApplyPolicyGroupOnAsset;testApiGetEvents;testApiGetAgentLogsDownload;tearDown;verifyScript_applyUpdatedPolicyGroupOnInstances;verifyScript_cwpassets_paged;testApiPostOciConnectionCreate;verifyScript_cwpgetevents;testApiGetPolicyGroup;testApiGetAgentPackage;testApiPostThreat;verifyScript_cwp_aws_connection_update_with_periodic_sync;testApiGetAuthToken;testApiPostVulnerability;verifyScriptCreateUpdateOciConnection;setup;testApiPostRunAvScan;verifyScriptDeleteTagsToInstances;verifyScript_cwp_aws_connection_get_create;testApiCreateCloudAdapters;verifyScript_cwp_agent_version;testApiPostGcpConnectionCreate;testApiGetAlerts;testPostAvScan;testApiGetAgentVersionForPlatformSpecified"/>
<mapEntry key="testclasses.E2EAutomationAWSAmazonLinux" value="verifyApplyRecommendationAgent;setup;tearDown;getArrayListFromJson;verifyApplyPolicyGroupOnAgent;verifyRunDiscoveryAndRecommendationAgent;verifyDeletePolicyGroupAPI;verifyRevokePolicyGroup;verifyCreatePolicyGroupLiveAgentTestUnix;verifyEventTypes"/>
<mapEntry key="testclasses.E2EAutomationAWSAmazonLinux2" value="getArrayListFromJson;verifyVerboseLoggingIsEnabledForSingleAgent;verifyDeletePolicyGroupAPI;verifyRevokePolicyGroup;verifyEventTypes;verifyCreatePolicyGroupLiveAgentTestUnix;verifyApplyRecommendationAgent;verifyCollectAndDownloadAgentLogFileForSingleAgent;setup;verifyApplyPolicyGroupOnAgent;verifyResetAgentLogsForSingleAgent;tearDown;verifyRunDiscoveryAndRecommendationAgent"/>
<mapEntry key="testclasses.E2EAutomationAWSCentOS" value="verifyEventTypes;verifyRevokePolicyGroup;verifyApplyRecommendationAgent;verifyDeletePolicyGroupAPI;verifyCreatePolicyGroupLiveAgentTestUnix;tearDown;verifyApplyPolicyGroupOnAgent;verifyRunDiscoveryAndRecommendationAgent;getArrayListFromJson;setup"/>
<mapEntry key="testclasses.E2EAutomationAWSRHEL" value="setup;verifyNotificationWhenDiscoveryIsRunOnEnrolledAgent;verifyResetAgentLogsForSingleAgent;verifyEventTypes;getArrayListFromJson;verifyApplyRecommendationAgent;verifyNotificationForPolicyEnforcementJob;verifyDeletePolicyGroupAPI;verifyVerboseLoggingIsEnabledForSingleAgent;verifyApplyPolicyGroupOnAgent;verifyJobIsCreatedForPolicyApplyUsingApplyNowFromRecommendationPage;verifyNotificationWhenCriticalAlertGenerated;verifyRevokePolicyGroup;verifyAlert;verifyCreatePolicyGroupLiveAgentTestUnix;tearDown;verifyCollectAndDownloadAgentLogFileForSingleAgent;verifyJobIsCreatedForPolicyApplyUsingApplyNowFromInstancePage;verifyRunDiscoveryAndRecommendationAgent;verifyJobIsCreatedForPolicyRevoke"/>
<mapEntry key="testclasses.E2EAutomationAWSWindows2016" value="setUp;verifyApplyPolicyGroupOnWindowsAgent;verifyEventTypes;verifyCreatePolicyGroupLiveAgentTestWindows;getArrayListFromJson;tearDown"/>
<mapEntry key="testclasses.E2EAzureAutomation" value="verifyApplicationDiscoveryPostOneApplicationUninstall;verifyEventTypes;verifyApplicationDiscovery;verifyPolicyGroupApplyUsingRecommendation;setup;tearDown;verifyPolicyRecommendationAfterApplicationDiscovery;verifyRevokePolicy"/>
<mapEntry key="testclasses.E2EAzureAutomationCentOS" value="verifyApplicationDiscovery;verifyPolicyGroupApplyUsingRecommendation;verifyEventTypes;setup;verifyPolicyRecommendationAfterApplicationDiscovery;verifyRevokePolicy;tearDown;verifyApplicationDiscoveryPostOneApplicationUninstall"/>
<mapEntry key="testclasses.E2EAzureWinAutomation" value="verifyApplyRecommendationWindowsAgent;verifyEventTypes;setUp;verifyApplyPolicyGroupOnWindowsAgent;verifyDeletePolicyGroupAPI;verifyRevokePolicyGroup;tearDown;verifyEnrollmentForWindows;verifyCreatePolicyGroupLiveAgentTestWindows;verifyRunDiscoveryAndRecommendationWindowsAgent;getArrayListFromJson"/>
<mapEntry key="testclasses.EventManagmentTest" value="createAsset;verifyIPSEvent;findEvent;setUp;verifyIDSEvent;verifyEventWithAdditionalField;verifyErrorHandlingForCloudtrailEvents;verifyErrorHandlingForCSPEvents;verifyEventsWithDate;generateAndVerifyEvent;verifyEventsWithSpecialChars;eventWithRawData;verifyManagementEvent;verifyAWSCloudtrailEvent;verifyMultipleEventsLogged;verifyUserCanFilterEvents;verifyUserCanSearchEvents;verifyRawDataPersistenceForDFWWandDFWU;verifyGetEventsForAsset;verifyAllTypeOfEventDocument;retrieveEventGroupsConfig"/>
<mapEntry key="testclasses.GetAPIsForCodeCoverage" value="verifyGetRiskOnAssetAPI;verifyGetPolicyGroupRulesForAsset;getBucketsWithMalwareTickerCount;getOnPremPolicyNavigationData;verifyGetAllOnPremPoliciesAPI;getProtectedInstanceCountByRegion;getRulesForAppliedAsset;createDefaultPolicyGroups;getMalwareEventTickerCount;verifyUpgradablePoliciesAPI;getAssetForClassicPolicy;verifyGetInstalledSoftwaresForAssetWithDetails;verifyGetMetadataFieldsOfTemplatePolicyGroup;getThreatSummaryForStorage;testApplyRecommendationScheduled;getFilesWithMalwareTickerCount;tearDown;verifyGetPolicyGroupsBasicAPI;verifyGetPaginatedVulnerabilitiesForAsset;verifyGetPolicySettingsAPIForPolicyPage;getNewInstanceCount;verifyGetPolicyGroupsWorthUpgradingForTemplate;getUnProtectedInstanceCount;setup;verifyGetColumnFilterValuesForAssetGrid;getPoliciesFields;verifyCreatePolicyGroupLiveAgentTestUnix;autoMergePolicy;testGetPoliciesForPolicyGroupPlatform;verifyPaginatedThreats;getProtectedInstanceCount;verifyPolicyCommandErrors;getAllPolicyTemplatesWithFieldName;dashboardCharts;verifyRulesOnAssetForPolicyGroup"/>
<mapEntry key="testclasses.JobsAndNotificationManagementTests" value="verifyNotificationForPolicyEnforcementJob;verifyUserCanEditAzurePeriodicSynchJob;verifyNewScheduledJobIsCreatedForPolicyApplyLaterOption;verifyNotificationAfterAzureConfigurationAndAssetImport;verifyJobIsCreatedForPolicyApplyLaterOption;verifyJobIsCreatedForPolicyRevoke;tearDown;verifyJobIsCreatedForPolicyApplyUsingApplyNowFromRecommendationPage;verifyUserCanCancelJobSchedule;verifyJobIsCreatedForAzurePolling;verifyUserCanEditJobSchedule;verifyJobIsCreatedForPolicyApplyUsingApplyNowFromInstancePage;verifyUserCanEditAWSPeriodicSynchJob;verifyNotificationIsNotGeneratedForJobWhenNotificationIsDisabled;verifyJobIsNotCreatedWhenCloudTrailIsConfiguredForAWS;verifyJobIsCreatedMultipleAzureConnections;setUp;verifyNotificationWhenNewAgentIsEnrolled;verifyNotificationWhenDiscoveryIsRunOnEnrolledAgent;verifyNotificationWhenFirstTimeAssetIsImportedFromAWS;verifyNotificationReadUnRead;verifJobIsNotCreatedIfAWSConfigurationFails;verifJobIsCreatedForAWSPeriodicSynch"/>
<mapEntry key="testclasses.MeteringAutomationAWSRHEL" value="validateMeteringRowGetsUpdatedAfterAWSInstanceStartedWithNewInstanceType;validateMeteringStartedOnAgentStatusRebootRequired;getMeteringStartAndStopSources;validateMeteringRowGetsUpdatedAfterAWSInstanceStopped;getAssetDetailsByInstanceId;validateMeteringAddsNewRecordAfterReboot;tearDown;getMeteringRecordCount;getAssetDetailsByInstanceName;waitTillExpectedValueSetForAssetAttribute;validateMeteringRowGetsUpdatedAfterAgentGetsUninstalledAndTerminated;setup"/>
<mapEntry key="testclasses.MeteringAutomationAzureCentOS" value="makeAgentOffline;getMeteringStartAndStopSources;validateMeteringRowGetsUpdatedAfterAzureInstanceStarted;setup;validateMeteringStartedOnAgentStatusRebootRequired;validateMeteringRowGetsUpdatedAfterAgentGetsUninstalled;makeAgentOnline;getMeteringRecordCount;tearDown;validateMeteringRowGetsUpdatedAfterAzureInstanceStopped;waitTillExpectedValueSetForAssetAttribute;getAssetDetailsByInstanceId;validateMeteringAddsNewRecordAfterReboot;getAssetDetailsByInstanceName;validateMeteringStoppedOnTeminationOfInstanceWithAgentInstalled"/>
<mapEntry key="testclasses.PolicyE2EContentCertificationTests" value="verifyContentForUnix;setUp;verifyEnrollmentForUnix;verifyContentAfterDiscoveryForUnix;verifyContentForWindows;verifyContentAfterDiscoveryForWindows;verifyEnrollmentForWindows;tearDown"/>
<mapEntry key="testclasses.SpeNasIntegrationTests" value="setUp;verifyAssociationOfUnmanagedScannerGroupToScannersAndSpeAssets;verifyEditCopyDeletePolicyAppliedOnScannerGroups;verifyCreateUpdateViewCopyAndDeleteSPEWorkspacePolicy;verifyCreateUpdateViewAndDeleteSPEAsset;verifyScannnerDashboard;verifyHealthStatusofScannnerOnDashboard;verifyEditAndApplyPolicyOnScannerGroups;verifyCreateUpdateViewAndDeleteScannerGroup;veryMalwareEventsAndAlertsForScanner;verifyToggleScanRestrictionForScanner;tearDown;verifyImportSPELibraryPolicy;verifyDownloadEnrollScriptAndLinuxScannerEnrollment;verifyImportPolicyFromScannerGroups;verifyApplyPolicyOnScannerGroups;verifyAssociationAndDissociationOfScannerGroupToScannersAndSpeAssets"/>
<mapEntry key="testclasses.SubscriptionAutomationTests" value="verifySubscriptionBehaviorWhenDirectlyPurchaseYearlySubscription;verifyTrialSubscriptionGetsRenewed;executeRESTAPIOfSchedule;verifySubscriptionBehaviorWhenInGracePeriod;verifySubscriptionBehaviorSuspendedSubscriptionGetsResumed;verifySubscriptionBehaviorPaidSubscriptionSuspended;executeRESTAPIForRedisCache;verifySubscriptionDetails;verifySubscriptionDetailsForCustomer;updateQuery;getAssetDetailsByInstanceName;getArrayListFromJson;verifySubscriptionBehaviorWhenUserRenewsUpfrontYearlySubscription;verifySubscriptionBehaviorPaidSubscriptionCanceled;getAssetDetailsByInstanceId;verifySubscriptionBehaviorFromPayAsYouGoToYearlySubscription;verifySubscriptionBehaviorPaidSubscriptionTerminated;verifyExportUsageDetails;verifyTrialSubscriptionGetsCanceled;verifyExportUsageDetailsForCustomer;setup;executeRESTAPIForGetSubscriptionStatus;verifyCustomerServicesFromTrialToPayAsOnGoModel;verifyCustomerServicesAfterTrialPeriodExpires;tearDown;verifySubscriptionBehaviorUserRenewsPayAsOnGoSubscription;verifySubscriptionBehaviorFromTrialToYearlySubscription;verifySubscriptionBehaviorWhenDirectlyPurchasePayAsYouOnGoModel"/>
<mapEntry key="testclasses.SyntheticBATDev" value="verifyDeepsightAPIs;verifyDockerUsecases;verifyRunDiscoveryOnAgent;verifyCreateAlertProfile;verifyAlert;verifyEventPostPolicyApplication;verifyGetClassicPolicy;getArrayListFromJson;verifyApplyPolicyRecommendation;verifyGetAdaptersAPI;verifyInstanceDetail;tearDown;verifyEventPublishedToCloudWatch;afterSuite;verifyRecommendationPostApplicationDiscovery;verifyAutoEnforementOfPolicyOnAgent;verifyLogin;verifyAntimalwareScan;verifyCreatePolicyGroup;verifyFetchAssetFromAWS;setup;verifyDashboard;verifyAVPolicyGroupModeChangeToTest"/>
<mapEntry key="testclasses.SyntheticBATEUProd" value="verifyCreatePolicyGroup;setup;verifyEventPostPolicyApplication;verifyDashboard;verifyAutoEnforcementOfPolicyOnAgent;verifyEventPublishedToCloudWatch;verifyGetPolicyTemplateIDs;verifyAVPolicyGroupModeChangeToTest;verifyAWSSAASIntegration;getArrayListFromJson;verifyRecommendationPostApplicationDiscovery;verifyFetchAssetFromAWS;verifyAntimalwareScan;verifyRunDiscoveryOnAgent;verifyDeepsightAPIs;afterSuite;verifyGetEnrolledAsset;verifyApplyPolicyRecommendation;verifyGetClassicPolicy;verifyDockerUsecases;verifyAlert;verifyGetAdaptersAPI;verifyLogin"/>
<mapEntry key="testclasses.SyntheticBATEUStage" value="verifyDashboard;verifyRunDiscoveryOnAgent;verifyAutoEnforcementOfPolicyOnAgent;verifyEventPublishedToCloudWatch;verifyApplyPolicyRecommendation;getArrayListFromJson;verifyEventPostPolicyApplication;verifyGetAdaptersAPI;verifyGetClassicPolicy;verifyLogin;verifyAlert;verifyGetEnrolledAsset;verifyAWSSAASIntegration;verifyDockerUsecases;verifyRecommendationPostApplicationDiscovery;verifyAVPolicyGroupModeChangeToTest;verifyGetPolicyTemplateIDs;verifyDeepsightAPIs;verifyAntimalwareScan;setup;verifyCreatePolicyGroup;afterSuite;verifyFetchAssetFromAWS"/>
<mapEntry key="testclasses.SyntheticBATPassiveDC" value="verifyGetPolicyTemplateIDs;verifyEventPublishedToCloudWatch;verifyGetAdaptersAPI;setup;afterSuite;verifyCreatePolicyGroup;verifyGetClassicPolicy;verifyApplyPolicyRecommendation;verifyGetEnrolledAsset;verifyLogin;verifyAVPolicyGroupModeChangeToTest;verifyDeepsightAPIs;verifyFetchAssetFromAWS;verifyAWSSAASIntegration;verifyEventPostPolicyApplication;verifyDockerUsecases;verifyDashboard;verifyAntimalwareScan;getArrayListFromJson;tearDown;verifyRecommendationPostApplicationDiscovery;verifyAutoEnforementOfPolicyOnAgent;verifyRunDiscoveryOnAgent"/>
<mapEntry key="testclasses.SyntheticBATProd" value="verifyLogin;verifyGetEnrolledAsset;verifyAlert;verifyGetAdaptersAPI;verifyGetClassicPolicy;verifyAutoEnforementOfPolicyOnAgent;verifyRecommendationPostApplicationDiscoveryOnWindowsAgent;verifyEventPostPolicyApplicationOnWindowsAgent;verifyApplyPolicyRecommendation;verifyEventPublishedToCloudWatch;verifyDockerUsecases;verifyRecommendationPostApplicationDiscovery;verifyAWSSAASIntegration;verifyRunDiscoveryOnAgent;getArrayListFromJson;verifyAgentDownloadAndEnrollmentOnLinuxInstance;verifyDeepsightAPIs;verifyAntimalwareScan;verifyGetPolicyTemplateIDs;verifyEventPostPolicyApplication;verifyRunDiscoveryOnWindowsAgent;verifyDashboard;verifyFetchAssetFromAWS;setup;afterSuite;verifyCreatePolicyGroup;verifyAVPolicyGroupModeChangeToTest;verifyApplyPolicyRecommendationOnWindowsAgent;verifyCreatePolicyGroupLiveAgentTestWindows"/>
<mapEntry key="testclasses.SyntheticBATStage" value="verifyEventPostPolicyApplication;verifyCreatePolicyGroup;verifyDashboard;getArrayListFromJson;verifyRecommendationPostApplicationDiscovery;verifyDeepsightAPIs;verifyGetPolicyTemplateIDs;verifyRunDiscoveryOnAgent;verifyDockerUsecases;verifyAVPolicyGroupModeChangeToTest;verifyAntimalwareScan;setup;verifyFetchAssetFromAWS;verifyAWSSAASIntegration;verifyAlert;verifyGetEnrolledAsset;verifyGetClassicPolicy;verifyLogin;verifyAutoEnforementOfPolicyOnAgent;verifyEventPublishedToCloudWatch;verifyApplyPolicyRecommendation;afterSuite;verifyGetAdaptersAPI"/>
<mapEntry key="uatclasses.UIPageLoadTimings" value="testDashboardPageLoadTime;afterSuite;setUp;tearDown;testInstancePageLoadTime;testThreatsAndVulnerabilityPageLoadTime;testLoginPageLoadTime;testPolicyPageLoadTime;testAgentDownloadPageLoadTime;testBucketsPageLoadTime;testAlertsAndEventsPageLoadTime;isFileDownloaded"/>
<mapEntry key="ui.common.lib.CommonUIMethods" value="isAnyActionPresentOnGird;isFilterPresent;isInteger;verifySortFunctionalityUI;removeSearchCriteria;applyFilterSeverityOnEvents;searchInGrid;clearSearchCriteria;showFilter;navigateToTabName;getSearchResultOnEventsAndAlerts;searchInGrid2;getLoggedInUserFullName;applyFilterAlertsAndEvents;hideFilter;searchInGridForEventsAndAlerts;CommonUIMethods;getSearchResult;changePageSize;applyFilter;gridDataLoad;getSearchResultOnEventsAndAlerts"/>
<mapEntry key="ui.common.lib.Navigate" value="alertEventJobsNotificationWorkspace;settingsWorkspace;StorageWorkspace;policiesWorkspace;SPEPoliciesWorkspace;Navigate;threatVulnerabilitiesWorkspace;instanceWorkspace"/>
<mapEntry key="ui.common.lib.SearchInfoObject" value="setSearchFieldValue;setSearchFieldName;getSearchFieldName;getSearchFieldValue"/>
<mapEntry key="ui.common.lib.SortInfoObject" value="setSortFieldName;getSortFieldName"/>
<mapEntry key="ui.eventAlerts.lib.AlertProfileInfoObject" value="getAlertProfileName;getAlertNotificationUserEmail;setAlertNotificationMessage;getAlertNotificationMessage;setAlertProfileName;setAlertNotificationUserEmail;getDescription;setDescription"/>
<mapEntry key="ui.eventAlerts.lib.AlertProfilePage" value="createAPFromUI;getAPNameOfFirstRecord;fillUpCreateEventRulePart1;fillUpCreateAPPageDetails;navigateToAlertProfilePage;addPolicyBasedRules;editAlertProfileFromUI;fillUpEventBasedConditionPopupPart2;isEditBtnPresentForAP;addEventBasedRules;AlertProfilePage;isDeleteBtnPresentForAP;deleteCloudAlertProfile;isCreateAlertProfileBtnPresent;fillUpPolicyBasedRules"/>
<mapEntry key="ui.eventAlerts.lib.AlertsPage" value="AlertsPage;getAlertTitleOfFirstRecord;getAlertCount;goToAlertDetailPage;isUpdatePolicyActionPresentOnAlertDetail;isChangeStateActionPresentForAlertOnGrid;isAddCommentActionPresentOnAlertDetail;isAddCommentActionPresentForAlertOnGrid;navigateToAlertsPage;isEditProfileActionPresentOnAlertDetail;isChangeStateActionPresentOnAlertDetail"/>
<mapEntry key="ui.eventAlerts.lib.EventBasedRuleInfoObject" value="getEventType;setEventRuleName;setSeverity;getEventRuleName;setEventRuleDescription;getEventName;setEventType;getEventRuleDescription;setEventName;getSeverity"/>
<mapEntry key="ui.eventAlerts.lib.EventsPage" value="EventsPage;isUpdatePolicyBtnPresentOnEventsGrid;goToEventsDetailPage;isUpdatePolicyBtnPresentOnEventsDetail"/>
<mapEntry key="ui.instances.lib.ContainersPage" value="navigateToContainersPage;isContainerTabPresent;ContainersPage"/>
<mapEntry key="ui.instances.lib.InstancesPage" value="isInstancePresent;goToInstanceDetailPage;verifyAppliedPolicyNameUnderSubTab;applyPolicyGroupFromInstanceDetail;getActionsOnInstanceGrid;goToPolicyRecommendationPageFromInstanceDetail;getFirstRowInstanceId;goToAppliedPolicyGroupSubTab;applyPolicyGroupFromInstanceGrid;getListOfDiscoveredSoftwares;verifyPolicyStatusOnInstanceGrid;removePolicyGroupFromInstanceGrid;refreshInstanceGrid;verifyDiscoveredSoftwares;removePolicyGroupFromInstanceDetailPage;verifyDiscoveredSoftwares;runDiscoveryFromInstanceGrid;verifyDiscoveryCompleted;goToSoftwareServicesSubTab;goToPolicyRecommendationPageFromInstanceGrid;goBackToInstanceGridPageFromDetailPage;InstancesPage;getActionsOnInstanceDetail"/>
<mapEntry key="ui.instances.lib.SoftwareServicesPage" value="SoftwareServicesPage;navigateToSoftwareServicesPage"/>
<mapEntry key="ui.notification.lib.JobsPage" value="verifyAzurePeriodicSyncJobDetails;navigateToJobsPage;getAwsPeriodicSyncIntervalMins;verifyAwsPeriodicSyncJobDetails;verifyRemovePolicyGroupJobCreated;isMultipleAwsConnections;waitAndVerifyApplyPolicyGroupJobStatus;verifyApplyPolicyGroupJobCreated;editAwsPeriodicSyncJobSchedule;selectAzureConnection;selectAwsConnection;isMultipleAzureConnections;verifyInstancesUnderApplyPolicyGroupJob;refreshJobs;verifyDeleteCloudConnectionJobCreated;getApplyPolicyGroupJobCount;JobsPage;verifyGcpPeriodicSyncJobDetails;getAwsPeriodicSyncIntervalHours"/>
<mapEntry key="ui.notification.lib.NotificationFilter" value="NotificationFilter;NotificationFilter;setGeneratedOn;setType;getType;setReadUnread;getCategory;getGeneratedOn;setCategory;getReadUnread"/>
<mapEntry key="ui.notification.lib.NotificationPage" value="verifyAWSConnectionNotification;applyFilter;verifyRemovePolicyGroupNotification;navigateToNotificationsPage;NotificationPage;verifyCriticalAlertNotification;verifyApplyPolicyGroupNotification;waitForInstanceImportComplted"/>
<mapEntry key="ui.policy.lib.PolicyGroupPage" value="saveEditedCloudPolicyGroup;reApplyPolicyGroupFromGrid;getPolicyGroupMode;addPolicyToGroup;switchToProductionModeOnCreateCloudPolicyGroup;getActionsOnPolicyGroupDetail;goToPolicyGroupDetailPage;verifyAssociatedInstancesUnderPolicyGroupDetailPage;selectPolicyGroupRow;changePolicyGroupMode;navigateToEditPolicyPage;saveEditedPolicy;removePoliciesFromPolicyGroup;cancelCloudPolicyGroup;PolicyGroupPage;navigateToAssociatedInstancesSubTab;createCloudPolicyGroup;deleteCloudPolicyGroup;getFirstRowPGName;removePoliciesFromPolicyGroup;navigateToPolicyGroupDetailPage;navigateToPoliciesLeftNav;navigateBackToPolicyGroupGridPageFromDetailPage;launchCreateCloudPolicyGroup;navigateToEditCloudPolicyGroupPage;setPolicyGroupNameOnCreateCloudPolicyGroup;isCreatePolicyGroupBtnAvailable"/>
<mapEntry key="ui.policy.lib.PolicyLibraryPage" value="PolicyLibraryPage;navigateToPolicyLibraryPage"/>
<mapEntry key="ui.policy.lib.PolicyRecommendationPage" value="applyRecommendedPolicyGroup;verifyPolicyRecommendation;PolicyRecommendationPage;getRecommendedPolicyGroups;applyRecommendedPolicyGroup;verifyRecommendationSuccessMsg;verifyPolicyRecommendation"/>
<mapEntry key="ui.settings.lib.APIKeysPage" value="navigateToAPIKeysTab;APIKeysPage;isAPIKeysTabPresent"/>
<mapEntry key="ui.settings.lib.AwsConnectionPage" value="deleteAWSConnection;isAddAwsConnectionPresent;AwsConnectionPage;createAWSConnection;navigateToAWSConnectionTab"/>
<mapEntry key="ui.settings.lib.AzureConnectionPage" value="createAzureConnection;downloadAzureConfigScript;isAddAzureConectionBtnPresent;navigateToAzureConnectionTab;deleteAzureConnection;AzureConnectionPage"/>
<mapEntry key="ui.settings.lib.ConnectionDetails" value="setApplicationId;getSyncHours;setExternalId;getExternalId;getConnectionDescription;getSyncMinutes;setCwStramName;getCwStramName;getRoleARN;setCloudPlatform;getConnectionName;setSyncHours;setRoleARN;setConnectionDescription;getApplicationId;getDirectoryId;getSecretKey;getSynchOptions;setConnectionName;setServiceAccountJSON;setDirectoryId;getRegions;getServiceAccountJSON;setSecretKey;setPublishEventsToCloudWatch;getSQSNames;setSyncMinutes;getCloudPlatform;getCwGroupName;setCwGroupName;setRegions;setSynchOptions;setSQSNames;isPublishEventsToCloudWatch"/>
<mapEntry key="ui.settings.lib.DownloadAgentPage" value="donwloadAgentDefinations;DownloadAgentPage;isDownloadTabPresent;navigateToDownloadAgentPage;downloadAgentBuild"/>
<mapEntry key="ui.settings.lib.GcpConnectionPage" value="deleteGCPConnection;createGCPConnection;navigateToGCPConnectionTab;isAddGCPConnectionBtnPresent;GcpConnectionPage"/>
<mapEntry key="ui.settings.lib.GeneralSettings" value="isAutoDiscovery;isAutoApplyAutoscaling;isPrivateDeployment;setAutoApplyAutoscaling;isAutoApplyAMI;getMaximumNotificationForDetection;isEnableBridge;setPrivateDeployment;setEnableMFA;setAutoApplyAMI;setMaximumNotificationForDetection;setAutoDiscovery;isEnableMFA;setEnableBridge"/>
<mapEntry key="ui.settings.lib.GeneralSettingsPage" value="isGeneralSettingSaveBtnPresent;generalSettingCheckBoxClick;GeneralSettingsPage;isGeneralSettingsReadOnly;updateGeneralSettings"/>
<mapEntry key="ui.settings.lib.OSPlatform" value="OSPlatform;toString"/>
<mapEntry key="ui.settings.lib.OSVersions" value="toString;OSVersions"/>
<mapEntry key="ui.settings.lib.Regions" value="toString;Regions"/>
<mapEntry key="ui.settings.lib.UsersPage" value="navigateToUsersTab;isModifyUserBtnPresentForAnyUser;isAddUserBtnPresent;isDeactivateUserBtnPresentForAnyUser;UsersPage"/>
<mapEntry key="ui.testclasses.E2EAwsUITest" value="verifyNavigationToEditPolicyGroup;verifyCreateAWSConnection;verifyDeleteAlertProfile;verifyCriticalAlertNotification;verifyDeletePolicyGroup;verifyCreatePolicyGroup;verifyPolicyRecommendationAndApplyRecommendation;setup;verifyRemovePolicyGroupJobNotification;verifyEvents;verifyCreateEventBasedAlertProfile;verifyAlerts;tearDown;verifyAWSPeriodicSyncJob;verifySoftwareDiscovery;verifyRemovePolicyGroup;verifyApplyPolicyGroupJobNotification"/>
<mapEntry key="ui.testclasses.E2EAzureUITest" value="verifyRemovePolicyGroupJobNotification;verifyCreatePolicyGroup;setup;verifyPolicyRecommendationAndApplyRecommendation;verifyCreateEventBasedAlertProfile;verifyAzurePeriodicSyncJob;verifyCriticalAlertNotification;verifyRemovePolicyGroup;verifyDownloadAzureConfigScript;verifyEvents;verifyDeleteAlertProfile;verifyDeletePolicyGroup;verifyApplyPolicyGroupJobNotification;verifyCreateAzureConnection;verifySoftwareDiscovery;tearDown;verifyAlerts"/>
<mapEntry key="ui.testclasses.E2EGcpUITest" value="verifyCreatePolicyGroup;verifyApplyPolicyGroupJobNotification;verifyCreateGCPConnection;verifySoftwareDiscovery;verifyGCPPeriodicSyncJob;verifyRemovePolicyGroup;verifyEvents;tearDown;verifyNavigationToEditPolicyGroup;verifyAlerts;verifyRemovePolicyGroupJobNotification;setup;verifyDeletePolicyGroup;verifyCreateEventBasedAlertProfile;verifyDeleteAlertProfile;verifyPolicyRecommendationAndApplyRecommendation"/>
<mapEntry key="ui.testclasses.PolicyReapplyTests" value="setup;tearDown;verifyReapplyFromPgEditFlow;verifyReapplyFromPolicyGroupGrid"/>
<mapEntry key="ui.testclasses.RbacViewerUITest" value="verifyEventAlertAndAPPageForViewerRole;verifyInstancePageForViewerRole;verifyPolicyGroupPageForViewerRole;verifySettingWorkspaceForViewerRole"/>
<mapEntry key="ui.testclasses.SearchFilterUITest" value="tearDown;verifySearchFilterOnEvents;setup;verifySearchFilterOnInstance;verifySearchFilterOnAlerts;verifySearchFilterOnSoftwareServices;verifySearchFilterOnContainer;verifySearchFilterOnPolicyLibrary;verifySearchFilterOnThreats;verifySearchFilterOnVulnerabilities;verifySearchFilterOnPolicyGroup"/>
<mapEntry key="ui.testclasses.SearchFilterUITestForEventsAndAlerts" value="verifySearchFilterOnEvents"/>
<mapEntry key="ui.testclasses.SpeSearchFilterUITests" value="setup;verifySearchFilterOnScannerGroupsPage;verifySearchFilterOnSPEPoliciesPage;verifySearchFilterOnSPEAssestPage;verifySearchFilterOnScannersPage"/>
<mapEntry key="ui.threatsVulnerability.lib.ThreatsPage" value="navigateToThreatsPage;ThreatsPage"/>
<mapEntry key="ui.threatsVulnerability.lib.VulnerabilitiesPage" value="navigateToVulnerabilitiesPage;VulnerabilitiesPage"/>
<mapEntry key="usermanagement.AuditControllerImpl" value="postAuditEvent;AuditControllerImpl;getAuditEvent;getAuditEvent"/>
<mapEntry key="usermanagement.UsersUtility" value="getTrialDaysRemainingForUser;UsersUtility;getUserDetailsFromCookies;getUserDetailsFromCookies;setUserToken;getUserFromGlobalUserList;updateUsersInGlobalUserList;getCustomerSecretKey;serializeUsersData;getUserByKeyFromGlobalUserList;deserializeUsersData;updateUserInCWPContext"/>
<mapEntry key="usermanagement.dto.CustomerProductTrialRegistrationData" value="setContactEmailAddress;setDomainId;getDomainId;getContactLastName;getProductKeys;setProductKeys;getContactFirstName;getContactEmailAddress;setContactLastName;setContactPhoneNumber;getCustomerId;setCustomerId;getContactPhoneNumber;setContactFirstName"/>
<mapEntry key="usermanagement.dto.ProxySettings" value="setProxyPort;setProxyServer;setAdditionalProperty;getProxyServer;getProxyProtocol;getProxyPort;getProxyAuthScheme;setProxyPassword;getProxyPassword;setProxyProtocol;getProxyUsername;getAdditionalProperties;setProxyAuthScheme;setProxyUsername"/>
<mapEntry key="usermanagement.dto.Role" value="getPrivileges;getName;setCaption;getId;getCaption;setRoleProperties;getRoleProperties;setPrivileges;setId;setName"/>
<mapEntry key="usermanagement.dto.User" value="getUserId;setOfficePhone;setLastName;setName;getEnrollmentStatus;getFirstName;getRoleList;setFirstName;getEmail2;setEmail;getRoleDisplayName;getPassword;setCustomerId;getMobilePhone;getRoleName;setId;setPassword;getEmail;getDomainId;setMobilePhone;setEmail2;setRoleList;getOfficePhone;getName;setLastLoginDateTime;getOlpUserAllocationId;setUserId;setOlpAccountId;setDomainId;setRoleName;setOlpUserAllocationId;getLastName;getDomainName;getCustomerId;setDomainName;setEnrollmentStatus;getOlpAccountId;setRoleDisplayName;getLastLoginDateTime;getId"/>
<mapEntry key="usermanagement.dto.UserResult" value="setResults;setCount;getResults;getCount"/>
<mapEntry key="usermanagement.lib.UserController" value="deleteUser;tryNowProduct;deactivateUser;createAdminUser;activateUser;createUser;getUsersFromAllDomains;createUser;createViewerUser;UserController;createSuperAdminUser;updateProxySettings;getUsers;getUserByEmailId;updateUser"/>
</mapAttribute>
<listAttribute key="org.testng.eclipse.CLASS_TEST_LIST">
<listEntry value="policymanagement.dto.FileVO"/>
<listEntry value="jobs.JobsController"/>
<listEntry value="googlecloud.lib.GCPImages"/>
<listEntry value="regressionclasses.E2EAutomationAWSUbuntu16"/>
<listEntry value="regressionclasses.E2EAutomationAWSUbuntu14"/>
<listEntry value="notifications.NotificationCategory"/>
<listEntry value="alertprofile.dto.AlertProfilePolicyGroupBasedRule"/>
<listEntry value="commonlibrary.GlobalData"/>
<listEntry value="spe.s3.ui.dto.BucketListUi"/>
<listEntry value="usermanagement.dto.User"/>
<listEntry value="commonlibrary.JSONDateSerializer"/>
<listEntry value="commonlibrary.CouchBase"/>
<listEntry value="alertprofile.dto.AlertProfileRule"/>
<listEntry value="googlecloud.GCP"/>
<listEntry value="alertprofile.PolicyRule"/>
<listEntry value="spe.asset.dto.CreateSpeAssetResponse"/>
<listEntry value="uatclasses.UIPageLoadTimings"/>
<listEntry value="spe.scannergroup.dto.CreateScannerGroupResponse"/>
<listEntry value="spe.asset.dto.ListDeviceProps"/>
<listEntry value="regressionclasses.E2EWindowsPolicyContentWithDiscoveryTests"/>
<listEntry value="testclasses.SyntheticBATProd"/>
<listEntry value="policymanagement.dto.StaticAttributes"/>
<listEntry value="testclasses.GetAPIsForCodeCoverage"/>
<listEntry value="spe.nas.dto.AdaptersProps"/>
<listEntry value="spe.scannergroup.dto.ListScannerGroupResponse"/>
<listEntry value="ui.testclasses.SearchFilterUITestForEventsAndAlerts"/>
<listEntry value="spe.scannergroup.dto.ListScannerGroupResults"/>
<listEntry value="policymanagement.PolicyTemplateController"/>
<listEntry value="assets.InstancePage"/>
<listEntry value="awssaas.ProvisionLineStatuses"/>
<listEntry value="commonlibrary.JsonUtil"/>
<listEntry value="deepsight.Deepsight"/>
<listEntry value="deepsight.dto.ThreatPublicDto"/>
<listEntry value="policymanagement.dto.CpeDictionaryItem"/>
<listEntry value="deepsight.dto.ThreatMapFilter"/>
<listEntry value="jobs.JobDetail"/>
<listEntry value="regressionclasses.E2EAutomationAzureUbuntu14"/>
<listEntry value="oracle.connection.dto.CreateConnectionResponse"/>
<listEntry value="regressionclasses.UatSpeS3"/>
<listEntry value="multidomain.dto.Domain"/>
<listEntry value="regressionclasses.SpeS3Tests"/>
<listEntry value="azure.AzureExtension"/>
<listEntry value="av.RecurringJobDetails"/>
<listEntry value="testclasses.E2EAutomationAWSAmazonLinux2"/>
<listEntry value="alertprofile.dto.AlertProfileType"/>
<listEntry value="policymanagement.PolicyReccomendationScheduler"/>
<listEntry value="agent.AgentManagement"/>
<listEntry value="testclasses.CwpPublicApiAutomaton"/>
<listEntry value="usermanagement.dto.UserResult"/>
<listEntry value="event.EventFilter"/>
<listEntry value="regressionclasses.AuditEventsTest"/>
<listEntry value="regressionclasses.CloudTrailListenerServiceTest"/>
<listEntry value="usermanagement.dto.CustomerProductTrialRegistrationData"/>
<listEntry value="policymanagement.dto.NavigationFolder"/>
<listEntry value="regressionclasses.E2EAzureVMExtensionRHEL"/>
<listEntry value="policymanagement.dto.MetaDatas"/>
<listEntry value="ui.instances.lib.SoftwareServicesPage"/>
<listEntry value="assets.dto.IncludedDcsPolicyGroup"/>
<listEntry value="spe.policy.dto.CreateSpeLibraryPolicyRequest"/>
<listEntry value="commonlibrary.ElementInfo"/>
<listEntry value="testclasses.E2EAzureWinAutomation"/>
<listEntry value="deepsight.dto.VulnerabilityListVO"/>
<listEntry value="regressionclasses.E2EWindows"/>
<listEntry value="oracle.common.lib.OCI"/>
<listEntry value="policymanagement.PolicyStatus"/>
<listEntry value="deepsight.dto.ProviderRegionZoneFilter"/>
<listEntry value="policymanagement.dto.RecommendationSchedule"/>
<listEntry value="regressionclasses.E2EAutomationAWSRHEL73"/>
<listEntry value="notifications.NotificationManagement"/>
<listEntry value="policymanagement.dto.PolicyParameter"/>
<listEntry value="deepsight.dto.VulnerabilityVO"/>
<listEntry value="ui.policy.lib.PolicyRecommendationPage"/>
<listEntry value="policymanagement.dto.PolicyTemplateViewWrapper"/>
<listEntry value="setuptestclasses.CwpCleanup"/>
<listEntry value="commonlibrary.TesNGMain"/>
<listEntry value="ui.instances.lib.InstancesPage"/>
<listEntry value="spe.scannergroup.dto.EditScannerResponse"/>
<listEntry value="regressionclasses.F24TestsForLinux"/>
<listEntry value="generalsettings.dto.AutoEnforce"/>
<listEntry value="awsintegration.CPIFController"/>
<listEntry value="dashboard.CCDashboardController"/>
<listEntry value="assets.AssetManagement"/>
<listEntry value="spe.s3.ui.dto.BucketPermission"/>
<listEntry value="spe.common.dto.ErrorResponse"/>
<listEntry value="deepsight.dto.RiskType"/>
<listEntry value="policymanagement.PolicyGroupDetails"/>
<listEntry value="f24.dto.Target"/>
<listEntry value="ui.testclasses.E2EAzureUITest"/>
<listEntry value="docker.Docker"/>
<listEntry value="ui.testclasses.E2EAwsUITest"/>
<listEntry value="generalsettings.dto.EventHubSettings"/>
<listEntry value="policymanagement.dto.PolicySettingRule"/>
<listEntry value="regressionclasses.E2EAutomationGCPRHEL7"/>
<listEntry value="commonlibrary.CWPManagement"/>
<listEntry value="ui.common.lib.CommonUIMethods"/>
<listEntry value="policymanagement.dto.PolicyGroupView"/>
<listEntry value="commonlibrary.ElementTag"/>
<listEntry value="policymanagement.PolicyRuleManagment"/>
<listEntry value="regressionclasses.E2EAutomation_PolicyGroupTweakTests"/>
<listEntry value="spe.dashboard.lib.SpeDashboard"/>
<listEntry value="spe.s3.ui.dto.GetControllersListStatus"/>
<listEntry value="jobs.JobsCategory"/>
<listEntry value="cicd.dto.Package"/>
<listEntry value="spe.asset.dto.Hw"/>
<listEntry value="alertprofile.AlertProfileDetail"/>
<listEntry value="setuptestclasses.SetupProxyConfiguration"/>
<listEntry value="spe.s3.lib.SpeS3Constants"/>
<listEntry value="av.GetMalwareDetectionsChartResponse"/>
<listEntry value="instancePool.BucketPoolInput"/>
<listEntry value="awsintegration.CPIFUrlConstants"/>
<listEntry value="policymanagement.dto.AlertConfiguration"/>
<listEntry value="av.AntimalwareController"/>
<listEntry value="assets.UnifiedAsset"/>
<listEntry value="regressionclasses.E2ECreateLinuxImage"/>
<listEntry value="googlecloud.lib.GCPServiceAccountJson"/>
<listEntry value="commonlibrary.SimpleObfuscator"/>
<listEntry value="policymanagement.dto.NavigationItem"/>
<listEntry value="f24.dto.Deployments"/>
<listEntry value="spe.s3.ui.dto.GetBucketDetailsResponse"/>
<listEntry value="usermanagement.dto.Role"/>
<listEntry value="regressionclasses.E2EAutomationAWSWindows"/>
<listEntry value="f24.dto.F24ConfigStatus"/>
<listEntry value="av.AvDetailsDto"/>
<listEntry value="deepsight.dto.YAxis"/>
<listEntry value="generalsettings.dto.ImportEventsToAwsOverbridgeSettings"/>
<listEntry value="commonlibrary.Http"/>
<listEntry value="jobs.JobScheduleType"/>
<listEntry value="regressionclasses.E2EAVOnlySubscription"/>
<listEntry value="cicd.dto.Results"/>
<listEntry value="deepsight.dto.VulnerabilitiesThreatsPublicFilter"/>
<listEntry value="cicd.dto.Evidences"/>
<listEntry value="spe.nas.dto.NasEnrolmentResponse"/>
<listEntry value="policymanagement.PolicyManagement"/>
<listEntry value="spe.s3.ui.dto.GetControllersListResult"/>
<listEntry value="dashboard.ThreatDetails"/>
<listEntry value="regressionclasses.E2EAutomationAWSRHEL73WithProxy"/>
<listEntry value="alertprofile.PolicyBasedRuleDetail"/>
<listEntry value="spe.s3.ui.dto.BucketBlockPermission"/>
<listEntry value="testclasses.CleanClass"/>
<listEntry value="ui.settings.lib.DownloadAgentPage"/>
<listEntry value="commonlibrary.TestDataProvider"/>
<listEntry value="assets.dto.IncludedInstalledProduct"/>
<listEntry value="cicd.dto.Projects"/>
<listEntry value="e2e.PolicyCombinations"/>
<listEntry value="commonlibrary.Common"/>
<listEntry value="testclasses.SyntheticBATStage"/>
<listEntry value="spe.s3.lib.SpeS3Integrator"/>
<listEntry value="policymanagement.dto.PolicyNavigationData"/>
<listEntry value="policymanagement.PolicyTemplateId"/>
<listEntry value="spe.s3.schedule.dto.Trigger"/>
<listEntry value="publicapi.integration.ClientCredentials"/>
<listEntry value="instancePool.InstancePoolInput"/>
<listEntry value="alertprofile.PolicyDetail"/>
<listEntry value="commonlibrary.RestClient"/>
<listEntry value="policymanagement.dto.PolicyTemplate"/>
<listEntry value="spe.policy.dto.CopySpePolicyRequest"/>
<listEntry value="ui.testclasses.RbacViewerUITest"/>
<listEntry value="regressionclasses.AntimalwareTestWindows"/>
<listEntry value="ui.eventAlerts.lib.AlertProfileInfoObject"/>
<listEntry value="assets.dto.InstanceList"/>
<listEntry value="jobs.JobStates"/>
<listEntry value="setuptestclasses.DeploySpeCft"/>
<listEntry value="commonlibrary.JenkinsIntegration"/>
<listEntry value="policymanagement.dto.Version"/>
<listEntry value="regressionclasses.CICDPluginTests"/>
<listEntry value="spe.nas.dto.SpeConstants"/>
<listEntry value="regressionclasses.PolicySearchSortFilterPagination"/>
<listEntry value="testclasses.E2EAutomationAWSCentOS"/>
<listEntry value="deepsight.dto.VulnerabilityPublicDto"/>
<listEntry value="policymanagement.dto.StaticMetaDatas"/>
<listEntry value="usermanagement.UsersUtility"/>
<listEntry value="alertprofile.dto.AlertProfilePolicyRule"/>
<listEntry value="googlecloud.GoogleCloudUrlProcessor"/>
<listEntry value="ui.instances.lib.ContainersPage"/>
<listEntry value="dashboard.Dashboard"/>
<listEntry value="regressionclasses.CloudConnectionCleanup"/>
<listEntry value="spe.s3.ui.dto.StorageNotificationConfig"/>
<listEntry value="spe.s3.ui.dto.GetControllersListAssetIdentifiers"/>
<listEntry value="azure.AzureImages"/>
<listEntry value="testclasses.AlertProfileTest"/>
<listEntry value="alertprofile.OrderBy"/>
<listEntry value="report.CCReportController"/>
<listEntry value="ui.notification.lib.NotificationFilter"/>
<listEntry value="testclasses.E2EAzureAutomation"/>
<listEntry value="jobs.PolicyEnforcementJobDetailView"/>
<listEntry value="testclasses.SyntheticBATEUStage"/>
<listEntry value="policymanagement.dto.AttributeValue"/>
<listEntry value="ui.settings.lib.AzureConnectionPage"/>
<listEntry value="setuptestclasses.Users"/>
<listEntry value="alertprofile.dto.EventRuleCondition"/>
<listEntry value="ui.settings.lib.UsersPage"/>
<listEntry value="regressionclasses.UserManagementTests"/>
<listEntry value="testclasses.E2EAzureAutomationCentOS"/>
<listEntry value="instancePool.BucketDto"/>
<listEntry value="ui.testclasses.E2EGcpUITest"/>
<listEntry value="spe.asset.dto.Props"/>
<listEntry value="spe.s3.ui.dto.BucketAcl"/>
<listEntry value="regressionclasses.E2EVerfications"/>
<listEntry value="policymanagement.dto.MetaData"/>
<listEntry value="coverage.TestOnPremPolicyTemplateController"/>
<listEntry value="agent.DownloadAgentPackage"/>
<listEntry value="spe.policy.dto.SpePolicyJobHistory"/>
<listEntry value="spe.nas.ui.dto.Result"/>
<listEntry value="regressionclasses.SpeCloudConnectionConfig"/>
<listEntry value="spe.s3.lib.SpeCftInputConstants"/>
<listEntry value="commonlibrary.DateFormatter"/>
<listEntry value="policymanagement.dto.PolicyGroupSearchParams"/>
<listEntry value="e2e.EndToEndImpl"/>
<listEntry value="spe.nas.dto.Contents"/>
<listEntry value="alerts.SearchFilter"/>
<listEntry value="alertprofile.dto.AlertProfileEventRule"/>
<listEntry value="alerts.AlertManagement"/>
<listEntry value="awsintegration.AWSSSH"/>
<listEntry value="commonlibrary.Nexpose"/>
<listEntry value="testclasses.SpeNasIntegrationTests"/>
<listEntry value="applicationdiscovery.ApplicationDiscovery"/>
<listEntry value="spe.s3.ui.dto.GetControllersListResponse"/>
<listEntry value="awssaas.AWSSAASimpl"/>
<listEntry value="coverage.TestPolicyGroupController"/>
<listEntry value="alertprofile.dto.LogicalOperator"/>
<listEntry value="spe.asset.dto.Os"/>
<listEntry value="awsintegration.EventURL"/>
<listEntry value="applicationlibrary.DCSCloud"/>
<listEntry value="deepsight.DeepsightImport"/>
<listEntry value="spe.common.dto.ScannerLicenseStatusData"/>
<listEntry value="agent.AgentPackages"/>
<listEntry value="spe.nas.dto.LicenseInfo"/>
<listEntry value="deepsight.dto.RiskExposure"/>
<listEntry value="testclasses.E2EAutomationAWSWindows2016"/>
<listEntry value="policymanagement.dto.PolicyGroup"/>
<listEntry value="assets.dto.Props"/>
<listEntry value="commonlibrary.Localization"/>
<listEntry value="testclasses.JobsAndNotificationManagementTests"/>
<listEntry value="regressionclasses.DockerTests"/>
<listEntry value="regressionclasses.E2EAutomationOnPremWindows"/>
<listEntry value="oracle.common.dto.OciConstants"/>
<listEntry value="oracle.connection.dto.OcpProperties"/>
<listEntry value="alerts.AlertActivityData"/>
<listEntry value="policymanagement.PolicyLibrary"/>
<listEntry value="azureintegration.AzureConfig"/>
<listEntry value="docker.InstanceDTO"/>
<listEntry value="assets.dto.CpeWfn"/>
<listEntry value="spe.scannergroup.dto.ScannerGroupProps"/>
<listEntry value="regressionclasses.MultiDomainTests"/>
<listEntry value="alertprofile.EventConditionsOperator"/>
<listEntry value="spe.common.dto.GetDashboardResponse"/>
<listEntry value="oracle.connection.lib.OCIIntegration"/>
<listEntry value="policymanagement.PolicyTargetingController"/>
<listEntry value="awsintegration.dto.EventsUrl"/>
<listEntry value="ui.policy.lib.PolicyLibraryPage"/>
<listEntry value="regressionclasses.AlertsEventsAndAlertProfileTest"/>
<listEntry value="e2e.E2EWait"/>
<listEntry value="spe.scannergroup.dto.ListScannerGroupsProps"/>
<listEntry value="ui.notification.lib.NotificationPage"/>
<listEntry value="commonlibrary.FileUtil"/>
<listEntry value="awsintegration.AzureSubscription"/>
<listEntry value="alertprofile.EventType"/>
<listEntry value="cicd.dto.Packages"/>
<listEntry value="instancePool.NewInstance"/>
<listEntry value="commonlibrary.MariaDB"/>
<listEntry value="spe.common.dto.GetSpePoliciesFromGridRequest"/>
<listEntry value="deepsight.dto.InstanceRiskVo"/>
<listEntry value="jobs.JobNotification"/>
<listEntry value="spe.s3.ui.dto.Bucket_Cloud_account"/>
<listEntry value="regressionclasses.E2EUnixVMExtension"/>
<listEntry value="deepsight.dto.Threat"/>
<listEntry value="azure.dto.Data"/>
<listEntry value="googlecloud.lib.GCPConfig"/>
<listEntry value="generalsettings.dto.PrivateDeployment"/>
<listEntry value="setuptestclasses.ProxyTypes"/>
<listEntry value="azure.dto.ExecuteActionData"/>
<listEntry value="dashboard.dto.AssetStatusByRegion"/>
<listEntry value="av.AvUriConstants"/>
<listEntry value="multidomain.dto.DomainUser"/>
<listEntry value="regressionclasses.PolicyAutoEnforcementTests"/>
<listEntry value="regressionclasses.E2EAutomationAWSAmazonLinux2"/>
<listEntry value="commonlibrary.SSH"/>
<listEntry value="commonlibrary.Network"/>
<listEntry value="commonlibrary.Report"/>
<listEntry value="regressionclasses.DashboardTests"/>
<listEntry value="deepsight.dto.XAxis"/>
<listEntry value="coverage.TestPolicyTemplateController"/>
<listEntry value="spe.nas.lib.SpeNasPolicy"/>
<listEntry value="policymanagement.dto.Attribute"/>
<listEntry value="ui.testclasses.SearchFilterUITest"/>
<listEntry value="regressionclasses.E2EAutomationOnPrem"/>
<listEntry value="assets.dto.DeviceStatus"/>
<listEntry value="regressionclasses.DockerTests_Ubuntu16"/>
<listEntry value="azure.AzureVirtualMachineScaleSet"/>
<listEntry value="testclasses.MeteringAutomationAzureCentOS"/>
<listEntry value="policymanagement.dto.PsetMapEntry"/>
<listEntry value="testclasses.SyntheticBATPassiveDC"/>
<listEntry value="regressionclasses.CloudConnectionConfig"/>
<listEntry value="spe.nas.dto.ListScannersIncludedDcsScannerDevicesGroup"/>
<listEntry value="com.cwp.codecoverage.CwpCoverageServer"/>
<listEntry value="azure.Azure"/>
<listEntry value="ui.policy.lib.PolicyGroupPage"/>
<listEntry value="policymanagement.PolicyGroupController"/>
<listEntry value="regressionclasses.EnableCapabilitiesIPS"/>
<listEntry value="commonlibrary.UiFixtures"/>
<listEntry value="jobs.JobsManagement"/>
<listEntry value="awsintegration.dto.AutoScalingGroup"/>
<listEntry value="agent.AgentLogCollection"/>
<listEntry value="ui.settings.lib.Regions"/>
<listEntry value="ui.notification.lib.JobsPage"/>
<listEntry value="spe.common.dto.GetObjectsFromGridRequest"/>
<listEntry value="awsintegration.AWSConfig"/>
<listEntry value="dashboard.dto.SecurityPosture"/>
<listEntry value="awsintegration.dto.Properties"/>
<listEntry value="testclasses.AWSSaasMarketPlaceStorageTests"/>
<listEntry value="spe.common.dto.ScannerLicenseStatusDashboardResponse"/>
<listEntry value="ui.testclasses.SpeSearchFilterUITests"/>
<listEntry value="av.ChartEventData"/>
<listEntry value="awsintegration.AWSIntegration"/>
<listEntry value="testclasses.SubscriptionAutomationTests"/>
<listEntry value="setuptestclasses.InstancePool"/>
<listEntry value="commonlibrary.Log"/>
<listEntry value="awsintegration.dto.ProxyServer"/>
<listEntry value="f24.dto.CloudPlatformProvisioning"/>
<listEntry value="alertprofile.dto.AlertProfileGetAllResponse"/>
<listEntry value="ui.threatsVulnerability.lib.ThreatsPage"/>
<listEntry value="oracle.connection.dto.CreateConnectionRequest"/>
<listEntry value="googlecloud.lib.GCPIntegration"/>
<listEntry value="cicd.dto.Records"/>
<listEntry value="regressionclasses.E2EWindowsTestFactory"/>
<listEntry value="policymanagement.dto.PolicyTemplateView"/>
<listEntry value="testclasses.AuditControllerTests"/>
<listEntry value="policymanagement.dto.PolicySetting"/>
<listEntry value="alertprofile.AlertProfileManagement"/>
<listEntry value="testclasses.AWSSaasMarketPlaceTests"/>
<listEntry value="spe.nas.dto.ListScannersProps"/>
<listEntry value="regressionclasses.E2EJobsAndNotificationManagementTests"/>
<listEntry value="alertprofile.dto.AlertProfileInfo"/>
<listEntry value="policymanagement.dto.Property"/>
<listEntry value="regressionclasses.E2EAutomationAWSAmazonLinux2017"/>
<listEntry value="testclasses.EventManagmentTest"/>
<listEntry value="ui.threatsVulnerability.lib.VulnerabilitiesPage"/>
<listEntry value="assets.dto.InstanceState"/>
<listEntry value="testclasses.E2EAutomationAWSAmazonLinux"/>
<listEntry value="regressionclasses.E2EUnixPolicyContentTests"/>
<listEntry value="policymanagement.dto.PolicyContent"/>
<listEntry value="agent.CommandAgentStatus"/>
<listEntry value="alertprofile.dto.AlertProfileCRUDResponse"/>
<listEntry value="testclasses.Browser"/>
<listEntry value="regressionclasses.E2EVerificationsWithSqs"/>
<listEntry value="azureintegration.AzureIntegration"/>
<listEntry value="instancePool.InstanceDto"/>
<listEntry value="deepsight.dto.SuppressVulnerability"/>
<listEntry value="commonlibrary.TestListener"/>
<listEntry value="assets.dto.Status"/>
<listEntry value="cicd.lib.CICDPlugin"/>
<listEntry value="policymanagement.MinAgentVersion"/>
<listEntry value="spe.nas.dto.ListScannersIncludedInstalledProductsLicenseInfo"/>
<listEntry value="spe.asset.dto.ListSpeAssetResponse"/>
<listEntry value="ui.testclasses.PolicyReapplyTests"/>
<listEntry value="av.DayOfWeek"/>
<listEntry value="policymanagement.dto.InputFormat"/>
<listEntry value="alertprofile.dto.EventCompositeCondition"/>
<listEntry value="av.RecurringJobType"/>
<listEntry value="alerts.AlertFilter"/>
<listEntry value="ui.common.lib.Navigate"/>
<listEntry value="usermanagement.AuditControllerImpl"/>
<listEntry value="deepsight.dto.Vulnerability"/>
<listEntry value="awsintegration.AWSRegions"/>
<listEntry value="policymanagement.dto.BytesPolicyContent"/>
<listEntry value="spe.policy.dto.GetSpePolicyVersionDetailResponse"/>
<listEntry value="agent.Command"/>
<listEntry value="policymanagement.dto.MetaDataAttributes"/>
<listEntry value="event.EventGenerationResponse"/>
<listEntry value="awsintegration.AdapterConfigurationStatus"/>
<listEntry value="commonlibrary.LoggingListener"/>
<listEntry value="ui.settings.lib.GeneralSettings"/>
<listEntry value="multidomain.dto.CreateDomainRequest"/>
<listEntry value="googlecloud.GCPConstants"/>
<listEntry value="regressionclasses.AntimalwareTest"/>
<listEntry value="spe.asset.dto.CreateSpeAssetRequest"/>
<listEntry value="googlecloud.lib.GCPInstanceState"/>
<listEntry value="regressionclasses.E2EAzureVMExtensionUbuntu"/>
<listEntry value="regressionclasses.E2EAzureVMExtensionOEL"/>
<listEntry value="deepsight.dto.PaginatedRisksFilter"/>
<listEntry value="jobs.AVJobDetailsView"/>
<listEntry value="testclasses.PolicyE2EContentCertificationTests"/>
<listEntry value="ui.settings.lib.ConnectionDetails"/>
<listEntry value="spe.s3.schedule.dto.Schedule"/>
<listEntry value="policymanagement.dto.SettingRuleAssociatedOptionData"/>
<listEntry value="setuptestclasses.DownloadAndInstallAgent"/>
<listEntry value="regressionclasses.DeepsightImportTest"/>
<listEntry value="spe.asset.dto.ListSpeAssetsProps"/>
<listEntry value="policymanagement.dto.Choices"/>
<listEntry value="f24.dto.Step"/>
<listEntry value="spe.s3.ui.dto.GetControllersListIncludedInstalledProducts"/>
<listEntry value="ui.common.lib.SearchInfoObject"/>
<listEntry value="commonlibrary.ErrorResponse"/>
<listEntry value="regressionclasses.DeepsightLiveAgentAPITest"/>
<listEntry value="spe.common.dto.DashboardEventData"/>
<listEntry value="commonlibrary.Selenium"/>
<listEntry value="deepsight.dto.SeriesData"/>
<listEntry value="deepsight.dto.RiskSeverity"/>
<listEntry value="cicd.dto.Fldatalist"/>
<listEntry value="commonlibrary.JSONDateDeserializer"/>
<listEntry value="regressionclasses.AntimalwarePolicySettingsWorkflowTest"/>
<listEntry value="regressionclasses.E2EUnixPolicyContentWithDiscoveryTests"/>
<listEntry value="ui.eventAlerts.lib.EventsPage"/>
<listEntry value="awsintegration.AdapterConfiguration"/>
<listEntry value="spe.common.dto.GetAllNotificationsResponse"/>
<listEntry value="ui.eventAlerts.lib.AlertProfilePage"/>
<listEntry value="f24.dto.WithAgentDeployment"/>
<listEntry value="alertprofile.dto.EventCondition"/>
<listEntry value="regressionclasses.E2EAzureVMExtensionCentOS"/>
<listEntry value="assets.dto.SecurityAgent"/>
<listEntry value="spe.s3.schedule.dto.Scope"/>
<listEntry value="commonlibrary.VMWareSDK"/>
<listEntry value="spe.nas.ui.dto.IncludedInstalledProductsLicenseInfo"/>
<listEntry value="spe.asset.dto.ListSpeAssetsIncludedDcsTargetDevicesGroup"/>
<listEntry value="spe.policy.dto.PoliciesResults"/>
<listEntry value="commonlibrary.Azure"/>
<listEntry value="commonlibrary.UserDto"/>
<listEntry value="regressionclasses.E2EAzureAutomationCentOS73"/>
<listEntry value="alertprofile.dto.RuleActionDTO"/>
<listEntry value="commonlibrary.ErrorObject"/>
<listEntry value="generalsettings.dto.Attribute"/>
<listEntry value="multidomain.lib.MultidomainController"/>
<listEntry value="event.SearchFilter"/>
<listEntry value="commonlibrary.AWS"/>
<listEntry value="spe.nas.dto.AssetIdentifiers"/>
<listEntry value="regressionclasses.E2EAutomationGCPWindows"/>
<listEntry value="spe.scannergroup.dto.CreateScannerGroupRequest"/>
<listEntry value="deepsight.dto.ThreatDuration"/>
<listEntry value="spe.asset.dto.AssetIdentifiers"/>
<listEntry value="cicd.dto.VerFldatalist"/>
<listEntry value="azure.AzureUtils"/>
<listEntry value="ui.settings.lib.GcpConnectionPage"/>
<listEntry value="spe.s3.ui.dto.BucketProps"/>
<listEntry value="policymanagement.OnPremPolicyTemplateController"/>
<listEntry value="spe.nas.dto.NasUpdateInfoRequest"/>
<listEntry value="commonlibrary.Config"/>
<listEntry value="policymanagement.dto.NavigationParameter"/>
<listEntry value="policymanagement.dto.StaticMetaData"/>
<listEntry value="policymanagement.dto.Choice"/>
<listEntry value="regressionclasses.AWSPollingTest"/>
<listEntry value="regressionclasses.SpeS3P2Tests"/>
<listEntry value="ui.eventAlerts.lib.AlertsPage"/>
<listEntry value="jobs.JobStatus"/>
<listEntry value="regressionclasses.AntimalwareTestWindows2"/>
<listEntry value="spe.s3.ui.dto.CloudAccount"/>
<listEntry value="spe.nas.lib.SpeNasScannerGroups"/>
<listEntry value="spe.nas.dto.Status"/>
<listEntry value="regressionclasses.AzureManagementAPITests"/>
<listEntry value="applicationlibrary.Cleanup"/>
<listEntry value="spe.nas.lib.SpeCommonLib"/>
<listEntry value="spe.common.dto.ScannerHealthStatusDashboardResponse"/>
<listEntry value="policymanagement.PolicyObject"/>
<listEntry value="commonlibrary.Windows"/>
<listEntry value="commonlibrary.TestStatus"/>
<listEntry value="ui.eventAlerts.lib.EventBasedRuleInfoObject"/>
<listEntry value="spe.common.dto.NotificationData"/>
<listEntry value="policymanagement.UpdatePolicyRequest"/>
<listEntry value="deepsight.dto.SeverityFilter"/>
<listEntry value="alertprofile.dto.EventAttribute"/>
<listEntry value="jobs.JobCategory"/>
<listEntry value="regressionclasses.E2EAutomationSupportability"/>
<listEntry value="commonlibrary.TestAssert"/>
<listEntry value="policymanagement.dto.PolicyRuleDTO"/>
<listEntry value="commonlibrary.FixturesNew"/>
<listEntry value="spe.dashboard.dto.ThreatSummaryEventData"/>
<listEntry value="jobs.JobSchedule"/>
<listEntry value="awsintegration.AdapterConfigDefaults"/>
<listEntry value="deepsight.dto.ThreatListVO"/>
<listEntry value="spe.s3.ui.dto.GetControllersListOs"/>
<listEntry value="usermanagement.dto.UserConstants"/>
<listEntry value="spe.nas.dto.ListScannersResult"/>
<listEntry value="publicapi.integration.ClientAPI"/>
<listEntry value="commonlibrary.RestAPIBase"/>
<listEntry value="spe.nas.dto.NasEnrolmentRequest"/>
<listEntry value="awsintegration.dto.AwsProperties"/>
<listEntry value="awsintegration.AzureProperties"/>
<listEntry value="assets.dto.CloudPlatform"/>
<listEntry value="customeronboarding.CustomerOnBoarding"/>
<listEntry value="alertprofile.dto.AlertProfileNotification"/>
<listEntry value="spe.common.dto.ScannerHealthStatusData"/>
<listEntry value="testclasses.SyntheticBATEUProd"/>
<listEntry value="policymanagement.dto.InputFormatField"/>
<listEntry value="spe.asset.dto.ListSpeAssetsResult"/>
<listEntry value="spe.asset.dto.Device"/>
<listEntry value="commonlibrary.RestResponse"/>
<listEntry value="testclasses.E2EAutomationAWSRHEL"/>
<listEntry value="f24.F24"/>
<listEntry value="regressionclasses.E2EAutomationGCPCentOS7"/>
<listEntry value="spe.policy.dto.SpePolicyJobDetails"/>
<listEntry value="setuptestclasses.S3BucketPool"/>
<listEntry value="deepsight.dto.VulnerabilityPublicDtoListVO"/>
<listEntry value="regressionclasses.EnableCapablilities"/>
<listEntry value="spe.s3.ui.dto.GetControllersListCpeWfn"/>
<listEntry value="regressionclasses.RecommendationsE2EVerifications"/>
<listEntry value="spe.nas.dto.SupportedAssetTypes"/>
<listEntry value="setuptestclasses.SpeUatBucketPool"/>
<listEntry value="spe.nas.dto.ListScannersResponse"/>
<listEntry value="spe.s3.ui.dto.Result"/>
<listEntry value="jobs.JobCategoryView"/>
<listEntry value="spe.dashboard.dto.GetThreatSummaryDashboardResponse"/>
<listEntry value="assets.dto.InstanceFilterDto"/>
<listEntry value="regressionclasses.OCIConnectionTests"/>
<listEntry value="commonlibrary.Etrack"/>
<listEntry value="coverage.TestAssetVulnerabilityAndThreat"/>
<listEntry value="setuptestclasses.AutomationProxySettings"/>
<listEntry value="spe.asset.dto.CpeWfn"/>
<listEntry value="regressionclasses.GCPPollingTest"/>
<listEntry value="jobs.JobHistory"/>
<listEntry value="assets.dto.AgentInstalled"/>
<listEntry value="regressionclasses.MixedModePolicyGropuCreation"/>
<listEntry value="spe.s3.ui.dto.Bucket_Storage_notification_config"/>
<listEntry value="azure.Platform"/>
<listEntry value="regressionclasses.E2EAzureVMExtensionWindows"/>
<listEntry value="commonlibrary.GoogleAuthentication"/>
<listEntry value="commonlibrary.MailClient"/>
<listEntry value="spe.s3.ui.dto.AccountBlockPermission"/>
<listEntry value="ui.settings.lib.OSPlatform"/>
<listEntry value="assets.dto.SearchTextFilter"/>
<listEntry value="publicapi.dto.PublicApiDto"/>
<listEntry value="policymanagement.ExternalAPIController"/>
<listEntry value="googlecloud.lib.GCPProperties"/>
<listEntry value="spe.nas.lib.SpeNasIntegrator"/>
<listEntry value="testclasses.SyntheticBATDev"/>
<listEntry value="ui.common.lib.SortInfoObject"/>
<listEntry value="login.LoginPage"/>
<listEntry value="spe.common.dto.ErrorResponseJson"/>
<listEntry value="regressionclasses.AntimalwarePolicyGroupFlowTest"/>
<listEntry value="awsintegration.dto.SecurityGroupDetails"/>
<listEntry value="ui.settings.lib.GeneralSettingsPage"/>
<listEntry value="ui.settings.lib.APIKeysPage"/>
<listEntry value="commonlibrary.ElementRepository"/>
<listEntry value="event.EventManagement"/>
<listEntry value="spe.policy.dto.SpePolicyJobDetail"/>
<listEntry value="awsintegration.dto.AzureProperties"/>
<listEntry value="spe.nas.lib.SpeNasAsset"/>
<listEntry value="regressionclasses.E2ECreateWindowsImage"/>
<listEntry value="awsintegration.dto.MachineImage"/>
<listEntry value="spe.nas.ui.dto.LicenseInfo"/>
<listEntry value="usermanagement.lib.UserController"/>
<listEntry value="policymanagement.dto.Parametervalue"/>
<listEntry value="awssaas.CustomerSignUpInfo"/>
<listEntry value="spe.s3.ui.dto.Props"/>
<listEntry value="awsintegration.AzureSubscriptionState"/>
<listEntry value="spe.policy.dto.SpePolicy"/>
<listEntry value="policymanagement.dto.PsetMap"/>
<listEntry value="googlecloud.adapter.dto.GCPAdapterConfig"/>
<listEntry value="setuptestclasses.AntimalwarePolicyModeChange"/>
<listEntry value="setuptestclasses.DeploySpeCftForUat"/>
<listEntry value="ui.settings.lib.OSVersions"/>
<listEntry value="regressionclasses.E2EAzureAutomationRHEL73"/>
<listEntry value="policymanagement.dto.PolicyGroupMode"/>
<listEntry value="alertprofile.dto.AlertProfilePolicy"/>
<listEntry value="coverage.TestCCDashboardController"/>
<listEntry value="policymanagement.dto.SettingRuleAssociatedRuleData"/>
<listEntry value="commonlibrary.RabbitMQ"/>
<listEntry value="policymanagement.dto.ChoiceGroups"/>
<listEntry value="spe.nas.ui.dto.NasListUi"/>
<listEntry value="setuptestclasses.SpeCleanup"/>
<listEntry value="alertprofile.Severity"/>
<listEntry value="regressionclasses.E2EAutomationAWSWindowsForProduction"/>
<listEntry value="generalsettings.dto.GeneralSettingsDto"/>
<listEntry value="azure.AzureVMDetail"/>
<listEntry value="deepsight.dto.ThreatPublicDtoListVO"/>
<listEntry value="usermanagement.dto.ProxySettings"/>
<listEntry value="multidomain.dto.DomainConstants"/>
<listEntry value="spe.policy.dto.GetSpeWorkspacePoliciesResponse"/>
<listEntry value="regressionclasses.E2EPolicyTuningTests"/>
<listEntry value="awsintegration.dto.AdapterConfig"/>
<listEntry value="awsintegration.dto.SecurityGroupRules"/>
<listEntry value="commonlibrary.CWPTestContext"/>
<listEntry value="ui.settings.lib.AwsConnectionPage"/>
<listEntry value="spe.common.dto.NotificationDetailList"/>
<listEntry value="policymanagement.dto.Value"/>
<listEntry value="regressionclasses.E2EAutomationAWSCentOS73"/>
<listEntry value="googlecloud.GCPUrlType"/>
<listEntry value="alertprofile.AlertProfileFilter"/>
<listEntry value="testclasses.MeteringAutomationAWSRHEL"/>
<listEntry value="policymanagement.dto.SchemaFieldsDTO"/>
<listEntry value="spe.s3.ui.dto.GetControllersListProps"/>
<listEntry value="alertprofile.AlertConfigurationInfo"/>
<listEntry value="spe.nas.dto.SpeStorageBridge"/>
<listEntry value="assets.dto.Result"/>
<listEntry value="jobs.JobsConstants"/>
<listEntry value="spe.s3.ui.dto.GetControllersListPotentialRisk"/>
<listEntry value="regressionclasses.E2EWindowsPolicyContentTests"/>
<listEntry value="agent.Commands"/>
<listEntry value="alertprofile.EventRuleDetail"/>
<listEntry value="deepsight.dto.CriticalRisks"/>
<listEntry value="commonlibrary.RestTemplateClient"/>
<listEntry value="scheduler.Scheduler"/>
<listEntry value="deepsight.dto.Title"/>
<listEntry value="alertprofile.EventBasedCondition"/>
<listEntry value="policymanagement.dto.PolicySettingsSection"/>
<listEntry value="agent.AgentInstallState"/>
<listEntry value="instancePool.ExistingInstance"/>
<listEntry value="commonlibrary.Xml"/>
<listEntry value="commonlibrary.JsonHelper"/>
</listAttribute>
<listAttribute key="org.testng.eclipse.METHOD_TEST_LIST"/>
<listAttribute key="org.testng.eclipse.PACKAGE_TEST_LIST"/>
<stringAttribute key="org.testng.eclipse.PRE_DEFINED_LISTENERS" value=""/>
<intAttribute key="org.testng.eclipse.TYPE" value="1"/>
</launchConfiguration>
